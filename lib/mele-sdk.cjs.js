'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var elliptic = require('elliptic');
var shajs = require('sha.js');
var amino = require('@cosmjs/amino');
var encoding = require('@cosmjs/encoding');
var bip39 = require('bip39');
var crypto = require('crypto');
var buffer = require('buffer');
var path = require('path');
var fs = require('fs');
var util = require('util');
var readableStream = require('readable-stream');
var protoSigning = require('@cosmjs/proto-signing');
var bip32 = require('bip32');
var bech32 = require('bech32');
var numberToBN = require('number-to-bn');
var events = require('events');
var promiseRetry = require('promise-retry');
var fetch$1 = require('cross-fetch');
var queryString = require('query-string');
var BigNumber = require('bignumber.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () {
                        return e[k];
                    }
                });
            }
        });
    }
    n['default'] = e;
    return Object.freeze(n);
}

var elliptic__default = /*#__PURE__*/_interopDefaultLegacy(elliptic);
var shajs__default = /*#__PURE__*/_interopDefaultLegacy(shajs);
var encoding__default = /*#__PURE__*/_interopDefaultLegacy(encoding);
var bip39__default = /*#__PURE__*/_interopDefaultLegacy(bip39);
var bip39__namespace = /*#__PURE__*/_interopNamespace(bip39);
var crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);
var buffer__default = /*#__PURE__*/_interopDefaultLegacy(buffer);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var util__default = /*#__PURE__*/_interopDefaultLegacy(util);
var readableStream__default = /*#__PURE__*/_interopDefaultLegacy(readableStream);
var bip32__namespace = /*#__PURE__*/_interopNamespace(bip32);
var bech32__default = /*#__PURE__*/_interopDefaultLegacy(bech32);
var numberToBN__default = /*#__PURE__*/_interopDefaultLegacy(numberToBN);
var promiseRetry__default = /*#__PURE__*/_interopDefaultLegacy(promiseRetry);
var fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch$1);
var queryString__default = /*#__PURE__*/_interopDefaultLegacy(queryString);
var BigNumber__default = /*#__PURE__*/_interopDefaultLegacy(BigNumber);

var minimal$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    get default () { return minimal$1; },
    get __moduleExports () { return minimal$1; }
});

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

const Keys$9 = {
    Query: {
        QueryPath: 'control',
        ParametersPath: 'params',
        ExecutionsPath: 'executions',
        ExecutionPath: 'execution',
    }
};
class ControlQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$9.Query.QueryPath;
        const ParametersPath = Keys$9.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getExecutions() {
        const QueryPath = Keys$9.Query.QueryPath;
        const ExecutionsPath = Keys$9.Query.ExecutionsPath;
        return this._transport.query([], '', QueryPath, ExecutionsPath);
    }
    getExecution(id) {
        const QueryPath = Keys$9.Query.QueryPath;
        const ExecutionPath = Keys$9.Query.ExecutionPath;
        return this._transport.query([], JSON.stringify({
            ExecutionID: id,
        }), QueryPath, ExecutionPath);
    }
}

const Keys$8 = {
    Query: {
        QueryPath: 'mdistribution',
        ParametersPath: 'params',
        ValidatorOutstandingRewardsPath: 'validator_outstanding_rewards',
        ValidatorCommissionPath: 'validator_commission',
        ValidatorSlashesPath: 'validator_slashes',
        DelegationRewardsPath: 'delegation_rewards',
        DelegatorTotalRewardsPath: 'delegator_total_rewards',
        DelegatorValidatorsPath: 'delegator_validators',
        WithdrawAddrPath: 'withdraw_addr',
        CommunityPoolPath: 'community_pool',
        BurnedPoolPath: 'burned_pool',
    }
};
class DistributionQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$8.Query.QueryPath;
        const ParametersPath = Keys$8.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getValidatorOutstandingRewards(validator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const ValidatorOutstandingRewardsPath = Keys$8.Query.ValidatorOutstandingRewardsPath;
        return this._transport.query([], JSON.stringify({ validator_address: validator }), QueryPath, ValidatorOutstandingRewardsPath);
    }
    getValidatorCommission(validator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const ValidatorCommissionPath = Keys$8.Query.ValidatorCommissionPath;
        return this._transport.query([], JSON.stringify({ validator_address: validator }), QueryPath, ValidatorCommissionPath);
    }
    getValidatorSlashes(validator, startHeight, endHeight) {
        const QueryPath = Keys$8.Query.QueryPath;
        const ValidatorSlashesPath = Keys$8.Query.ValidatorSlashesPath;
        return this._transport.query([], JSON.stringify({
            validator_address: validator,
            starting_height: startHeight,
            ending_height: endHeight,
        }), QueryPath, ValidatorSlashesPath);
    }
    getDelegationRewards(delegator, validator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const DelegationRewardsPath = Keys$8.Query.DelegationRewardsPath;
        return this._transport.query([], JSON.stringify({ delegator_address: delegator, validator_address: validator }), QueryPath, DelegationRewardsPath);
    }
    getDelegatorTotalRewards(delegator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const DelegatorTotalRewardsPath = Keys$8.Query.DelegatorTotalRewardsPath;
        return this._transport.query([], JSON.stringify({ delegator_address: delegator }), QueryPath, DelegatorTotalRewardsPath);
    }
    getDelegatorValidators(delegator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const DelegatorValidatorsPath = Keys$8.Query.DelegatorValidatorsPath;
        return this._transport.query([], JSON.stringify({ delegator_address: delegator }), QueryPath, DelegatorValidatorsPath);
    }
    getWithdrawAddress(delegator) {
        const QueryPath = Keys$8.Query.QueryPath;
        const WithdrawAddrPath = Keys$8.Query.WithdrawAddrPath;
        return this._transport.query([], JSON.stringify({ delegator_address: delegator }), QueryPath, WithdrawAddrPath);
    }
    getCommunityPool() {
        const QueryPath = Keys$8.Query.QueryPath;
        const CommunityPoolPath = Keys$8.Query.CommunityPoolPath;
        return this._transport.query([], '', QueryPath, CommunityPoolPath);
    }
    getBurnedPool() {
        const QueryPath = Keys$8.Query.QueryPath;
        const BurnedPoolPath = Keys$8.Query.BurnedPoolPath;
        return this._transport.query([], '', QueryPath, BurnedPoolPath);
    }
}

const Keys$7 = {
    Query: {
        QueryPath: 'fee',
        ParametersPath: 'parameters',
        ExcludedMessagesPath: 'excluded-messages',
    }
};
class FeeQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$7.Query.QueryPath;
        const ParametersPath = Keys$7.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getExcludedMessages() {
        const QueryPath = Keys$7.Query.QueryPath;
        const ExcludedMessagesPath = Keys$7.Query.ExcludedMessagesPath;
        return this._transport.query([], '', QueryPath, ExcludedMessagesPath);
    }
}

const Keys$6 = {
    Query: {
        QueryPath: 'mgov',
        ParametersPath: 'params',
        ProposalsPath: 'proposals',
        ProposalPath: 'proposal',
        DepositsPath: 'deposits',
        DepositPath: 'deposit',
        VotesPath: 'votes',
        VotePath: 'vote',
        TallyPath: 'tally',
        ParamDepositPath: 'deposit',
        ParamVotingPath: 'voting',
        ParamTallyingPath: 'tallying',
    }
};
class GovQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        return __awaiter(this, void 0, void 0, function* () {
            const QueryPath = Keys$6.Query.QueryPath;
            const ParametersPath = Keys$6.Query.ParametersPath;
            const ParamDepositPath = Keys$6.Query.ParamDepositPath;
            const ParamVotingPath = Keys$6.Query.ParamVotingPath;
            const ParamTallyingPath = Keys$6.Query.ParamTallyingPath;
            let deposit = yield this._transport.query([ParamDepositPath], '', QueryPath, ParametersPath);
            let voting = yield this._transport.query([ParamVotingPath], '', QueryPath, ParametersPath);
            let tallying = yield this._transport.query([ParamTallyingPath], '', QueryPath, ParametersPath);
            return {
                deposit: deposit,
                tally: tallying,
                voting: voting,
            };
        });
    }
    getProposals(voter = '', depositor = '', status = 0, page = 1, limit = 100) {
        const QueryPath = Keys$6.Query.QueryPath;
        const ProposalsPath = Keys$6.Query.ProposalsPath;
        return this._transport.query([], JSON.stringify({
            Page: String(page),
            Limit: String(limit),
            Voter: voter,
            Depositor: depositor,
            ProposalStatus: status,
        }), QueryPath, ProposalsPath);
    }
    getProposal(id) {
        const QueryPath = Keys$6.Query.QueryPath;
        const ProposalPath = Keys$6.Query.ProposalPath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
        }), QueryPath, ProposalPath);
    }
    getDeposits(id) {
        const QueryPath = Keys$6.Query.QueryPath;
        const DepositsPath = Keys$6.Query.DepositsPath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
        }), QueryPath, DepositsPath);
    }
    getDeposit(id, depositor) {
        const QueryPath = Keys$6.Query.QueryPath;
        const DepositPath = Keys$6.Query.DepositPath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
            Depositor: depositor,
        }), QueryPath, DepositPath);
    }
    getVotes(id, page = 1, limit = 100) {
        const QueryPath = Keys$6.Query.QueryPath;
        const VotesPath = Keys$6.Query.VotesPath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
            Page: String(page),
            Limit: String(limit),
        }), QueryPath, VotesPath);
    }
    getVote(id, voter) {
        const QueryPath = Keys$6.Query.QueryPath;
        const VotePath = Keys$6.Query.VotePath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
            Voter: voter,
        }), QueryPath, VotePath);
    }
    getTally(id) {
        const QueryPath = Keys$6.Query.QueryPath;
        const TallyPath = Keys$6.Query.TallyPath;
        return this._transport.query([], JSON.stringify({
            ProposalID: id,
        }), QueryPath, TallyPath);
    }
}

const Keys$5 = {
    Query: {
        QueryPath: 'mint',
        ParametersPath: 'parameters',
        InflationPath: 'inflation',
        AnnualProvisionsPath: 'annual_provisions',
    }
};
class MintQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$5.Query.QueryPath;
        const ParametersPath = Keys$5.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getInflation() {
        const QueryPath = Keys$5.Query.QueryPath;
        const InflationPath = Keys$5.Query.InflationPath;
        return this._transport.query([], '', QueryPath, InflationPath);
    }
    getAnnualProvisions() {
        const QueryPath = Keys$5.Query.QueryPath;
        const AnnualProvisionsPath = Keys$5.Query.AnnualProvisionsPath;
        return this._transport.query([], '', QueryPath, AnnualProvisionsPath);
    }
}

const Keys$4 = {
    Query: {
        QueryPath: 'mslashing',
        ParametersPath: 'parameters',
        SigningInfoPath: 'signingInfo',
        SigningInfosPath: 'signingInfos',
    }
};
class SlashingQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$4.Query.QueryPath;
        const ParametersPath = Keys$4.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getSigningInfo(consAddress) {
        const QueryPath = Keys$4.Query.QueryPath;
        const SigningInfoPath = Keys$4.Query.SigningInfoPath;
        return this._transport.query([], JSON.stringify({
            ConsAddress: consAddress,
        }), QueryPath, SigningInfoPath);
    }
    getSigningInfos() {
        const QueryPath = Keys$4.Query.QueryPath;
        const SigningInfosPath = Keys$4.Query.SigningInfosPath;
        return this._transport.query([], JSON.stringify({
            Page: '1',
            Limit: '0',
        }), QueryPath, SigningInfosPath);
    }
}

const Keys$3 = {
    Query: {
        QueryPath: 'mstaking',
        ValidatorsPath: 'validators',
        ValidatorPath: 'validator',
        DelegatorDelegationsPath: 'delegatorDelegations',
        DelegatorUnbondingDelegationsPath: 'delegatorUnbondingDelegations',
        RedelegationsPath: 'redelegations',
        ValidatorDelegationsPath: 'validatorDelegations',
        ValidatorRedelegationsPath: 'validatorRedelegations',
        ValidatorUnbondingDelegationsPath: 'validatorUnbondingDelegations',
        DelegationPath: 'delegation',
        UnbondingDelegationPath: 'unbondingDelegation',
        DelegatorValidatorsPath: 'delegatorValidators',
        DelegatorValidatorPath: 'delegatorValidator',
        PoolPath: 'pool',
        ParametersPath: 'parameters',
        HistoricalInfoPath: 'historicalInfo',
    }
};
class StakingQuery {
    constructor(transport, mint) {
        this._transport = transport;
        this._mint = mint;
    }
    getValidators() {
        const QueryPath = Keys$3.Query.QueryPath;
        const ValidatorsPath = Keys$3.Query.ValidatorsPath;
        return this._transport.query([], JSON.stringify({
            Status: 'BOND_STATUS_BONDED',
            Page: '1',
            Limit: '1000',
        }), QueryPath, ValidatorsPath);
    }
    getValidator(address) {
        const QueryPath = Keys$3.Query.QueryPath;
        const ValidatorPath = Keys$3.Query.ValidatorPath;
        return this._transport.query([], JSON.stringify({ ValidatorAddr: address }), QueryPath, ValidatorPath);
    }
    getValidatorDelegations(address) {
        const QueryPath = Keys$3.Query.QueryPath;
        const ValidatorDelegationsPath = Keys$3.Query.ValidatorDelegationsPath;
        return this._transport.query([], JSON.stringify({ ValidatorAddr: address, Page: '1' }), QueryPath, ValidatorDelegationsPath);
    }
    getValidatorUnbondingDelegations(address) {
        const QueryPath = Keys$3.Query.QueryPath;
        const ValidatorUnbondingDelegationsPath = Keys$3.Query.ValidatorUnbondingDelegationsPath;
        return this._transport.query([], JSON.stringify({ ValidatorAddr: address, Page: '1' }), QueryPath, ValidatorUnbondingDelegationsPath);
    }
    getDelegation(delegatorAddress, validatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const DelegationPath = Keys$3.Query.DelegationPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress, ValidatorAddr: validatorAddress }), QueryPath, DelegationPath);
    }
    getUnbondingDelegation(delegatorAddress, validatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const UnbondingDelegationPath = Keys$3.Query.UnbondingDelegationPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress, ValidatorAddr: validatorAddress }), QueryPath, UnbondingDelegationPath);
    }
    getDelegatorDelegations(delegatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const DelegatorDelegationsPath = Keys$3.Query.DelegatorDelegationsPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress }), QueryPath, DelegatorDelegationsPath);
    }
    getDelegatorUnbondingDelegations(delegatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const DelegatorUnbondingDelegationsPath = Keys$3.Query.DelegatorUnbondingDelegationsPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress }), QueryPath, DelegatorUnbondingDelegationsPath);
    }
    getRedelegations(delegatorAddress, srcValidatorAddress, dstValidatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const RedelegationsPath = Keys$3.Query.RedelegationsPath;
        return this._transport.query([], JSON.stringify({
            DelegatorAddr: delegatorAddress,
            SrcValidatorAddr: srcValidatorAddress,
            DstValidatorAddr: dstValidatorAddress,
        }), QueryPath, RedelegationsPath);
    }
    getDelegatorValidators(delegatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const DelegatorValidatorsPath = Keys$3.Query.DelegatorValidatorsPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress }), QueryPath, DelegatorValidatorsPath);
    }
    getDelegatorValidator(delegatorAddress, validatorAddress) {
        const QueryPath = Keys$3.Query.QueryPath;
        const DelegatorValidatorPath = Keys$3.Query.DelegatorValidatorPath;
        return this._transport.query([], JSON.stringify({ DelegatorAddr: delegatorAddress, ValidatorAddr: validatorAddress }), QueryPath, DelegatorValidatorPath);
    }
    getHistoricalInfo(height) {
        const QueryPath = Keys$3.Query.QueryPath;
        const HistoricalInfoPath = Keys$3.Query.HistoricalInfoPath;
        return this._transport.query([], JSON.stringify({ Height: String(height) }), QueryPath, HistoricalInfoPath);
    }
    getParameters() {
        const QueryPath = Keys$3.Query.QueryPath;
        const ParametersPath = Keys$3.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getPool() {
        const QueryPath = Keys$3.Query.QueryPath;
        const PoolPath = Keys$3.Query.PoolPath;
        return this._transport.query([], '', QueryPath, PoolPath);
    }
    getRewardRate() {
        return __awaiter(this, void 0, void 0, function* () {
            let pool = yield this.getPool();
            let inflation = yield this._mint.getInflation();
            let mintParams = yield this._mint.getParameters();
            inflation = Number(inflation) * (1 + Number(mintParams.inflation_rate_change || 0));
            let rRate = ((Number(pool.not_bonded_tokens) + Number(pool.bonded_tokens)) * Number(inflation)) /
                Number(pool.bonded_tokens);
            return rRate;
        });
    }
}

const Keys$2 = {
    Query: {
        QueryPath: 'bank',
        TotalSupplyPath: 'total_supply',
        SupplyOfPath: 'supply_of',
    }
};
class SupplyQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getTotalSupply() {
        const QueryPath = Keys$2.Query.QueryPath;
        const TotalSupplyPath = Keys$2.Query.TotalSupplyPath;
        return this._transport.query([], '', QueryPath, TotalSupplyPath);
    }
    getSupplyOf(denom) {
        const QueryPath = Keys$2.Query.QueryPath;
        const SupplyOfPath = Keys$2.Query.SupplyOfPath;
        return this._transport.query([], JSON.stringify({
            Denom: denom,
        }), QueryPath, SupplyOfPath);
    }
}

const Keys$1 = {
    Query: {
        QueryPath: 'treasury',
        ParametersPath: 'parameters',
        TreasuryPath: 'treasury',
        OperatorsPath: 'operators',
        DisbursementsPath: 'disbursements',
        AllDisbursementsPath: 'all_disbursements',
        BurnsPath: 'burns',
    }
};
class TreasuryQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getParameters() {
        const QueryPath = Keys$1.Query.QueryPath;
        const ParametersPath = Keys$1.Query.ParametersPath;
        return this._transport.query([], '', QueryPath, ParametersPath);
    }
    getTreasury() {
        const QueryPath = Keys$1.Query.QueryPath;
        const TreasuryPath = Keys$1.Query.TreasuryPath;
        return this._transport.query([], '', QueryPath, TreasuryPath);
    }
    getOperators() {
        const QueryPath = Keys$1.Query.QueryPath;
        const OperatorsPath = Keys$1.Query.OperatorsPath;
        return this._transport.query([], '', QueryPath, OperatorsPath);
    }
    getDisbursements() {
        const QueryPath = Keys$1.Query.QueryPath;
        const DisbursementsPath = Keys$1.Query.DisbursementsPath;
        return this._transport.query([], '', QueryPath, DisbursementsPath);
    }
    getAllDisbursements() {
        const QueryPath = Keys$1.Query.QueryPath;
        const AllDisbursementsPath = Keys$1.Query.AllDisbursementsPath;
        return this._transport.query([], '', QueryPath, AllDisbursementsPath);
    }
    getBurns() {
        const QueryPath = Keys$1.Query.QueryPath;
        const BurnsPath = Keys$1.Query.BurnsPath;
        return this._transport.query([], '', QueryPath, BurnsPath);
    }
}

const Keys = {
    Query: {
        QueryPath: 'upgrade',
        CurrentPath: 'current',
        AppliedPath: 'applied',
    }
};
class UpgradeQuery {
    constructor(transport) {
        this._transport = transport;
    }
    getCurrent() {
        const QueryPath = Keys.Query.QueryPath;
        const CurrentPath = Keys.Query.CurrentPath;
        return this._transport.query([], '', QueryPath, CurrentPath);
    }
    getApplied(name) {
        const QueryPath = Keys.Query.QueryPath;
        const AppliedPath = Keys.Query.AppliedPath;
        return this._transport.query([], JSON.stringify({
            Name: name,
        }), QueryPath, AppliedPath);
    }
}

class Query {
    constructor(transport) {
        this._transport = transport;
        this._mint = new MintQuery(this._transport);
        this._staking = new StakingQuery(this._transport, this._mint);
        this._slashing = new SlashingQuery(this._transport);
        this._distribution = new DistributionQuery(this._transport);
        this._gov = new GovQuery(this._transport);
        this._treasury = new TreasuryQuery(this._transport);
        this._control = new ControlQuery(this._transport);
        this._upgrade = new UpgradeQuery(this._transport);
        this._fee = new FeeQuery(this._transport);
        this._supply = new SupplyQuery(this._transport);
    }
    get staking() {
        return this._staking;
    }
    get slashing() {
        return this._slashing;
    }
    get distribution() {
        return this._distribution;
    }
    get governance() {
        return this._gov;
    }
    get mint() {
        return this._mint;
    }
    get treasury() {
        return this._treasury;
    }
    get control() {
        return this._control;
    }
    get upgrade() {
        return this._upgrade;
    }
    get fee() {
        return this._fee;
    }
    get supply() {
        return this._supply;
    }
    getBlock(height) {
        return this._transport.block(height);
    }
    getStatus() {
        return this._transport.status();
    }
    getTx(hash) {
        return this._transport.tx(hash);
    }
    getAccountInfo(address) {
        return __awaiter(this, void 0, void 0, function* () {
            let account = yield this._transport.lcdQuery(`/cosmos/auth/v1beta1/accounts/${address}`);
            let balance = yield this._transport.lcdQuery(`/cosmos/bank/v1beta1/balances/${address}`);
            return {
                type: 'account',
                value: {
                    address,
                    coins: balance.balances,
                    public_key: account.account.pub_key,
                    account_number: account.account.account_number,
                    sequence: account.account.sequence,
                },
            };
        });
    }
    getAccSignInfo(address) {
        return __awaiter(this, void 0, void 0, function* () {
            let accountInfo = yield this.getAccountInfo(address);
            let accSignInfo;
            if ('address' in accountInfo.value) {
                accSignInfo = {
                    address: accountInfo.value.address,
                    accountNumber: accountInfo.value.account_number,
                    sequence: accountInfo.value.sequence,
                };
            }
            else {
                accSignInfo = {
                    address: accountInfo.value.BaseVestingAccount.BaseAccount.address,
                    accountNumber: accountInfo.value.BaseVestingAccount.BaseAccount.account_number,
                    sequence: accountInfo.value.BaseVestingAccount.BaseAccount.sequence,
                };
            }
            return accSignInfo;
        });
    }
}

class DefaultSigner {
    getAddress() {
        throw new Error('Signer not initialized.');
    }
    getPrivateKey() {
        throw new Error('Signer not initialized.');
    }
    getPublicKey() {
        throw new Error('Signer not initialized.');
    }
    getAccounts() {
        throw new Error('Signer not initialized.');
    }
    signDirect(address, signDoc) {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('Signer not initialized.');
        });
    }
    signMessage(msg) {
        throw new Error('Signer not initialized.');
    }
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

function getCjsExportFromNamespace (n) {
	return n && n['default'] || n;
}

var MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs

var precondition = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
};

var defaultEncoding$1;
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding$1 = 'utf-8';
} else if (process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);

  defaultEncoding$1 = pVersionMajor >= 6 ? 'utf-8' : 'binary';
} else {
  defaultEncoding$1 = 'utf-8';
}
var defaultEncoding_1 = defaultEncoding$1;

var defaultEncoding$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': defaultEncoding_1,
    __moduleExports: defaultEncoding_1
});

var safeBuffer = createCommonjsModule(function (module, exports) {
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */

var Buffer = buffer__default['default'].Buffer;

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key];
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer__default['default'];
} else {
  // Copy properties from require('buffer')
  copyProps(buffer__default['default'], exports);
  exports.Buffer = SafeBuffer;
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype);

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer);

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
};

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size);
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding);
    } else {
      buf.fill(fill);
    }
  } else {
    buf.fill(0);
  }
  return buf
};

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
};

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer__default['default'].SlowBuffer(size)
};
});
safeBuffer.Buffer;

var Buffer$5 = safeBuffer.Buffer;

var toBuffer = function (thing, encoding, name) {
  if (Buffer$5.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer$5.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer$5.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
};

var createHmac = crypto__default['default'].createHmac;

var defaultEncoding = getCjsExportFromNamespace(defaultEncoding$2);

var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
};


var Buffer$4 = safeBuffer.Buffer;





function pbkdf2$1 (password, salt, iterations, keylen, digest) {
  precondition(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');

  digest = digest || 'sha1';

  var DK = Buffer$4.allocUnsafe(keylen);
  var block1 = Buffer$4.allocUnsafe(salt.length + 4);
  salt.copy(block1, 0, 0, salt.length);

  var destPos = 0;
  var hLen = sizes[digest];
  var l = Math.ceil(keylen / hLen);

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length);

    var T = createHmac(digest, password).update(block1).digest();
    var U = T;

    for (var j = 1; j < iterations; j++) {
      U = createHmac(digest, password).update(U).digest();
      for (var k = 0; k < hLen; k++) T[k] ^= U[k];
    }

    T.copy(DK, destPos);
    destPos += hLen;
  }

  return DK
}

var sync = pbkdf2$1;

var Buffer$3 = safeBuffer.Buffer;






var ZERO_BUF;
var subtle = commonjsGlobal.crypto && commonjsGlobal.crypto.subtle;
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
};
var checks = [];
function checkNative (algo) {
  if (commonjsGlobal.process && !commonjsGlobal.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer$3.alloc(8);
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    });
  checks[algo] = prom;
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer$3.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out);
    });
  }, function (e) {
    process.nextTick(function () {
      callback(e);
    });
  });
}
var async = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest;
    digest = undefined;
  }

  digest = digest || 'sha1';
  var algo = toBrowser[digest.toLowerCase()];

  if (!algo || typeof commonjsGlobal.Promise !== 'function') {
    return process.nextTick(function () {
      var out;
      try {
        out = sync(password, salt, iterations, keylen, digest);
      } catch (e) {
        return callback(e)
      }
      callback(null, out);
    })
  }

  precondition(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback);
};

var async$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': async,
    __moduleExports: async
});

var require$$1 = getCjsExportFromNamespace(async$1);

var pbkdf2 = createCommonjsModule(function (module, exports) {
function nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {
  precondition(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');

  if (typeof digest === 'function') {
    callback = digest;
    digest = 'sha1';
  }
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  return crypto__default['default'].pbkdf2(password, salt, iterations, keylen, digest, callback)
}

function nativePBKDF2Sync (password, salt, iterations, keylen, digest) {
  precondition(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');
  digest = digest || 'sha1';
  return crypto__default['default'].pbkdf2Sync(password, salt, iterations, keylen, digest)
}

/* istanbul ignore next */
if (!crypto__default['default'].pbkdf2Sync || crypto__default['default'].pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {
  exports.pbkdf2Sync = sync;
  exports.pbkdf2 = require$$1;

// native
} else {
  exports.pbkdf2Sync = nativePBKDF2Sync;
  exports.pbkdf2 = nativePBKDF2;
}
});
pbkdf2.pbkdf2Sync;
pbkdf2.pbkdf2;

var unorm = createCommonjsModule(function (module) {
(function (root) {

/***** unorm.js *****/

/*
 * UnicodeNormalizer 1.0.0
 * Copyright (c) 2008 Matsuza
 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
 * $Rev: 13309 $
 */

   var DEFAULT_FEATURE = [null, 0, {}];
   var CACHE_THRESHOLD = 10;
   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
   var NCount = VCount * TCount; // 588
   var SCount = LCount * NCount; // 11172

   var UChar = function(cp, feature){
      this.codepoint = cp;
      this.feature = feature;
   };

   // Strategies
   var cache = {};
   var cacheCounter = [];
   for (var i = 0; i <= 0xFF; ++i){
      cacheCounter[i] = 0;
   }

   function fromCache(next, cp, needFeature){
      var ret = cache[cp];
      if(!ret){
         ret = next(cp, needFeature);
         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
            cache[cp] = ret;
         }
      }
      return ret;
   }

   function fromData(next, cp, needFeature){
      var hash = cp & 0xFF00;
      var dunit = UChar.udata[hash] || {};
      var f = dunit[cp];
      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
   }
   function fromCpOnly(next, cp, needFeature){
      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
   }
   function fromRuleBasedJamo(next, cp, needFeature){
      var j;
      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
         return next(cp, needFeature);
      }
      if(LBase <= cp && cp < LBase + LCount){
         var c = {};
         var base = (cp - LBase) * VCount;
         for (j = 0; j < VCount; ++j){
            c[VBase + j] = SBase + TCount * (j + base);
         }
         return new UChar(cp, [,,c]);
      }

      var SIndex = cp - SBase;
      var TIndex = SIndex % TCount;
      var feature = [];
      if(TIndex !== 0){
         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
      } else {
         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
         feature[2] = {};
         for (j = 1; j < TCount; ++j){
            feature[2][TBase + j] = cp + j;
         }
      }
      return new UChar(cp, feature);
   }
   function fromCpFilter(next, cp, needFeature){
      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
   }

   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
      return function (cp, needFeature) {
         return strategy(next, cp, needFeature);
      };
   }, null);

   UChar.isHighSurrogate = function(cp){
      return cp >= 0xD800 && cp <= 0xDBFF;
   };
   UChar.isLowSurrogate = function(cp){
      return cp >= 0xDC00 && cp <= 0xDFFF;
   };

   UChar.prototype.prepFeature = function(){
      if(!this.feature){
         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
      }
   };

   UChar.prototype.toString = function(){
      if(this.codepoint < 0x10000){
         return String.fromCharCode(this.codepoint);
      } else {
         var x = this.codepoint - 0x10000;
         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
      }
   };

   UChar.prototype.getDecomp = function(){
      this.prepFeature();
      return this.feature[0] || null;
   };

   UChar.prototype.isCompatibility = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 8));
   };
   UChar.prototype.isExclude = function(){
      this.prepFeature();
      return !!this.feature[1] && (this.feature[1] & (1 << 9));
   };
   UChar.prototype.getCanonicalClass = function(){
      this.prepFeature();
      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
   };
   UChar.prototype.getComposite = function(following){
      this.prepFeature();
      if(!this.feature[2]){
         return null;
      }
      var cp = this.feature[2][following.codepoint];
      return cp ? UChar.fromCharCode(cp) : null;
   };

   var UCharIterator = function(str){
      this.str = str;
      this.cursor = 0;
   };
   UCharIterator.prototype.next = function(){
      if(!!this.str && this.cursor < this.str.length){
         var cp = this.str.charCodeAt(this.cursor++);
         var d;
         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
            ++this.cursor;
         }
         return UChar.fromCharCode(cp);
      } else {
         this.str = null;
         return null;
      }
   };

   var RecursDecompIterator = function(it, cano){
      this.it = it;
      this.canonical = cano;
      this.resBuf = [];
   };

   RecursDecompIterator.prototype.next = function(){
      function recursiveDecomp(cano, uchar){
         var decomp = uchar.getDecomp();
         if(!!decomp && !(cano && uchar.isCompatibility())){
            var ret = [];
            for(var i = 0; i < decomp.length; ++i){
               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
                ret = ret.concat(a);
            }
            return ret;
         } else {
            return [uchar];
         }
      }
      if(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            return null;
         }
         this.resBuf = recursiveDecomp(this.canonical, uchar);
      }
      return this.resBuf.shift();
   };

   var DecompIterator = function(it){
      this.it = it;
      this.resBuf = [];
   };

   DecompIterator.prototype.next = function(){
      var cc;
      if(this.resBuf.length === 0){
         do{
            var uchar = this.it.next();
            if(!uchar){
               break;
            }
            cc = uchar.getCanonicalClass();
            var inspt = this.resBuf.length;
            if(cc !== 0){
               for(; inspt > 0; --inspt){
                  var uchar2 = this.resBuf[inspt - 1];
                  var cc2 = uchar2.getCanonicalClass();
                  if(cc2 <= cc){
                     break;
                  }
               }
            }
            this.resBuf.splice(inspt, 0, uchar);
         } while(cc !== 0);
      }
      return this.resBuf.shift();
   };

   var CompIterator = function(it){
      this.it = it;
      this.procBuf = [];
      this.resBuf = [];
      this.lastClass = null;
   };

   CompIterator.prototype.next = function(){
      while(this.resBuf.length === 0){
         var uchar = this.it.next();
         if(!uchar){
            this.resBuf = this.procBuf;
            this.procBuf = [];
            break;
         }
         if(this.procBuf.length === 0){
            this.lastClass = uchar.getCanonicalClass();
            this.procBuf.push(uchar);
         } else {
            var starter = this.procBuf[0];
            var composite = starter.getComposite(uchar);
            var cc = uchar.getCanonicalClass();
            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
               this.procBuf[0] = composite;
            } else {
               if(cc === 0){
                  this.resBuf = this.procBuf;
                  this.procBuf = [];
               }
               this.lastClass = cc;
               this.procBuf.push(uchar);
            }
         }
      }
      return this.resBuf.shift();
   };

   var createIterator = function(mode, str){
      switch(mode){
         case "NFD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
         case "NFKD":
            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
         case "NFC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
         case "NFKC":
            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
      }
      throw mode + " is invalid";
   };
   var normalize = function(mode, str){
      var it = createIterator(mode, str);
      var ret = "";
      var uchar;
      while(!!(uchar = it.next())){
         ret += uchar.toString();
      }
      return ret;
   };

   /* API functions */
   function nfd(str){
      return normalize("NFD", str);
   }

   function nfkd(str){
      return normalize("NFKD", str);
   }

   function nfc(str){
      return normalize("NFC", str);
   }

   function nfkc(str){
      return normalize("NFKC", str);
   }

/* Unicode data */
UChar.udata={
0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
5632:{71231:[,9],71350:[,9],71351:[,7]},
5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
6144:{6313:[,228]},
6400:{6457:[,222],6458:[,230],6459:[,220]},
6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
8960:{9001:[[12296]],9002:[[12297]]},
9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
11776:{11935:[[27597],256],12019:[[40863],256]},
12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
48128:{113822:[,1]},
53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
53760:{119362:[,230],119363:[,230],119364:[,230]},
54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
61952:{},
63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

};

   /***** Module to export */
   var unorm = {
      nfc: nfc,
      nfd: nfd,
      nfkc: nfkc,
      nfkd: nfkd
   };

   /*globals module:true,define:true*/

   // CommonJS
   {
      module.exports = unorm;

   // AMD
   }

   /***** Export as shim for String::normalize method *****/
   /*
      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

      21.1.3.12 String.prototype.normalize(form="NFC")
      When the normalize method is called with one argument form, the following steps are taken:

      1. Let O be CheckObjectCoercible(this value).
      2. Let S be ToString(O).
      3. ReturnIfAbrupt(S).
      4. If form is not provided or undefined let form be "NFC".
      5. Let f be ToString(form).
      6. ReturnIfAbrupt(f).
      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
      9. Return ns.

      The length property of the normalize method is 0.

      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
   */
    unorm.shimApplied = false;

   if (!String.prototype.normalize) {
      Object.defineProperty(String.prototype, "normalize", {
         enumerable: false,
         configurable: true,
         writable: true,
         value: function normalize (/*form*/) {
            
            var str = "" + this;
            var form = arguments[0] === undefined ? "NFC" : arguments[0];

            if (this === null || this === undefined) {
               throw new TypeError("Cannot call method on " + Object.prototype.toString.call(this));
            }

            if (form === "NFC") {
               return unorm.nfc(str);
            } else if (form === "NFD") {
               return unorm.nfd(str);
            } else if (form === "NFKC") {
               return unorm.nfkc(str);
            } else if (form === "NFKD") {
               return unorm.nfkd(str);
            } else {
               throw new RangeError("Invalid normalization form: " + form);
            }
         }
      });

      unorm.shimApplied = true;
   }
}());
});

var englishmnemonic = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnglishMnemonic = void 0;
const bip39 = __importStar(bip39__default['default']);
class EnglishMnemonic {
    constructor(mnemonic) {
        if (!EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {
            throw new Error("Invalid mnemonic format");
        }
        const words = mnemonic.split(" ");
        const allowedWordsLengths = [12, 15, 18, 21, 24];
        if (allowedWordsLengths.indexOf(words.length) === -1) {
            throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);
        }
        for (const word of words) {
            if (EnglishMnemonic.wordlist.indexOf(word) === -1) {
                throw new Error("Mnemonic contains invalid word");
            }
        }
        // Throws with informative error message if mnemonic is not valid
        bip39.mnemonicToEntropy(mnemonic);
        this.data = mnemonic;
    }
    toString() {
        return this.data;
    }
}
exports.EnglishMnemonic = EnglishMnemonic;
EnglishMnemonic.wordlist = bip39.wordlists.english;
// list of space separated lower case words (1 or more)
EnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;
//# sourceMappingURL=englishmnemonic.js.map
});

unwrapExports(englishmnemonic);
englishmnemonic.EnglishMnemonic;

var bip39_1 = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bip39 = void 0;

const bip39 = __importStar(bip39__default['default']);

const unorm$1 = __importStar(unorm);

class Bip39 {
    /**
     * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.
     *
     * | Entropy            | Words |
     * |--------------------|-------|
     * | 128 bit (16 bytes) |    12 |
     * | 160 bit (20 bytes) |    15 |
     * | 192 bit (24 bytes) |    18 |
     * | 224 bit (28 bytes) |    21 |
     * | 256 bit (32 bytes) |    24 |
     *
     *
     * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic
     * @param entropy The entropy to be encoded. This must be cryptographically secure.
     */
    static encode(entropy) {
        const allowedEntropyLengths = [16, 20, 24, 28, 32];
        if (allowedEntropyLengths.indexOf(entropy.length) === -1) {
            throw new Error("invalid input length");
        }
        return new englishmnemonic.EnglishMnemonic(bip39.entropyToMnemonic(encoding__default['default'].toHex(entropy)));
    }
    static decode(mnemonic) {
        return encoding__default['default'].fromHex(bip39.mnemonicToEntropy(mnemonic.toString()));
    }
    static async mnemonicToSeed(mnemonic, password) {
        // reimplementation of bip39.mnemonicToSeed using the asynchronous
        // interface of https://www.npmjs.com/package/pbkdf2
        const mnemonicBytes = encoding__default['default'].toUtf8(unorm$1.nfkd(mnemonic.toString()));
        const salt = "mnemonic" + (password ? unorm$1.nfkd(password) : "");
        const saltBytes = encoding__default['default'].toUtf8(salt);
        return this.pbkdf2(mnemonicBytes, saltBytes, 2048, 64, "sha512");
    }
    // convert pbkdf2's callback interface to Promise interface
    static async pbkdf2(secret, salt, iterations, keylen, digest) {
        return new Promise((resolve, reject) => {
            pbkdf2.pbkdf2(secret, salt, iterations, keylen, digest, (err, derivedKey) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(new Uint8Array(derivedKey));
                }
            });
        });
    }
}
exports.Bip39 = Bip39;
//# sourceMappingURL=bip39.js.map
});

unwrapExports(bip39_1);
bip39_1.Bip39;

var hmac = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hmac = void 0;
class Hmac {
    constructor(hashFunctionConstructor, originalKey) {
        // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation
        // with the addition of incremental hashing support. Thus part of the algorithm
        // is in the constructor and the rest in digest().
        const blockSize = new hashFunctionConstructor().blockSize;
        this.hash = (data) => new hashFunctionConstructor().update(data).digest();
        let key = originalKey;
        if (key.length > blockSize) {
            key = this.hash(key);
        }
        if (key.length < blockSize) {
            const zeroPadding = new Uint8Array(blockSize - key.length);
            key = new Uint8Array([...key, ...zeroPadding]);
        }
        // eslint-disable-next-line no-bitwise
        this.oKeyPad = key.map((keyByte) => keyByte ^ 0x5c);
        // eslint-disable-next-line no-bitwise
        this.iKeyPad = key.map((keyByte) => keyByte ^ 0x36);
        this.messageHasher = new hashFunctionConstructor();
        this.blockSize = blockSize;
        this.update(this.iKeyPad);
    }
    update(data) {
        this.messageHasher.update(data);
        return this;
    }
    digest() {
        const innerHash = this.messageHasher.digest();
        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));
    }
}
exports.Hmac = Hmac;
//# sourceMappingURL=hmac.js.map
});

unwrapExports(hmac);
hmac.Hmac;

var sha3 = createCommonjsModule(function (module) {
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
/*jslint bitwise: true */
(function () {

  var INPUT_ERROR = 'input is invalid type';
  var FINALIZE_ERROR = 'finalize already called';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_SHA3_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = commonjsGlobal;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;
  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
  var BITS = [224, 256, 384, 512];
  var SHAKE_BITS = [128, 256];
  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
  var CSHAKE_BYTEPAD = {
    '128': 168,
    '256': 136
  };

  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function (bits, padding, outputType) {
    return function (message) {
      return new Keccak(bits, padding, bits).update(message)[outputType]();
    };
  };

  var createShakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits) {
      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
    };
  };

  var createCshakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits, n, s) {
      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
    };
  };

  var createKmacOutputMethod = function (bits, padding, outputType) {
    return function (key, message, outputBits, s) {
      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
    };
  };

  var createOutputMethods = function (method, createMethod, bits, padding) {
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createMethod(bits, padding, type);
    }
    return method;
  };

  var createMethod = function (bits, padding) {
    var method = createOutputMethod(bits, padding, 'hex');
    method.create = function () {
      return new Keccak(bits, padding, bits);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    return createOutputMethods(method, createOutputMethod, bits, padding);
  };

  var createShakeMethod = function (bits, padding) {
    var method = createShakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits) {
      return new Keccak(bits, padding, outputBits);
    };
    method.update = function (message, outputBits) {
      return method.create(outputBits).update(message);
    };
    return createOutputMethods(method, createShakeOutputMethod, bits, padding);
  };

  var createCshakeMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createCshakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits, n, s) {
      if (!n && !s) {
        return methods['shake' + bits].create(outputBits);
      } else {
        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
      }
    };
    method.update = function (message, outputBits, n, s) {
      return method.create(outputBits, n, s).update(message);
    };
    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
  };

  var createKmacMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createKmacOutputMethod(bits, padding, 'hex');
    method.create = function (key, outputBits, s) {
      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
    };
    method.update = function (key, message, outputBits, s) {
      return method.create(key, outputBits, s).update(message);
    };
    return createOutputMethods(method, createKmacOutputMethod, bits, padding);
  };

  var algorithms = [
    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },
    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },
    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
  ];

  var methods = {}, methodNames = [];

  for (var i = 0; i < algorithms.length; ++i) {
    var algorithm = algorithms[i];
    var bits = algorithm.bits;
    for (var j = 0; j < bits.length; ++j) {
      var methodName = algorithm.name + '_' + bits[j];
      methodNames.push(methodName);
      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
      if (algorithm.name !== 'sha3') {
        var newMethodName = algorithm.name + bits[j];
        methodNames.push(newMethodName);
        methods[newMethodName] = methods[methodName];
      }
    }
  }

  function Keccak(bits, padding, outputBits) {
    this.blocks = [];
    this.s = [];
    this.padding = padding;
    this.outputBits = outputBits;
    this.reset = true;
    this.finalized = false;
    this.block = 0;
    this.start = 0;
    this.blockCount = (1600 - (bits << 1)) >> 5;
    this.byteCount = this.blockCount << 2;
    this.outputBlocks = outputBits >> 5;
    this.extraBytes = (outputBits & 31) >> 3;

    for (var i = 0; i < 50; ++i) {
      this.s[i] = 0;
    }
  }

  Keccak.prototype.update = function (message) {
    if (this.finalized) {
      throw new Error(FINALIZE_ERROR);
    }
    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,
      blockCount = this.blockCount, index = 0, s = this.s, i, code;

    while (index < length) {
      if (this.reset) {
        this.reset = false;
        blocks[0] = this.block;
        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }
      if (notString) {
        for (i = this.start; index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      this.lastByteIndex = i;
      if (i >= byteCount) {
        this.start = i - byteCount;
        this.block = blocks[blockCount];
        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }
        f(s);
        this.reset = true;
      } else {
        this.start = i;
      }
    }
    return this;
  };

  Keccak.prototype.encode = function (x, right) {
    var o = x & 255, n = 1;
    var bytes = [o];
    x = x >> 8;
    o = x & 255;
    while (o > 0) {
      bytes.unshift(o);
      x = x >> 8;
      o = x & 255;
      ++n;
    }
    if (right) {
      bytes.push(n);
    } else {
      bytes.unshift(n);
    }
    this.update(bytes);
    return bytes.length;
  };

  Keccak.prototype.encodeString = function (str) {
    var notString, type = typeof str;
    if (type !== 'string') {
      if (type === 'object') {
        if (str === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
          str = new Uint8Array(str);
        } else if (!Array.isArray(str)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var bytes = 0, length = str.length;
    if (notString) {
      bytes = length;
    } else {
      for (var i = 0; i < str.length; ++i) {
        var code = str.charCodeAt(i);
        if (code < 0x80) {
          bytes += 1;
        } else if (code < 0x800) {
          bytes += 2;
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes += 3;
        } else {
          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));
          bytes += 4;
        }
      }
    }
    bytes += this.encode(bytes * 8);
    this.update(str);
    return bytes;
  };

  Keccak.prototype.bytepad = function (strs, w) {
    var bytes = this.encode(w);
    for (var i = 0; i < strs.length; ++i) {
      bytes += this.encodeString(strs[i]);
    }
    var paddingBytes = w - bytes % w;
    var zeros = [];
    zeros.length = paddingBytes;
    this.update(zeros);
    return this;
  };

  Keccak.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
    blocks[i >> 2] |= this.padding[i & 3];
    if (this.lastByteIndex === this.byteCount) {
      blocks[0] = blocks[blockCount];
      for (i = 1; i < blockCount + 1; ++i) {
        blocks[i] = 0;
      }
    }
    blocks[blockCount - 1] |= 0x80000000;
    for (i = 0; i < blockCount; ++i) {
      s[i] ^= blocks[i];
    }
    f(s);
  };

  Keccak.prototype.toString = Keccak.prototype.hex = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var hex = '', block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        block = s[i];
        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
      }
      if (j % blockCount === 0) {
        f(s);
        i = 0;
      }
    }
    if (extraBytes) {
      block = s[i];
      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
      if (extraBytes > 1) {
        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
      }
      if (extraBytes > 2) {
        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
      }
    }
    return hex;
  };

  Keccak.prototype.arrayBuffer = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var bytes = this.outputBits >> 3;
    var buffer;
    if (extraBytes) {
      buffer = new ArrayBuffer((outputBlocks + 1) << 2);
    } else {
      buffer = new ArrayBuffer(bytes);
    }
    var array = new Uint32Array(buffer);
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        array[j] = s[i];
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      array[i] = s[i];
      buffer = buffer.slice(0, bytes);
    }
    return buffer;
  };

  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

  Keccak.prototype.digest = Keccak.prototype.array = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var array = [], offset, block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        array[offset + 1] = (block >> 8) & 0xFF;
        array[offset + 2] = (block >> 16) & 0xFF;
        array[offset + 3] = (block >> 24) & 0xFF;
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      offset = j << 2;
      block = s[i];
      array[offset] = block & 0xFF;
      if (extraBytes > 1) {
        array[offset + 1] = (block >> 8) & 0xFF;
      }
      if (extraBytes > 2) {
        array[offset + 2] = (block >> 16) & 0xFF;
      }
    }
    return array;
  };

  function Kmac(bits, padding, outputBits) {
    Keccak.call(this, bits, padding, outputBits);
  }

  Kmac.prototype = new Keccak();

  Kmac.prototype.finalize = function () {
    this.encode(this.outputBits, true);
    return Keccak.prototype.finalize.call(this);
  };

  var f = function (s) {
    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    for (n = 0; n < 48; n += 2) {
      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

      h = c8 ^ ((c2 << 1) | (c3 >>> 31));
      l = c9 ^ ((c3 << 1) | (c2 >>> 31));
      s[0] ^= h;
      s[1] ^= l;
      s[10] ^= h;
      s[11] ^= l;
      s[20] ^= h;
      s[21] ^= l;
      s[30] ^= h;
      s[31] ^= l;
      s[40] ^= h;
      s[41] ^= l;
      h = c0 ^ ((c4 << 1) | (c5 >>> 31));
      l = c1 ^ ((c5 << 1) | (c4 >>> 31));
      s[2] ^= h;
      s[3] ^= l;
      s[12] ^= h;
      s[13] ^= l;
      s[22] ^= h;
      s[23] ^= l;
      s[32] ^= h;
      s[33] ^= l;
      s[42] ^= h;
      s[43] ^= l;
      h = c2 ^ ((c6 << 1) | (c7 >>> 31));
      l = c3 ^ ((c7 << 1) | (c6 >>> 31));
      s[4] ^= h;
      s[5] ^= l;
      s[14] ^= h;
      s[15] ^= l;
      s[24] ^= h;
      s[25] ^= l;
      s[34] ^= h;
      s[35] ^= l;
      s[44] ^= h;
      s[45] ^= l;
      h = c4 ^ ((c8 << 1) | (c9 >>> 31));
      l = c5 ^ ((c9 << 1) | (c8 >>> 31));
      s[6] ^= h;
      s[7] ^= l;
      s[16] ^= h;
      s[17] ^= l;
      s[26] ^= h;
      s[27] ^= l;
      s[36] ^= h;
      s[37] ^= l;
      s[46] ^= h;
      s[47] ^= l;
      h = c6 ^ ((c0 << 1) | (c1 >>> 31));
      l = c7 ^ ((c1 << 1) | (c0 >>> 31));
      s[8] ^= h;
      s[9] ^= l;
      s[18] ^= h;
      s[19] ^= l;
      s[28] ^= h;
      s[29] ^= l;
      s[38] ^= h;
      s[39] ^= l;
      s[48] ^= h;
      s[49] ^= l;

      b0 = s[0];
      b1 = s[1];
      b32 = (s[11] << 4) | (s[10] >>> 28);
      b33 = (s[10] << 4) | (s[11] >>> 28);
      b14 = (s[20] << 3) | (s[21] >>> 29);
      b15 = (s[21] << 3) | (s[20] >>> 29);
      b46 = (s[31] << 9) | (s[30] >>> 23);
      b47 = (s[30] << 9) | (s[31] >>> 23);
      b28 = (s[40] << 18) | (s[41] >>> 14);
      b29 = (s[41] << 18) | (s[40] >>> 14);
      b20 = (s[2] << 1) | (s[3] >>> 31);
      b21 = (s[3] << 1) | (s[2] >>> 31);
      b2 = (s[13] << 12) | (s[12] >>> 20);
      b3 = (s[12] << 12) | (s[13] >>> 20);
      b34 = (s[22] << 10) | (s[23] >>> 22);
      b35 = (s[23] << 10) | (s[22] >>> 22);
      b16 = (s[33] << 13) | (s[32] >>> 19);
      b17 = (s[32] << 13) | (s[33] >>> 19);
      b48 = (s[42] << 2) | (s[43] >>> 30);
      b49 = (s[43] << 2) | (s[42] >>> 30);
      b40 = (s[5] << 30) | (s[4] >>> 2);
      b41 = (s[4] << 30) | (s[5] >>> 2);
      b22 = (s[14] << 6) | (s[15] >>> 26);
      b23 = (s[15] << 6) | (s[14] >>> 26);
      b4 = (s[25] << 11) | (s[24] >>> 21);
      b5 = (s[24] << 11) | (s[25] >>> 21);
      b36 = (s[34] << 15) | (s[35] >>> 17);
      b37 = (s[35] << 15) | (s[34] >>> 17);
      b18 = (s[45] << 29) | (s[44] >>> 3);
      b19 = (s[44] << 29) | (s[45] >>> 3);
      b10 = (s[6] << 28) | (s[7] >>> 4);
      b11 = (s[7] << 28) | (s[6] >>> 4);
      b42 = (s[17] << 23) | (s[16] >>> 9);
      b43 = (s[16] << 23) | (s[17] >>> 9);
      b24 = (s[26] << 25) | (s[27] >>> 7);
      b25 = (s[27] << 25) | (s[26] >>> 7);
      b6 = (s[36] << 21) | (s[37] >>> 11);
      b7 = (s[37] << 21) | (s[36] >>> 11);
      b38 = (s[47] << 24) | (s[46] >>> 8);
      b39 = (s[46] << 24) | (s[47] >>> 8);
      b30 = (s[8] << 27) | (s[9] >>> 5);
      b31 = (s[9] << 27) | (s[8] >>> 5);
      b12 = (s[18] << 20) | (s[19] >>> 12);
      b13 = (s[19] << 20) | (s[18] >>> 12);
      b44 = (s[29] << 7) | (s[28] >>> 25);
      b45 = (s[28] << 7) | (s[29] >>> 25);
      b26 = (s[38] << 8) | (s[39] >>> 24);
      b27 = (s[39] << 8) | (s[38] >>> 24);
      b8 = (s[48] << 14) | (s[49] >>> 18);
      b9 = (s[49] << 14) | (s[48] >>> 18);

      s[0] = b0 ^ (~b2 & b4);
      s[1] = b1 ^ (~b3 & b5);
      s[10] = b10 ^ (~b12 & b14);
      s[11] = b11 ^ (~b13 & b15);
      s[20] = b20 ^ (~b22 & b24);
      s[21] = b21 ^ (~b23 & b25);
      s[30] = b30 ^ (~b32 & b34);
      s[31] = b31 ^ (~b33 & b35);
      s[40] = b40 ^ (~b42 & b44);
      s[41] = b41 ^ (~b43 & b45);
      s[2] = b2 ^ (~b4 & b6);
      s[3] = b3 ^ (~b5 & b7);
      s[12] = b12 ^ (~b14 & b16);
      s[13] = b13 ^ (~b15 & b17);
      s[22] = b22 ^ (~b24 & b26);
      s[23] = b23 ^ (~b25 & b27);
      s[32] = b32 ^ (~b34 & b36);
      s[33] = b33 ^ (~b35 & b37);
      s[42] = b42 ^ (~b44 & b46);
      s[43] = b43 ^ (~b45 & b47);
      s[4] = b4 ^ (~b6 & b8);
      s[5] = b5 ^ (~b7 & b9);
      s[14] = b14 ^ (~b16 & b18);
      s[15] = b15 ^ (~b17 & b19);
      s[24] = b24 ^ (~b26 & b28);
      s[25] = b25 ^ (~b27 & b29);
      s[34] = b34 ^ (~b36 & b38);
      s[35] = b35 ^ (~b37 & b39);
      s[44] = b44 ^ (~b46 & b48);
      s[45] = b45 ^ (~b47 & b49);
      s[6] = b6 ^ (~b8 & b0);
      s[7] = b7 ^ (~b9 & b1);
      s[16] = b16 ^ (~b18 & b10);
      s[17] = b17 ^ (~b19 & b11);
      s[26] = b26 ^ (~b28 & b20);
      s[27] = b27 ^ (~b29 & b21);
      s[36] = b36 ^ (~b38 & b30);
      s[37] = b37 ^ (~b39 & b31);
      s[46] = b46 ^ (~b48 & b40);
      s[47] = b47 ^ (~b49 & b41);
      s[8] = b8 ^ (~b0 & b2);
      s[9] = b9 ^ (~b1 & b3);
      s[18] = b18 ^ (~b10 & b12);
      s[19] = b19 ^ (~b11 & b13);
      s[28] = b28 ^ (~b20 & b22);
      s[29] = b29 ^ (~b21 & b23);
      s[38] = b38 ^ (~b30 & b32);
      s[39] = b39 ^ (~b31 & b33);
      s[48] = b48 ^ (~b40 & b42);
      s[49] = b49 ^ (~b41 & b43);

      s[0] ^= RC[n];
      s[1] ^= RC[n + 1];
    }
  };

  if (COMMON_JS) {
    module.exports = methods;
  } else {
    for (i = 0; i < methodNames.length; ++i) {
      root[methodNames[i]] = methods[methodNames[i]];
    }
  }
})();
});

var sha3$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': sha3,
    __moduleExports: sha3
});

var require$$0$1 = getCjsExportFromNamespace(sha3$1);

var keccak = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.keccak256 = exports.Keccak256 = void 0;
const js_sha3_1 = __importDefault(require$$0$1);
class Keccak256 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = js_sha3_1.default.keccak256.create();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update(data);
        return this;
    }
    digest() {
        return new Uint8Array(this.impl.digest());
    }
}
exports.Keccak256 = Keccak256;
/** Convenience function equivalent to `new Keccak256(data).digest()` */
function keccak256(data) {
    return new Keccak256(data).digest();
}
exports.keccak256 = keccak256;
//# sourceMappingURL=keccak.js.map
});

unwrapExports(keccak);
keccak.keccak256;
keccak.Keccak256;

var arrays = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.arrayContentEquals = void 0;
/**
 * Compares the content of two arrays-like objects for equality.
 *
 * Equality is defined as having equal length and element values, where element equality means `===` returning `true`.
 *
 * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.
 * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.
 */
function arrayContentEquals(a, b) {
    if (a.length !== b.length)
        return false;
    for (let i = 0; i < a.length; ++i) {
        if (a[i] !== b[i])
            return false;
    }
    return true;
}
exports.arrayContentEquals = arrayContentEquals;
//# sourceMappingURL=arrays.js.map
});

unwrapExports(arrays);
arrays.arrayContentEquals;

var assert_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
function assert(condition, msg) {
    if (!condition) {
        throw new Error(msg || "condition is not truthy");
    }
}
exports.assert = assert;
function assertDefined(value, msg) {
    if (value === undefined) {
        throw new Error(msg !== null && msg !== void 0 ? msg : "value is undefined");
    }
}
exports.assertDefined = assertDefined;
function assertDefinedAndNotNull(value, msg) {
    if (value === undefined || value === null) {
        throw new Error(msg !== null && msg !== void 0 ? msg : "value is undefined or null");
    }
}
exports.assertDefinedAndNotNull = assertDefinedAndNotNull;
//# sourceMappingURL=assert.js.map
});

unwrapExports(assert_1);
assert_1.assertDefinedAndNotNull;
assert_1.assertDefined;
assert_1.assert;

var sleep_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.sleep = void 0;
async function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
exports.sleep = sleep;
//# sourceMappingURL=sleep.js.map
});

unwrapExports(sleep_1);
sleep_1.sleep;

var typechecks = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.isUint8Array = exports.isNonNullObject = void 0;
/**
 * Checks if data is a non-null object (i.e. matches the TypeScript object type).
 *
 * Note: this returns true for arrays, which are objects in JavaScript
 * even though array and object are different types in JSON.
 *
 * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isNonNullObject(data) {
    return typeof data === "object" && data !== null;
}
exports.isNonNullObject = isNonNullObject;
/**
 * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array
 */
function isUint8Array(data) {
    if (!isNonNullObject(data))
        return false;
    // Avoid instanceof check which is unreliable in some JS environments
    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400
    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81
    if (Object.prototype.toString.call(data) !== "[object Uint8Array]")
        return false;
    if (typeof Buffer !== "undefined" && typeof Buffer.isBuffer !== "undefined") {
        // Buffer.isBuffer is available at runtime
        if (Buffer.isBuffer(data))
            return false;
    }
    return true;
}
exports.isUint8Array = isUint8Array;
//# sourceMappingURL=typechecks.js.map
});

var typechecks$1 = unwrapExports(typechecks);
var typechecks_1$1 = typechecks.isUint8Array;
var typechecks_2 = typechecks.isNonNullObject;

var typechecks$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': typechecks$1,
    __moduleExports: typechecks,
    isUint8Array: typechecks_1$1,
    isNonNullObject: typechecks_2
});

var typechecks_1 = getCjsExportFromNamespace(typechecks$2);

var build$2 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.isUint8Array = exports.isNonNullObject = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentEquals = void 0;

Object.defineProperty(exports, "arrayContentEquals", { enumerable: true, get: function () { return arrays.arrayContentEquals; } });

Object.defineProperty(exports, "assert", { enumerable: true, get: function () { return assert_1.assert; } });
Object.defineProperty(exports, "assertDefined", { enumerable: true, get: function () { return assert_1.assertDefined; } });
Object.defineProperty(exports, "assertDefinedAndNotNull", { enumerable: true, get: function () { return assert_1.assertDefinedAndNotNull; } });

Object.defineProperty(exports, "sleep", { enumerable: true, get: function () { return sleep_1.sleep; } });

Object.defineProperty(exports, "isNonNullObject", { enumerable: true, get: function () { return typechecks_1.isNonNullObject; } });
Object.defineProperty(exports, "isUint8Array", { enumerable: true, get: function () { return typechecks_1.isUint8Array; } });
//# sourceMappingURL=index.js.map
});

unwrapExports(build$2);
build$2.isUint8Array;
build$2.isNonNullObject;
build$2.sleep;
build$2.assertDefinedAndNotNull;
build$2.assertDefined;
build$2.assert;
build$2.arrayContentEquals;

var libsodium$1 = createCommonjsModule(function (module, exports) {
!function(A){function I(A){var I;void 0===(I=A)&&(I={});var g=I;"object"!=typeof g.sodium&&("object"==typeof commonjsGlobal?g=commonjsGlobal:"object"==typeof window&&(g=window)),"object"==typeof g.sodium&&"number"==typeof g.sodium.totalMemory&&(I.TOTAL_MEMORY=g.sodium.totalMemory);var B=I;return I.ready=new Promise((function(A,I){(Q=B).onAbort=I,Q.print=function(A){},Q.printErr=function(A){},Q.onRuntimeInitialized=function(){try{Q._crypto_secretbox_keybytes(),A();}catch(A){I(A);}},Q.useBackupModule=function(){return new Promise((function(A,I){(Q={}).onAbort=I,Q.onRuntimeInitialized=function(){Object.keys(B).forEach((function(A){"getRandomValue"!==A&&delete B[A];})),Object.keys(Q).forEach((function(A){B[A]=Q[A];})),A();};var g,Q=void 0!==Q?Q:{},C={};for(g in Q)Q.hasOwnProperty(g)&&(C[g]=Q[g]);var i=!1,n=!1,a=!1,r=!1;i="object"==typeof window,n="function"==typeof importScripts,a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,r=!i&&!a&&!n;var o,e,t,f,c,y="";function s(A){return Q.locateFile?Q.locateFile(A,y):y+A}a?(y=n?path__default['default'].dirname(y)+"/":__dirname+"/",o=function(A,I){var g=bA(A);return g?I?g:g.toString():(f||(f=fs__default['default']),c||(c=path__default['default']),A=c.normalize(A),f.readFileSync(A,I?null:"utf8"))},t=function(A){var I=o(A,!0);return I.buffer||(I=new Uint8Array(I)),G(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),(module.exports=Q),Q.inspect=function(){return "[Emscripten Module object]"}):r?("undefined"!=typeof read&&(o=function(A){var I=bA(A);return I?_A(I):read(A)}),t=function(A){var I;return (I=bA(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(G("object"==typeof(I=read(A,"binary"))),I)},"undefined"!=typeof scriptArgs?scriptArgs:void 0!==arguments&&(arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||n)&&(n?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",o=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=bA(A);if(g)return _A(g);throw I}},n&&(t=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=bA(A);if(g)return g;throw I}}),e=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else {var Q=bA(A);Q?I(Q.buffer):g();}},B.onerror=g,B.send(null);}),Q.print;var w,h=Q.printErr||void 0;for(g in C)C.hasOwnProperty(g)&&(Q[g]=C[g]);C=null,Q.arguments&&(Q.arguments),Q.thisProgram&&Q.thisProgram,Q.quit&&Q.quit,Q.wasmBinary&&(w=Q.wasmBinary),Q.noExitRuntime&&Q.noExitRuntime;var D,u={Memory:function(A){this.buffer=new ArrayBuffer(65536*A.initial);},Module:function(A){},Instance:function(A,I){this.exports=function(A){for(var I,g=new Uint8Array(123),B=25;B>=0;--B)g[48+B]=52+B,g[65+B]=B,g[97+B]=26+B;function Q(A,I,B){for(var Q,C,E=0,i=I,n=B.length,a=I+(3*n>>2)-("="==B[n-2])-("="==B[n-1]);E<n;E+=4)Q=g[B.charCodeAt(E+1)],C=g[B.charCodeAt(E+2)],A[i++]=g[B.charCodeAt(E)]<<2|Q>>4,i<a&&(A[i++]=Q<<4|C>>2),i<a&&(A[i++]=C<<6|g[B.charCodeAt(E+3)]);}return g[43]=62,g[47]=63,function(A){var g=A.a,B=g.buffer;g.grow=function(A){A|=0;var Q=0|Wg(),o=Q+A|0;if(Q<o&&o<65536){var e=new ArrayBuffer(r(o,65536));new Int8Array(e).set(C),C=new Int8Array(e),E=new Int16Array(e),i=new Int32Array(e),n=new Uint8Array(e),a=new Uint32Array(e),B=e,g.buffer=B,I=n;}return Q};var C=new Int8Array(B),E=new Int16Array(B),i=new Int32Array(B),n=new Uint8Array(B),a=(new Uint32Array(B)),r=(Math.imul),o=(Math.clz32),e=(A.abort),t=A.b,f=A.c,c=A.d,y=A.e,s=A.f,w=A.g,h=5279312,D=0,u=0,p=0;function l(A,I){var g,B,Q,E,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0;for(h=W=h-256|0;V=(K=Z<<3)+(W+128|0)|0,QA=n[4+(K=I+K|0)|0]|n[K+5|0]<<8|n[K+6|0]<<16|n[K+7|0]<<24,i[V>>2]=n[0|K]|n[K+1|0]<<8|n[K+2|0]<<16|n[K+3|0]<<24,i[V+4>>2]=QA,16!=(0|(Z=Z+1|0)););for(g=X(W,A,64),K=i[(I=g)>>2],Z=i[I+4>>2],a=K,K=(QA=i[I+32>>2])+(W=i[I+128>>2])|0,I=($=i[I+36>>2])+i[I+132>>2]|0,I=K>>>0<W>>>0?I+1|0:I,W=K,I=I+Z|0,W=I=(K=a+K|0)>>>0<W>>>0?I+1|0:I,x=ug((Z=K)^(n[0|(K=A- -64|0)]|n[K+1|0]<<8|n[K+2|0]<<16|n[K+3|0]<<24)^-1377402159,I^(n[K+4|0]|n[K+5|0]<<8|n[K+6|0]<<16|n[K+7|0]<<24)^1359893119,32),K=I=p,I=I+1779033703|0,a=QA^(V=x-205731576|0),QA=I=V>>>0<4089235720?I+1|0:I,b=ug(a,$^I,24),m=I=p,j=K,a=x,I=I+W|0,I=(I=(x=b+Z|0)>>>0<Z>>>0?I+1|0:I)+(t=B=i[g+140>>2])|0,a=ug(a^(o=Z=(K=i[g+136>>2])+x|0),(G=x>>>0>o>>>0?I+1|0:I)^j,16),I=QA+(d=p)|0,t=ug((l=Z=V+a|0)^b,(W=V>>>0>l>>>0?I+1|0:I)^m,63),f=p,V=i[g+12>>2],Z=(b=i[g+144>>2])+($=QA=i[g+40>>2])|0,I=(T=i[g+148>>2])+(j=i[g+44>>2])|0,I=Z>>>0<$>>>0?I+1|0:I,$=Z,I=I+V|0,I=(Z=Z+i[g+8>>2]|0)>>>0<$>>>0?I+1|0:I,x=ug(Z^(n[A+72|0]|n[A+73|0]<<8|n[A+74|0]<<16|n[A+75|0]<<24)^725511199,(n[A+76|0]|n[A+77|0]<<8|n[A+78|0]<<16|n[A+79|0]<<24)^I^-1694144372,32),j=ug(r=(V=x-2067093701|0)^QA,j^(m=(QA=p)-((x>>>0<2067093701)+1150833018|0)|0),24),c=i[g+156>>2],r=j,I=I+($=p)|0,I=(I=(j=j+Z|0)>>>0<Z>>>0?I+1|0:I)+c|0,eA=ug((u=Z=j+i[g+152>>2]|0)^x,(k=j>>>0>u>>>0?I+1|0:I)^QA,16),I=m+(H=p)|0,cA=Z=V+eA|0,x=ug(r^Z,(V=V>>>0>Z>>>0?I+1|0:I)^$,63),m=p,QA=i[g+20>>2],Z=(U=i[g+160>>2])+(j=i[g+48>>2])|0,I=(iA=i[g+164>>2])+(y=i[g+52>>2])|0,$=Z,I=(I=Z>>>0<j>>>0?I+1|0:I)+QA|0,rA=Z=Z+i[g+16>>2]|0,Z=Z>>>0<$>>>0?I+1|0:I,s=ug(rA^(n[A+80|0]|n[A+81|0]<<8|n[A+82|0]<<16|n[A+83|0]<<24)^-79577749,Z^(n[A+84|0]|n[A+85|0]<<8|n[A+86|0]<<16|n[A+87|0]<<24)^528734635,32),QA=I=p,I=I+1013904242|0,r=j^($=s-23791573|0),j=I=$>>>0<4271175723?I+1|0:I,I=ug(r,y^I,24),c=QA,Q=i[g+172>>2],r=I,e=s,s=I,rA=I+rA|0,I=(y=p)+Z|0,I=(I=s>>>0>rA>>>0?I+1|0:I)+(J=Q)|0,AA=ug(e^(F=Z=(QA=i[g+168>>2])+(s=rA)|0),(J=s>>>0>F>>>0?I+1|0:I)^c,16),I=j+(M=p)|0,y=ug(r^(_=Z=$+AA|0),(j=_>>>0<$>>>0?I+1|0:I)^y,63),c=p,s=i[g+28>>2],$=(Z=i[g+176>>2])+(D=rA=i[g+56>>2])|0,I=(yA=i[g+180>>2])+(w=i[g+60>>2])|0,I=(I=D>>>0>$>>>0?I+1|0:I)+s|0,I=(D=$)>>>0>(v=$=D+i[g+24>>2]|0)>>>0?I+1|0:I,S=ug(v^(n[A+88|0]|n[A+89|0]<<8|n[A+90|0]<<16|n[A+91|0]<<24)^327033209,I^(n[A+92|0]|n[A+93|0]<<8|n[A+94|0]<<16|n[A+95|0]<<24)^1541459225,32),s=ug(e=(r=(s=S)+1595750129|0)^rA,w^(rA=($=p)-((s>>>0<2699217167)+1521486533|0)|0),24),w=rA,Y=$,rA=i[g+188>>2],e=s,P=r,I=(D=p)+I|0,I=(I=(v=s+v|0)>>>0<s>>>0?I+1|0:I)+(N=rA)|0,O=s=($=i[g+184>>2])+v|0,r=ug(s^S,(r=Y)^(Y=s>>>0<v>>>0?I+1|0:I),16),I=(I=w)+(w=p)|0,v=s=P+r|0,S=D,D=I=s>>>0<r>>>0?I+1|0:I,e=ug(e^s,S^I,63),s=p,S=m,P=x,L=_,I=m+G|0,m=o=o+x|0,I=(I=o>>>0<x>>>0?I+1|0:I)+(N=q=i[g+196>>2])|0,_=ug((o=x=(IA=i[g+192>>2])+o|0)^r,(x=m>>>0>o>>>0?I+1|0:I)^w,32),I=(I=j)+(j=p)|0,G=I=(m=L+(G=_)|0)>>>0<G>>>0?I+1|0:I,I=ug(P^m,I^S,24),fA=i[g+204>>2],P=I,r=_,w=o,o=I,_=w+I|0,I=(w=p)+x|0,I=(I=o>>>0>_>>>0?I+1|0:I)+(N=fA)|0,CA=x=(S=i[g+200>>2])+(o=_)|0,tA=ug(r^x,(o=o>>>0>x>>>0?I+1|0:I)^j,16),I=G+(_=p)|0,N=ug(P^(r=j=m+tA|0),(G=w)^(w=m>>>0>r>>>0?I+1|0:I),63),G=p,j=c,L=y,I=c+k|0,I=(I=(m=y+u|0)>>>0<y>>>0?I+1|0:I)+(P=oA=i[g+212>>2])|0,u=ug((R=a)^(a=m=(x=i[g+208>>2])+(y=m)|0),(y=y>>>0>a>>>0?I+1|0:I)^d,32),I=D+(m=p)|0,j=ug(L^(c=v+u|0),(I=c>>>0<v>>>0?I+1|0:I)^j,24),d=I,k=m,z=i[g+220>>2],L=j,R=c,I=(c=p)+y|0,I=(I=(D=a+j|0)>>>0<j>>>0?I+1|0:I)+(P=z)|0,k=ug((D=j=(m=i[g+216>>2])+(y=D)|0)^u,(v=y>>>0>D>>>0?I+1|0:I)^k,16),I=(a=p)+d|0,aA=j=R+(y=k)|0,P=ug(L^j,(y=y>>>0>j>>>0?I+1|0:I)^c,63),c=p,d=s,L=e,I=s+J|0,I=(I=(e=e+F|0)>>>0<F>>>0?I+1|0:I)+(u=E=i[g+228>>2])|0,e=ug((J=s=(j=i[g+224>>2])+e|0)^eA,(s=s>>>0<e>>>0?I+1|0:I)^H,32),I=(H=p)+W|0,l=F=l+e|0,W=ug(L^F,(I=F>>>0<e>>>0?I+1|0:I)^d,24),F=I,L=i[g+236>>2],u=W,I=(d=p)+s|0,I=(I=(J=J+W|0)>>>0<W>>>0?I+1|0:I)+L|0,nA=ug((J=W=(BA=i[g+232>>2])+(s=J)|0)^e,(W=H)^(H=s>>>0>J>>>0?I+1|0:I),16),I=(I=F)+(F=p)|0,s=ug(u^(e=W=(s=nA)+l|0),(l=s>>>0>e>>>0?I+1|0:I)^d,63),d=p,u=f,gA=t,EA=cA,I=f+Y|0,I=(I=(cA=t+O|0)>>>0<t>>>0?I+1|0:I)+(R=eA=i[g+244>>2])|0,f=I=(t=(W=i[g+240>>2])+(f=cA)|0)>>>0<f>>>0?I+1|0:I,AA=ug(t^AA,I^M,32),I=(I=V)+(V=p)|0,O=M=EA+(Y=AA)|0,u=ug(gA^M,(I=Y>>>0>M>>>0?I+1|0:I)^u,24),gA=EA=p,M=I,Y=V,sA=u,I=f+EA|0,I=(I=(u=t+u|0)>>>0<t>>>0?I+1|0:I)+(cA=i[g+252>>2])|0,u=t=(V=i[g+248>>2])+(f=u)|0,R=ug(t^AA,(R=Y)^(Y=t>>>0<f>>>0?I+1|0:I),16),I=(I=M)+(M=p)|0,AA=ug(sA^(EA=t=(f=R)+O|0),(t=t>>>0<f>>>0?I+1|0:I)^gA,63),gA=I=p,f=I,sA=k,I=o+eA|0,I=(I=(k=W)>>>0>(O=k+CA|0)>>>0?I+1|0:I)+f|0,O=ug(sA^(f=k=(o=O)+AA|0),(k=o>>>0>f>>>0?I+1|0:I)^a,32),I=l+(o=p)|0,e=I=(a=e+O|0)>>>0<e>>>0?I+1|0:I,CA=AA=ug(AA^a,gA^I,24),gA=I=p,l=I,wA=AA,I=k+oA|0,I=(I=(AA=f+x|0)>>>0<f>>>0?I+1|0:I)+l|0,CA=f=CA+(k=AA)|0,sA=ug(f^O,(l=o)^(o=f>>>0<k>>>0?I+1|0:I),16),I=e+(l=p)|0,e=I=(f=a+sA|0)>>>0<a>>>0?I+1|0:I,AA=ug(wA^(a=f),I^gA,63),k=p,O=N,I=iA+(f=G)|0,I=(I=(N=U+N|0)>>>0<U>>>0?I+1|0:I)+v|0,U=I=(G=D+N|0)>>>0<D>>>0?I+1|0:I,v=ug(G^nA,I^F,32),I=(I=t)+(t=p)|0,I=(F=(D=v)+EA|0)>>>0<D>>>0?I+1|0:I,D=f,f=I,N=ug(O^F,D^I,24),iA=I=p,D=I,O=v,I=U+q|0,I=(I=(v=G+IA|0)>>>0<G>>>0?I+1|0:I)+D|0,I=(G=(U=v)+N|0)>>>0<U>>>0?I+1|0:I,U=G,D=I,nA=ug(O^G,I^t,16),I=f+(v=p)|0,EA=t=F+nA|0,N=ug(t^N,(f=t>>>0<F>>>0?I+1|0:I)^iA,63),t=p,G=c,I=c+fA|0,I=(I=(F=S+P|0)>>>0<S>>>0?I+1|0:I)+H|0,M=ug((S=c=F+J|0)^R,(c=c>>>0<J>>>0?I+1|0:I)^M,32),I=w+(H=p)|0,I=r>>>0>(F=r+M|0)>>>0?I+1|0:I,r=G,G=I,r=w=ug(F^P,r^I,24),P=I=p,J=I,O=M,I=c+cA|0,I=(I=(w=(M=V)+S|0)>>>0<M>>>0?I+1|0:I)+J|0,R=c=r+w|0,gA=ug(O^c,(M=H)^(H=c>>>0<w>>>0?I+1|0:I),16),I=G+(J=p)|0,P=ug((S=c=F+gA|0)^r,(c=c>>>0<F>>>0?I+1|0:I)^P,63),G=p,r=s,I=(F=d)+L|0,I=(I=(M=s+BA|0)>>>0<s>>>0?I+1|0:I)+Y|0,w=ug((M=s=u+M|0)^tA,(s=s>>>0<u>>>0?I+1|0:I)^_,32),I=(I=y)+(y=p)|0,_=ug(r^(Y=d=w+aA|0),(I=d>>>0<w>>>0?I+1|0:I)^F,24),u=d=p,F=I,O=Y,Y=w,w=(I=M)+(M=Z)|0,I=s+yA|0,I=(I=w>>>0<M>>>0?I+1|0:I)+d|0,M=s=w+(r=_)|0,w=I=s>>>0<w>>>0?I+1|0:I,Y=ug(Y^s,I^y,16),I=(d=p)+F|0,O=ug(_^(r=y=O+(s=Y)|0),(s=r>>>0<s>>>0?I+1|0:I)^u,63),y=p,F=t,_=S,u=Y,I=o+B|0,I=(I=(Y=K)>>>0>(S=Y+CA|0)>>>0?I+1|0:I)+t|0,S=ug(u^(t=Y=S+N|0),(o=d)^(d=t>>>0<S>>>0?I+1|0:I),32),I=(I=c)+(c=p)|0,I=(o=S)>>>0>(Y=_+o|0)>>>0?I+1|0:I,u=_=ug((o=Y)^N,I^F,24),N=F=p,Y=I,CA=S,I=d+E|0,I=(I=(S=t+j|0)>>>0<t>>>0?I+1|0:I)+F|0,F=t=(d=S)+_|0,tA=ug(CA^t,(S=t>>>0<d>>>0?I+1|0:I)^c,16),I=(I=Y)+(Y=p)|0,o=t=(c=tA)+o|0,iA=ug(t^u,(_=t>>>0<c>>>0?I+1|0:I)^N,63),c=p,N=r,I=D+(t=G)|0,I=(I=(d=U+P|0)>>>0<U>>>0?I+1|0:I)+(u=aA=i[g+132>>2])|0,d=I=(G=(r=i[g+128>>2])+d|0)>>>0<d>>>0?I+1|0:I,D=ug(G^sA,I^l,32),I=(I=s)+(s=p)|0,l=U=N+D|0,N=u=ug(U^P,(I=U>>>0<D>>>0?I+1|0:I)^t,24),P=t=p,U=I,CA=D,I=d+T|0,d=D=b+G|0,I=(I=D>>>0<G>>>0?I+1|0:I)+t|0,t=ug(CA^(D=G=D+u|0),(t=s)^(s=D>>>0<d>>>0?I+1|0:I),16),I=(I=U)+(U=p)|0,l=G=t+l|0,fA=ug(G^N,(u=G>>>0<t>>>0?I+1|0:I)^P,63),G=p,d=y,I=H+z|0,I=(I=(P=m+R|0)>>>0<m>>>0?I+1|0:I)+y|0,I=(H=(N=P)+O|0)>>>0<N>>>0?I+1|0:I,N=H,y=I,P=ug(H^nA,I^v,32),I=e+(H=p)|0,I=a>>>0>(v=a+P|0)>>>0?I+1|0:I,O=e=ug((a=v)^O,I^d,24),CA=d=p,v=I,R=a,I=y+rA|0,I=(a=$)>>>0>(e=a+N|0)>>>0?I+1|0:I,a=e,I=I+d|0,e=H,H=I=a>>>0>(y=O+a|0)>>>0?I+1|0:I,nA=ug((a=y)^P,e^I,16),I=(y=p)+v|0,O=ug((v=d=R+(e=nA)|0)^O,(I=e>>>0>v>>>0?I+1|0:I)^CA,63),d=p,N=I,P=t,R=AA,I=Q+(e=k)|0,I=(I=(t=QA)>>>0>(AA=t+AA|0)>>>0?I+1|0:I)+w|0,k=t=M+AA|0,w=ug(t^gA,(w=J)^(J=t>>>0<M>>>0?I+1|0:I),32),I=(t=p)+f|0,CA=M=w+EA|0,e=ug(R^M,(I=M>>>0<w>>>0?I+1|0:I)^e,24),gA=EA=p,f=I,M=t,EA=e,R=w,I=J+gA|0,I=(I=(w=e+k|0)>>>0<k>>>0?I+1|0:I)+(AA=i[g+156>>2])|0,J=k=(t=i[g+152>>2])+w|0,e=M,M=I=k>>>0<w>>>0?I+1|0:I,R=ug(R^k,e^I,16),I=(I=f)+(f=p)|0,e=I=(w=R)>>>0>(k=w+CA|0)>>>0?I+1|0:I,CA=ug(EA^(w=k),I^gA,63),EA=I=p,k=I,gA=v,I=S+z|0,I=(I=(v=F+m|0)>>>0<F>>>0?I+1|0:I)+k|0,k=F=v+CA|0,P=ug(F^P,(S=U)^(U=F>>>0<v>>>0?I+1|0:I),32),I=(F=p)+N|0,S=I=(v=gA+(S=P)|0)>>>0<S>>>0?I+1|0:I,EA=CA=ug(CA^v,EA^I,24),gA=I=p,N=I,sA=P,I=U+q|0,I=(I=(P=k+IA|0)>>>0<k>>>0?I+1|0:I)+N|0,I=(k=(U=P)+CA|0)>>>0<U>>>0?I+1|0:I,U=k,N=F,F=I,CA=ug(sA^k,N^I,16),I=S+(N=p)|0,I=(k=v+CA|0)>>>0<v>>>0?I+1|0:I,v=k,S=I,IA=ug(k^EA,I^gA,63),k=p,P=c,gA=iA,I=c+E|0,I=s+(j>>>0>(iA=j+iA|0)>>>0?I+1|0:I)|0,q=c=D+iA|0,iA=ug(c^nA,(s=y)^(y=c>>>0<D>>>0?I+1|0:I),32),I=e+(c=p)|0,D=I=(s=w+iA|0)>>>0<w>>>0?I+1|0:I,P=e=ug(gA^s,I^P,24),nA=I=p,w=I,I=y+aA|0,I=(I=(e=r+q|0)>>>0<r>>>0?I+1|0:I)+w|0,q=y=P+(r=e)|0,iA=ug(y^iA,(w=y>>>0<r>>>0?I+1|0:I)^c,16),I=D+(r=p)|0,aA=y=s+iA|0,e=ug(y^P,(s=y>>>0<s>>>0?I+1|0:I)^nA,63),y=p,I=Q+(c=G)|0,I=H+((D=QA)>>>0>(P=D+fA|0)>>>0?I+1|0:I)|0,D=f,f=I=a>>>0>(G=a+P|0)>>>0?I+1|0:I,P=ug((a=G)^R,D^I,32),I=_+(G=p)|0,I=o>>>0>(H=o+P|0)>>>0?I+1|0:I,o=c,c=I,o=ug(H^fA,o^I,24),fA=I=p,D=I,gA=o,I=f+T|0,I=(I=(o=b)>>>0>(_=o+a|0)>>>0?I+1|0:I)+D|0,nA=f=gA+(o=_)|0,R=ug(f^P,(D=f>>>0<o>>>0?I+1|0:I)^G,16),I=c+(o=p)|0,P=f=H+R|0,_=ug(gA^f,(G=f>>>0<H>>>0?I+1|0:I)^fA,63),f=p,I=cA+(c=d)|0,I=M+((a=(H=V)+O|0)>>>0<H>>>0?I+1|0:I)|0,H=I=(d=J+a|0)>>>0<J>>>0?I+1|0:I,a=ug(d^tA,I^Y,32),I=u+(J=p)|0,Y=c,c=I=l>>>0>(M=l+a|0)>>>0?I+1|0:I,l=ug(M^O,Y^I,24),O=I=p,Y=I,gA=a,I=H+L|0,I=(I=(a=d+BA|0)>>>0<d>>>0?I+1|0:I)+Y|0,a=ug(gA^(Y=d=a+(u=l)|0),(u=J)^(J=a>>>0>Y>>>0?I+1|0:I),16),I=c+(H=p)|0,l=ug(l^(u=d=M+a|0),(d=u>>>0<M>>>0?I+1|0:I)^O,63),c=p,M=y,O=e,gA=a,I=F+oA|0,F=a=U+x|0,I=(I=a>>>0<U>>>0?I+1|0:I)+y|0,e=ug(gA^(a=U=a+e|0),(y=F>>>0>a>>>0?I+1|0:I)^H,32),I=(I=G)+(G=p)|0,U=I=(H=e+P|0)>>>0<e>>>0?I+1|0:I,P=M=ug(O^H,I^M,24),O=I=p,F=I,I=y+eA|0,I=(I=(a=(M=W)+a|0)>>>0<M>>>0?I+1|0:I)+F|0,fA=y=P+a|0,tA=ug(y^e,(F=y>>>0<a>>>0?I+1|0:I)^G,16),I=U+(M=p)|0,P=ug((EA=y=H+tA|0)^P,(y=y>>>0<H>>>0?I+1|0:I)^O,63),G=p,H=f,e=_,I=w+AA|0,I=(I=(_=t+q|0)>>>0<t>>>0?I+1|0:I)+f|0,f=I=(w=_)>>>0>(U=e+w|0)>>>0?I+1|0:I,_=ug((w=U)^CA,I^N,32),I=(I=d)+(d=p)|0,I=(a=_)>>>0>(U=a+u|0)>>>0?I+1|0:I,u=e=ug(e^(a=U),I^H,24),U=I,N=a,a=_,_=(I=w)+(w=Z)|0,I=f+yA|0,I=(I=w>>>0>_>>>0?I+1|0:I)+(H=p)|0,I=(f=(w=_)+e|0)>>>0<w>>>0?I+1|0:I,w=f,_=I,a=ug(a^f,I^d,16),I=(e=p)+U|0,d=ug((CA=f=N+a|0)^u,(f=f>>>0<a>>>0?I+1|0:I)^H,63),H=p,U=c,N=l,I=D+rA|0,I=(I=(u=(l=$)+nA|0)>>>0<l>>>0?I+1|0:I)+c|0,l=D=N+u|0,c=I=D>>>0<u>>>0?I+1|0:I,u=ug(D^iA,I^r,32),I=S+(D=p)|0,S=r=v+u|0,N=r=ug(N^r,(I=r>>>0<v>>>0?I+1|0:I)^U,24),q=U=p,v=I,O=S,I=c+B|0,I=(I=(r=(S=K)+l|0)>>>0<S>>>0?I+1|0:I)+U|0,I=(c=N+r|0)>>>0<r>>>0?I+1|0:I,S=c,r=D,D=I,nA=ug(c^u,r^I,16),I=(I=v)+(v=p)|0,N=ug((c=O+(U=nA)|0)^N,(I=c>>>0<U>>>0?I+1|0:I)^q,63),U=p,l=c,u=I,I=J+(r=k)|0,k=c=Y+IA|0,I=(I=c>>>0<Y>>>0?I+1|0:I)+(q=i[g+204>>2])|0,k=I=(c=(O=i[g+200>>2])+c|0)>>>0<k>>>0?I+1|0:I,Y=ug(c^R,I^o,32),I=(I=s)+(s=p)|0,I=(o=Y)>>>0>(J=o+aA|0)>>>0?I+1|0:I,r=ug((o=J)^IA,I^r,24),R=aA=p,J=I,gA=o,aA=Y,I=k+R|0,I=(I=(Y=c+r|0)>>>0<c>>>0?I+1|0:I)+(IA=i[g+164>>2])|0,Y=c=(iA=i[g+160>>2])+(k=Y)|0,aA=ug(aA^c,(o=c>>>0<k>>>0?I+1|0:I)^s,16),I=(I=J)+(J=p)|0,r=ug(r^(gA=c=gA+(s=aA)|0),(c=c>>>0<s>>>0?I+1|0:I)^R,63),R=I=p,s=I,sA=a,I=F+rA|0,I=(I=(a=(k=$)+fA|0)>>>0<k>>>0?I+1|0:I)+s|0,e=ug(sA^(s=k=a+r|0),(k=a>>>0>s>>>0?I+1|0:I)^e,32),I=(F=p)+u|0,l=a=l+e|0,u=ug(r^a,(I=a>>>0<e>>>0?I+1|0:I)^R,24),R=r=p,a=I,fA=l,sA=e,I=k+q|0,I=(I=(e=s+O|0)>>>0<s>>>0?I+1|0:I)+r|0,l=s=e+u|0,sA=ug(sA^s,(r=F)^(F=s>>>0<e>>>0?I+1|0:I),16),I=(r=p)+a|0,fA=ug((wA=s=fA+(k=sA)|0)^u,(s=s>>>0<k>>>0?I+1|0:I)^R,63),k=p,I=AA+(a=G)|0,I=(I=(e=t+P|0)>>>0<t>>>0?I+1|0:I)+_|0,e=ug((_=t=e+w|0)^nA,(t=t>>>0<w>>>0?I+1|0:I)^v,32),I=(I=c)+(c=p)|0,w=I=e>>>0>(G=e+gA|0)>>>0?I+1|0:I,u=a=ug(G^P,I^a,24),P=I=p,v=I,a=(I=_)+(_=K)|0,I=t+B|0,I=(I=a>>>0<_>>>0?I+1|0:I)+v|0,AA=t=u+a|0,nA=ug(t^e,(v=t>>>0<a>>>0?I+1|0:I)^c,16),I=w+(_=p)|0,R=t=G+nA|0,a=ug(t^u,(c=t>>>0<G>>>0?I+1|0:I)^P,63),t=p,e=d,I=(G=H)+L|0,I=(I=(w=d+BA|0)>>>0<d>>>0?I+1|0:I)+D|0,H=I=(d=w+S|0)>>>0<S>>>0?I+1|0:I,D=ug(d^aA,I^J,32),I=(I=y)+(y=p)|0,I=(w=D)>>>0>(J=w+EA|0)>>>0?I+1|0:I,S=ug(e^(w=J),I^G,24),u=G=p,J=I,P=w,L=D,I=H+E|0,H=D=d+j|0,I=(I=D>>>0<d>>>0?I+1|0:I)+G|0,aA=ug(L^(D=d=D+(e=S)|0),(w=H>>>0>D>>>0?I+1|0:I)^y,16),I=(I=J)+(J=p)|0,u=ug(S^(e=y=P+(G=aA)|0),(G=e>>>0<G>>>0?I+1|0:I)^u,63),y=p,d=U,I=U+z|0,I=(I=(S=m+N|0)>>>0<m>>>0?I+1|0:I)+o|0,I=(H=Y+S|0)>>>0<Y>>>0?I+1|0:I,Y=H,H=I,S=ug(Y^tA,I^M,32),I=(I=f)+(f=p)|0,o=d,d=I=(U=(M=S)+CA|0)>>>0<M>>>0?I+1|0:I,N=o=ug(U^N,o^I,24),P=I=p,M=I,L=S,S=(I=Y)+(Y=W)|0,I=H+eA|0,I=(I=Y>>>0>S>>>0?I+1|0:I)+M|0,M=H=(Y=S)+o|0,o=ug(L^H,(Y=H>>>0<Y>>>0?I+1|0:I)^f,16),I=d+(H=p)|0,I=(f=U+o|0)>>>0<U>>>0?I+1|0:I,U=f,S=I,N=ug(f^N,I^P,63),f=p,d=t,P=a,L=o,I=F+T|0,I=(I=(a=(o=b)+l|0)>>>0<o>>>0?I+1|0:I)+t|0,t=I=a>>>0>(F=P+a|0)>>>0?I+1|0:I,o=ug(L^F,I^H,32),I=(I=G)+(G=p)|0,I=(a=o)>>>0>(H=a+e|0)>>>0?I+1|0:I,l=e=ug(P^(a=H),I^d,24),H=I,P=o,o=(I=F)+(F=Z)|0,I=t+yA|0,I=(I=o>>>0<F>>>0?I+1|0:I)+(d=p)|0,F=t=o+e|0,o=I=t>>>0<o>>>0?I+1|0:I,t=(G=tA=ug(P^t,I^G,16))+a|0,I=(a=p)+H|0,e=t,L=ug(H=t^l,(l=t>>>0<G>>>0?I+1|0:I)^d,63),d=p,I=v+Q|0,I=(I=(G=QA)>>>0>(H=G+AA|0)>>>0?I+1|0:I)+(t=y)|0,v=G=H+u|0,r=ug(G^sA,(y=G>>>0<H>>>0?I+1|0:I)^r,32),I=S+(G=p)|0,I=(H=U+r|0)>>>0<U>>>0?I+1|0:I,U=H,S=ug(H^u,I^t,24),P=t=p,H=I,AA=U,I=y+oA|0,I=(U=x)>>>0>(v=U+v|0)>>>0?I+1|0:I,U=v,I=I+t|0,v=y=v+(u=S)|0,y=ug(y^r,(S=y>>>0<U>>>0?I+1|0:I)^G,16),I=(U=p)+H|0,EA=t=AA+y|0,BA=ug(t^u,(G=t>>>0<y>>>0?I+1|0:I)^P,63),H=p,P=N,I=w+IA|0,I=(I=(r=D+iA|0)>>>0<D>>>0?I+1|0:I)+(t=f)|0,u=ug((f=D=r+N|0)^nA,(D=r>>>0>f>>>0?I+1|0:I)^_,32),I=(I=s)+(s=p)|0,N=w=(_=u)+wA|0,r=ug(P^w,(I=w>>>0<_>>>0?I+1|0:I)^t,24),w=t=p,_=I,P=r,I=D+t|0,I=(I=(r=f+r|0)>>>0<f>>>0?I+1|0:I)+(AA=i[g+132>>2])|0,D=f=(t=i[g+128>>2])+r|0,r=I=f>>>0<r>>>0?I+1|0:I,nA=ug(f^u,I^s,16),I=(I=_)+(_=p)|0,CA=ug(P^(f=(s=nA)+N|0),(I=f>>>0<s>>>0?I+1|0:I)^w,63),s=p,u=f,N=I,P=y,I=cA+(w=k)|0,I=(I=(f=(y=V)+fA|0)>>>0<y>>>0?I+1|0:I)+Y|0,M=ug((f=y=f+M|0)^aA,(k=f>>>0<M>>>0?I+1|0:I)^J,32),I=(y=p)+c|0,I=(Y=M)>>>0>(J=Y+R|0)>>>0?I+1|0:I,w=ug((Y=J)^fA,I^w,24),gA=R=p,c=I,J=y,aA=M,I=k+R|0,I=(I=(M=f+w|0)>>>0<f>>>0?I+1|0:I)+(fA=i[g+196>>2])|0,M=f=(y=i[g+192>>2])+(k=M)|0,aA=ug(aA^f,(R=J)^(J=f>>>0<k>>>0?I+1|0:I),16),I=(I=c)+(c=p)|0,w=ug(w^(R=f=(k=aA)+Y|0),(f=f>>>0<k>>>0?I+1|0:I)^gA,63),gA=I=p,k=I,I=o+q|0,I=(I=(Y=F+O|0)>>>0<F>>>0?I+1|0:I)+k|0,I=(F=Y+w|0)>>>0<Y>>>0?I+1|0:I,Y=F,k=I,o=ug(F^P,I^U,32),I=(U=p)+N|0,u=F=u+o|0,N=ug(w^F,(I=F>>>0<o>>>0?I+1|0:I)^gA,24),q=F=p,w=I,P=o,I=k+AA|0,I=(I=(o=t+Y|0)>>>0<t>>>0?I+1|0:I)+F|0,O=k=o+N|0,gA=ug(P^k,(F=k>>>0<o>>>0?I+1|0:I)^U,16),I=(I=w)+(w=p)|0,Y=k=(U=gA)+u|0,q=ug(k^N,(o=k>>>0<U>>>0?I+1|0:I)^q,63),U=p,I=Q+(k=d)|0,I=S+((u=QA)>>>0>(N=u+L|0)>>>0?I+1|0:I)|0,v=I=(d=v+N|0)>>>0<v>>>0?I+1|0:I,u=ug(d^nA,I^_,32),I=(I=f)+(f=p)|0,I=(_=u)>>>0>(S=_+R|0)>>>0?I+1|0:I,_=k,k=I,N=ug(S^L,_^I,24),L=I=p,_=I,P=u,I=v+rA|0,I=(I=(u=d+$|0)>>>0<d>>>0?I+1|0:I)+_|0,_=I=(d=(v=u)+N|0)>>>0<v>>>0?I+1|0:I,nA=ug(P^(v=d),I^f,16),I=k+(u=p)|0,R=f=S+nA|0,N=ug(f^N,(d=f>>>0<S>>>0?I+1|0:I)^L,63),f=p,k=H,I=H+T|0,I=r+(b>>>0>(P=b+BA|0)>>>0?I+1|0:I)|0,r=c,c=I=D>>>0>(H=D+P|0)>>>0?I+1|0:I,P=ug(H^aA,r^I,32),I=l+(D=p)|0,r=k,k=I=e>>>0>(S=e+P|0)>>>0?I+1|0:I,l=e=ug(S^BA,r^I,24),r=I=p,I=c+IA|0,I=(I=(e=H+iA|0)>>>0<H>>>0?I+1|0:I)+r|0,IA=c=l+e|0,iA=ug(c^P,(H=c>>>0<e>>>0?I+1|0:I)^D,16),I=k+(D=p)|0,BA=c=S+iA|0,e=ug(c^l,(k=c>>>0<S>>>0?I+1|0:I)^r,63),c=p,S=s,I=s+oA|0,I=J+((r=x)>>>0>(l=r+CA|0)>>>0?I+1|0:I)|0,a=ug((r=s=M+l|0)^tA,(s=r>>>0<M>>>0?I+1|0:I)^a,32),I=(I=G)+(G=p)|0,P=S=ug((l=J=a+EA|0)^CA,(I=a>>>0>l>>>0?I+1|0:I)^S,24),L=J=p,M=I,I=s+cA|0,I=(I=(r=(S=V)+r|0)>>>0<S>>>0?I+1|0:I)+J|0,J=s=P+r|0,a=ug(s^a,(S=s>>>0<r>>>0?I+1|0:I)^G,16),I=(I=M)+(M=p)|0,CA=s=a+l|0,P=ug(s^P,(G=s>>>0<a>>>0?I+1|0:I)^L,63),s=p,L=N,aA=a,I=F+eA|0,I=(I=(a=W)>>>0>(l=a+O|0)>>>0?I+1|0:I)+(r=f)|0,f=I=(a=l)>>>0>(F=a+N|0)>>>0?I+1|0:I,l=ug(aA^(a=F),I^M,32),I=(I=k)+(k=p)|0,N=F=(M=l)+BA|0,L=r=ug(L^F,(I=F>>>0<M>>>0?I+1|0:I)^r,24),BA=F=p,M=I,I=f+B|0,I=(I=(a=(r=K)+a|0)>>>0<r>>>0?I+1|0:I)+F|0,tA=f=L+a|0,aA=ug(f^l,(r=k)^(k=f>>>0<a>>>0?I+1|0:I),16),I=(F=p)+M|0,M=f=(r=aA)+N|0,L=ug(f^L,(r=f>>>0<r>>>0?I+1|0:I)^BA,63),f=p,N=e,I=_+z|0,_=e=m+v|0,I=(I=e>>>0<v>>>0?I+1|0:I)+(a=c)|0,l=ug((e=v=N+e|0)^gA,(c=e>>>0<_>>>0?I+1|0:I)^w,32),I=(I=G)+(G=p)|0,v=I=(w=(v=l)+CA|0)>>>0<v>>>0?I+1|0:I,N=a=ug(N^w,I^a,24),BA=I=p,_=I,I=c+E|0,I=(I=(a=j)>>>0>(e=a+e|0)>>>0?I+1|0:I)+_|0,_=c=N+(a=e)|0,G=ug(c^l,(a=c>>>0<a>>>0?I+1|0:I)^G,16),I=v+(e=p)|0,I=(c=w+G|0)>>>0<w>>>0?I+1|0:I,w=c,v=I,BA=ug(c^N,I^BA,63),c=p,l=s,O=P,I=H+yA|0,I=(I=(N=Z)>>>0>(P=N+IA|0)>>>0?I+1|0:I)+s|0,I=(H=O+(N=P)|0)>>>0<N>>>0?I+1|0:I,N=H,s=I,P=ug(H^nA,I^u,32),I=o+(H=p)|0,o=I=(u=Y+P|0)>>>0<Y>>>0?I+1|0:I,u=ug(O^(Y=u),I^l,24),O=I=p,l=I,I=s+fA|0,I=(I=(N=y+N|0)>>>0<y>>>0?I+1|0:I)+l|0,l=s=(IA=u)+(u=N)|0,CA=ug(s^P,(N=H)^(H=s>>>0<u>>>0?I+1|0:I),16),I=o+(u=p)|0,I=(s=Y+CA|0)>>>0<Y>>>0?I+1|0:I,Y=s,IA=ug(s^IA,I^O,63),s=p,N=I,gA=q,I=S+(o=U)|0,I=(I=(q=J+q|0)>>>0<J>>>0?I+1|0:I)+(O=nA=i[g+156>>2])|0,J=I=(U=(P=i[g+152>>2])+(J=q)|0)>>>0<J>>>0?I+1|0:I,S=ug(U^iA,I^D,32),I=(I=d)+(d=p)|0,q=D=S+R|0,O=o=ug(gA^D,(I=D>>>0<S>>>0?I+1|0:I)^o,24),R=iA=p,D=I,gA=EA=i[g+236>>2],EA=q,q=S,I=J+R|0,I=(I=(o=o+U|0)>>>0<U>>>0?I+1|0:I)+gA|0,I=(U=(S=i[g+232>>2])+o|0)>>>0<o>>>0?I+1|0:I,o=d,d=I,iA=ug(q^U,o^I,16),I=(J=p)+D|0,O=ug((D=o=EA+(q=iA)|0)^O,(o=o>>>0<q>>>0?I+1|0:I)^R,63),R=I=p,q=I,EA=G,I=k+T|0,I=(I=(G=b+tA|0)>>>0<b>>>0?I+1|0:I)+q|0,e=ug(EA^(q=b=G+O|0),(b=b>>>0<G>>>0?I+1|0:I)^e,32),I=(G=p)+N|0,N=k=Y+e|0,T=ug(O^k,R^(I=k>>>0<e>>>0?I+1|0:I),24),tA=k=p,Y=I,O=N,R=e,I=b+E|0,I=(I=(e=j)>>>0>(N=e+q|0)>>>0?I+1|0:I)+k|0,R=ug(R^(k=b=(e=N)+T|0),(e=e>>>0>k>>>0?I+1|0:I)^G,16),I=(I=Y)+(Y=p)|0,N=b=O+(G=R)|0,O=ug(b^T,(q=b>>>0<G>>>0?I+1|0:I)^tA,63),G=p,b=f,EA=L,I=f+yA|0,I=a+(Z>>>0>(L=Z+L|0)>>>0?I+1|0:I)|0,u=ug((T=f=_+L|0)^CA,(f=f>>>0<_>>>0?I+1|0:I)^u,32),I=o+(_=p)|0,I=(a=D+u|0)>>>0<D>>>0?I+1|0:I,D=a,o=b,b=I,L=a=ug(EA^a,o^I,24),CA=I=p,o=I,EA=a,tA=u,I=f+oA|0,I=(I=(a=x)>>>0>(u=a+T|0)>>>0?I+1|0:I)+o|0,L=f=L+(a=u)|0,tA=ug(tA^f,(o=f>>>0<a>>>0?I+1|0:I)^_,16),I=b+(_=p)|0,I=(f=D+tA|0)>>>0<D>>>0?I+1|0:I,D=f,a=I,u=ug(EA^f,I^CA,63),f=p,b=c,I=c+AA|0,I=(I=(T=t+BA|0)>>>0<t>>>0?I+1|0:I)+H|0,I=(t=l+T|0)>>>0<l>>>0?I+1|0:I,l=t,t=I,T=ug(l^iA,I^J,32),I=r+(c=p)|0,r=b,b=I=(H=M+T|0)>>>0<M>>>0?I+1|0:I,r=M=ug(H^BA,r^I,24),BA=I=p,J=I,I=t+z|0,I=(I=(M=m+l|0)>>>0<m>>>0?I+1|0:I)+J|0,l=m=r+(t=M)|0,T=ug(m^T,(M=c)^(c=t>>>0>m>>>0?I+1|0:I),16),I=b+(J=p)|0,z=m=H+T|0,M=ug(m^r,(t=m>>>0<H>>>0?I+1|0:I)^BA,63),b=p,m=s,I=s+fA|0,I=(I=(H=y+IA|0)>>>0<y>>>0?I+1|0:I)+d|0,I=(y=H+U|0)>>>0<U>>>0?I+1|0:I,U=y,y=I,F=ug(U^aA,I^F,32),I=v+(s=p)|0,r=m,m=I=w>>>0>(d=w+F|0)>>>0?I+1|0:I,v=w=ug(d^IA,r^I,24),r=I=p,I=y+nA|0,I=(I=(U=U+P|0)>>>0<P>>>0?I+1|0:I)+r|0,H=y=U+w|0,F=ug(y^F,(w=s)^(s=y>>>0<U>>>0?I+1|0:I),16),I=m+(U=p)|0,r=ug((w=y=d+F|0)^v,(y=y>>>0<d>>>0?I+1|0:I)^r,63),m=p,d=f,P=F,I=f+e|0,I=(F=k+u|0)>>>0<k>>>0?I+1|0:I,k=F,I=I+(v=i[g+164>>2])|0,v=ug(P^(F=f=F+i[g+160>>2]|0),(f=f>>>0<k>>>0?I+1|0:I)^U,32),I=(I=t)+(t=p)|0,e=d,d=I=(k=(U=v)+z|0)>>>0<U>>>0?I+1|0:I,e=ug(k^u,e^I,24),P=I=p,U=I,I=f+gA|0,I=(I=(F=F+S|0)>>>0<S>>>0?I+1|0:I)+U|0,BA=ug((z=f=F+e|0)^v,(f=f>>>0<F>>>0?I+1|0:I)^t,16),I=d+(U=p)|0,d=t=k+BA|0,u=ug(t^e,(k=t>>>0<k>>>0?I+1|0:I)^P,63),t=p,e=M,S=w,I=o+rA|0,I=(I=(w=(M=$)+L|0)>>>0<M>>>0?I+1|0:I)+(F=b)|0,Y=ug((v=M=e+w|0)^R,(b=w>>>0>v>>>0?I+1|0:I)^Y,32),I=(I=y)+(y=p)|0,o=F,F=I=(w=Y)>>>0>(M=S+w|0)>>>0?I+1|0:I,o=S=ug(e^M,o^I,24),e=I=p,S=Y,I=b+Q|0,I=(I=(Y=QA)>>>0>(v=Y+v|0)>>>0?I+1|0:I)+e|0,v=ug(S^(w=b=v+o|0),(Y=w>>>0<v>>>0?I+1|0:I)^y,16),I=F+(S=p)|0,P=ug((F=b=M+v|0)^o,(M=F>>>0<M>>>0?I+1|0:I)^e,63),b=p,L=r,I=c+cA|0,I=(o=V)>>>0>(r=o+l|0)>>>0?I+1|0:I,o=r,I=I+(y=m)|0,e=ug((r=c=L+r|0)^tA,(m=r>>>0<o>>>0?I+1|0:I)^_,32),I=q+(c=p)|0,_=y,y=I=(o=N+e|0)>>>0<N>>>0?I+1|0:I,l=ug(L^o,_^I,24),q=I=p,_=I,N=e,e=(I=r)+(r=W)|0,I=m+eA|0,I=(I=r>>>0>e>>>0?I+1|0:I)+_|0,_=I=(r=e)>>>0>(m=r+l|0)>>>0?I+1|0:I,L=ug(N^m,I^c,16),I=y+(r=p)|0,N=ug((c=o+L|0)^l,(I=c>>>0<o>>>0?I+1|0:I)^q,63),y=p,e=I,I=B+(o=G)|0,I=s+((l=K)>>>0>(q=l+O|0)>>>0?I+1|0:I)|0,l=G=H+q|0,q=ug(G^T,(s=G>>>0<H>>>0?I+1|0:I)^J,32),I=a+(G=p)|0,J=I=D>>>0>(H=D+q|0)>>>0?I+1|0:I,T=I=ug(H^O,I^o,24),D=I,o=I+l|0,I=(a=p)+s|0,I=(I=o>>>0<D>>>0?I+1|0:I)+(IA=i[g+204>>2])|0,I=(s=o+i[g+200>>2]|0)>>>0<o>>>0?I+1|0:I,o=G,G=I,IA=ug(s^q,o^I,16),I=J+(D=p)|0,I=(o=H+IA|0)>>>0<H>>>0?I+1|0:I,H=o,J=I,a=ug(T^o,I^a,63),o=I=p,l=c,T=v,I=f+E|0,I=(I=(c=j)>>>0>(v=c+z|0)>>>0?I+1|0:I)+o|0,T=ug(T^(q=f=(c=v)+a|0),(f=f>>>0<c>>>0?I+1|0:I)^S,32),I=(c=p)+e|0,S=I=(v=l+(S=T)|0)>>>0<S>>>0?I+1|0:I,a=ug(a^v,o^I,24),l=I=p,o=I,R=a,I=f+Q|0,I=(I=(a=QA)>>>0>(e=a+q|0)>>>0?I+1|0:I)+o|0,T=ug((o=f=R+(a=e)|0)^T,(a=o>>>0<a>>>0?I+1|0:I)^c,16),I=S+(e=p)|0,I=(f=v+T|0)>>>0<v>>>0?I+1|0:I,v=f,S=I,f=ug(R^f,I^l,63),c=p,l=t,R=u,I=t+B|0,I=Y+((u=K)>>>0>(q=R+u|0)>>>0?I+1|0:I)|0,r=ug((u=t=w+q|0)^L,(t=t>>>0<w>>>0?I+1|0:I)^r,32),I=J+(w=p)|0,J=I=H>>>0>(Y=H+r|0)>>>0?I+1|0:I,q=l=ug(R^(H=Y),I^l,24),z=I=p,Y=I,R=l,L=r,I=t+cA|0,I=(I=(r=V)>>>0>(l=r+u|0)>>>0?I+1|0:I)+Y|0,q=t=q+(r=l)|0,L=ug(L^t,(Y=w)^(w=t>>>0<r>>>0?I+1|0:I),16),I=J+(Y=p)|0,I=(t=H+L|0)>>>0<H>>>0?I+1|0:I,H=t,J=I,u=ug(R^t,I^z,63),t=p,R=P,I=eA+(r=b)|0,I=_+((l=W)>>>0>(P=l+P|0)>>>0?I+1|0:I)|0,l=ug((_=b=m+P|0)^IA,(b=m>>>0>_>>>0?I+1|0:I)^D,32),I=k+(m=p)|0,I=(D=d+l|0)>>>0<d>>>0?I+1|0:I,d=D,k=I,I=ug(R^D,I^r,24),z=i[g+236>>2],R=I,r=_,_=I,r=r+I|0,I=(D=p)+b|0,I=(I=r>>>0<_>>>0?I+1|0:I)+z|0,r=I=(b=r+i[g+232>>2]|0)>>>0<r>>>0?I+1|0:I,z=ug((_=b)^l,I^m,16),I=k+(l=p)|0,P=b=d+z|0,D=ug(R^b,(m=b>>>0<d>>>0?I+1|0:I)^D,63),b=p,d=y,R=N,I=y+G|0,I=(I=(k=s+N|0)>>>0<s>>>0?I+1|0:I)+(IA=i[g+164>>2])|0,U=ug((N=y=(s=k)+i[g+160>>2]|0)^BA,(y=y>>>0<s>>>0?I+1|0:I)^U,32),I=M+(s=p)|0,M=d,d=I=F>>>0>(G=F+U|0)>>>0?I+1|0:I,M=F=ug(R^G,M^I,24),BA=I=p,k=I,R=U,I=y+oA|0,I=(I=(F=(U=x)+N|0)>>>0<U>>>0?I+1|0:I)+k|0,IA=y=M+F|0,F=ug(R^y,(k=s)^(s=y>>>0<F>>>0?I+1|0:I),16),I=d+(k=p)|0,I=(y=G+F|0)>>>0<G>>>0?I+1|0:I,G=y,d=I,N=ug(y^M,I^BA,63),y=p,U=t,R=F,I=t+a|0,I=(I=(F=o+u|0)>>>0<o>>>0?I+1|0:I)+(M=i[g+132>>2])|0,o=ug(R^(M=t=F+i[g+128>>2]|0),(t=t>>>0<F>>>0?I+1|0:I)^k,32),I=(I=m)+(m=p)|0,a=U,U=I=o>>>0>(k=o+P|0)>>>0?I+1|0:I,a=ug(k^u,a^I,24),P=I=p,F=I,u=o,o=(I=M)+(M=$)|0,I=t+rA|0,I=(I=o>>>0<M>>>0?I+1|0:I)+F|0,BA=t=o+a|0,AA=ug(u^t,(F=t>>>0<o>>>0?I+1|0:I)^m,16),I=U+(M=p)|0,U=I=(m=k+AA|0)>>>0<k>>>0?I+1|0:I,u=ug((k=m)^a,I^P,63),m=p,P=D,I=w+yA|0,w=o=(D=Z)+q|0,I=(I=o>>>0<D>>>0?I+1|0:I)+(t=b)|0,a=ug((o=D=P+o|0)^T,(b=w>>>0>o>>>0?I+1|0:I)^e,32),I=d+(D=p)|0,I=(w=G+a|0)>>>0<G>>>0?I+1|0:I,G=w,e=t,t=I,I=ug(P^w,e^I,24),P=i[g+156>>2],e=I,w=I,o=I+o|0,I=(d=p)+b|0,I=(I=o>>>0<w>>>0?I+1|0:I)+P|0,I=o>>>0>(b=o+i[g+152>>2]|0)>>>0?I+1|0:I,o=D,D=I,q=ug((w=b)^a,o^I,16),I=t+(o=p)|0,a=d,d=I=(b=G+q|0)>>>0<G>>>0?I+1|0:I,P=ug(e^(G=b),a^I,63),t=p,b=y,I=y+r|0,I=(I=(a=_+N|0)>>>0<_>>>0?I+1|0:I)+(e=i[g+204>>2])|0,I=(y=a+i[g+200>>2]|0)>>>0<a>>>0?I+1|0:I,a=Y,Y=I,a=ug(y^L,a^I,32),I=S+(_=p)|0,I=(r=v+a|0)>>>0<v>>>0?I+1|0:I,v=r,e=b,b=I,r=ug(r^N,e^I,24),e=I=p,L=r,I=I+Y|0,I=(I=(r=y+r|0)>>>0<y>>>0?I+1|0:I)+(N=i[g+148>>2])|0,I=(y=r+i[g+144>>2]|0)>>>0<r>>>0?I+1|0:I,Y=y,r=_,_=I,T=ug(y^a,r^I,16),I=b+(r=p)|0,I=(y=v+T|0)>>>0<v>>>0?I+1|0:I,v=y,S=I,N=ug(L^y,e^I,63),y=p,b=c,L=f,I=c+s|0,c=a=f+IA|0,I=(I=a>>>0<f>>>0?I+1|0:I)+(e=i[g+196>>2])|0,e=ug((a=f=a+i[g+192>>2]|0)^z,(f=a>>>0<c>>>0?I+1|0:I)^l,32),I=J+(c=p)|0,b=ug(L^(s=H+e|0),(I=s>>>0<H>>>0?I+1|0:I)^b,24),H=I,z=i[g+220>>2],l=b,R=s,I=(s=p)+f|0,f=a=a+b|0,I=(I=a>>>0<b>>>0?I+1|0:I)+(L=z)|0,L=ug(b=(a=b=(J=i[g+216>>2])+a|0)^e,(e=f>>>0>a>>>0?I+1|0:I)^c,16),I=(I=H)+(H=p)|0,I=(f=L)>>>0>(b=R+f|0)>>>0?I+1|0:I,f=s,s=I,I=ug(l^b,f^I,63),O=i[g+236>>2],R=I,c=I,l=I+BA|0,I=(f=p)+F|0,I=(I=c>>>0>l>>>0?I+1|0:I)+O|0,q=ug((l=c=(F=l)+i[g+232>>2]|0)^q,(c=c>>>0<F>>>0?I+1|0:I)^o,32),I=S+(F=p)|0,I=(o=v+q|0)>>>0<v>>>0?I+1|0:I,v=o,S=f,f=I,I=ug(R^o,S^I,24),R=q,o=I,l=I+l|0,I=(S=p)+c|0,I=z+(o>>>0>l>>>0?I+1|0:I)|0,q=c=l+J|0,z=ug(R^c,(l=F)^(F=c>>>0<J>>>0?I+1|0:I),16),I=f+(J=p)|0,I=(c=v+z|0)>>>0<v>>>0?I+1|0:I,v=c,f=S,S=I,f=ug(o^c,f^I,63),c=p,R=u,I=rA+(o=m)|0,I=D+((u=(l=$)+u|0)>>>0<l>>>0?I+1|0:I)|0,r=ug((l=m=w+u|0)^T,(m=w>>>0>m>>>0?I+1|0:I)^r,32),I=s+(D=p)|0,I=(w=b+r|0)>>>0<b>>>0?I+1|0:I,b=w,s=I,u=o=ug(R^w,I^o,24),T=I=p,w=I,R=r,I=m+eA|0,I=(I=(o=W)>>>0>(r=o+l|0)>>>0?I+1|0:I)+w|0,BA=m=u+(o=r)|0,IA=ug(R^m,(r=D)^(D=o>>>0>m>>>0?I+1|0:I),16),I=s+(w=p)|0,l=ug((s=m=b+IA|0)^u,(o=s>>>0<b>>>0?I+1|0:I)^T,63),b=p,m=t,I=t+E|0,I=_+((r=j)>>>0>(u=r+P|0)>>>0?I+1|0:I)|0,r=ug((_=t=Y+u|0)^L,(t=t>>>0<Y>>>0?I+1|0:I)^H,32),I=U+(H=p)|0,I=k>>>0>(Y=k+r|0)>>>0?I+1|0:I,k=Y,Y=m,m=I,u=Y=ug(k^P,Y^I,24),P=I=p,U=I,I=t+B|0,I=(I=(Y=K)>>>0>(_=Y+_|0)>>>0?I+1|0:I)+U|0,U=t=u+_|0,T=ug(t^r,(Y=H)^(H=t>>>0<_>>>0?I+1|0:I),16),I=m+(Y=p)|0,I=(t=k+T|0)>>>0<k>>>0?I+1|0:I,k=t,_=I,u=ug(t^u,I^P,63),m=p,I=e+(t=y)|0,I=(I=(r=a+N|0)>>>0<a>>>0?I+1|0:I)+(P=i[g+156>>2])|0,a=M,M=I=(y=r+i[g+152>>2]|0)>>>0<r>>>0?I+1|0:I,e=ug(y^AA,a^I,32),I=d+(r=p)|0,I=(a=G+e|0)>>>0<G>>>0?I+1|0:I,G=a,d=t,t=I,a=ug(a^N,d^I,24),N=I=p,R=a,I=M+I|0,I=(I=(a=a+y|0)>>>0<y>>>0?I+1|0:I)+(P=i[g+204>>2])|0,L=y=a+i[g+200>>2]|0,a=ug(y^e,(M=y>>>0<a>>>0?I+1|0:I)^r,16),I=t+(y=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,d=I,N=ug(R^r,N^I,63),t=p,P=a,I=F+Q|0,I=(I=(a=QA)>>>0>(e=a+q|0)>>>0?I+1|0:I)+(r=b)|0,b=F=(a=e)+l|0,e=ug(P^F,(e=y)^(y=a>>>0>F>>>0?I+1|0:I),32),I=_+(F=p)|0,I=(a=k+e|0)>>>0<k>>>0?I+1|0:I,k=a,_=I,a=ug(a^l,I^r,24),r=I=p,l=a,I=y+I|0,I=(I=(a=a+b|0)>>>0<b>>>0?I+1|0:I)+(P=i[g+132>>2])|0,q=b=a+i[g+128>>2]|0,AA=ug(b^e,(y=F)^(F=a>>>0>b>>>0?I+1|0:I),16),I=_+(a=p)|0,_=I=(b=k+AA|0)>>>0<k>>>0?I+1|0:I,P=ug(l^(k=b),I^r,63),b=p,I=D+cA|0,I=(I=(r=V)>>>0>(e=r+BA|0)>>>0?I+1|0:I)+(y=m)|0,m=I=(r=e)>>>0>(D=r+u|0)>>>0?I+1|0:I,e=ug((r=D)^z,I^J,32),I=d+(J=p)|0,I=G>>>0>(D=G+e|0)>>>0?I+1|0:I,G=D,l=y,y=I,I=ug(D^u,l^I,24),u=i[g+164>>2],l=I,D=I,r=I+r|0,I=(d=p)+m|0,I=(I=r>>>0<D>>>0?I+1|0:I)+u|0,I=(m=r+i[g+160>>2]|0)>>>0<r>>>0?I+1|0:I,r=J,J=I,r=ug((D=m)^e,r^I,16),I=y+(e=p)|0,y=d,d=I=(m=G+r|0)>>>0<G>>>0?I+1|0:I,m=ug(l^(G=m),y^I,63),y=p,l=t,R=N,I=t+H|0,I=(I=(u=U+N|0)>>>0<U>>>0?I+1|0:I)+(z=i[g+196>>2])|0,N=ug((u=t=(H=u)+i[g+192>>2]|0)^IA,(t=t>>>0<H>>>0?I+1|0:I)^w,32),I=S+(H=p)|0,w=I=(U=v+N|0)>>>0<v>>>0?I+1|0:I,S=ug(R^U,I^l,24),z=I=p,v=I,R=S,I=t+yA|0,I=(I=(l=(S=Z)+u|0)>>>0<S>>>0?I+1|0:I)+v|0,BA=t=R+(S=l)|0,IA=ug(t^N,(l=H)^(H=t>>>0<S>>>0?I+1|0:I),16),I=w+(v=p)|0,I=(t=U+IA|0)>>>0<U>>>0?I+1|0:I,U=t,l=ug(R^t,I^z,63),t=p,w=c,S=I,R=f,I=c+M|0,I=(I=(u=f+L|0)>>>0<f>>>0?I+1|0:I)+(N=i[g+148>>2])|0,Y=ug((u=f=(c=u)+i[g+144>>2]|0)^T,(f=f>>>0<c>>>0?I+1|0:I)^Y,32),I=o+(c=p)|0,I=s>>>0>(M=s+Y|0)>>>0?I+1|0:I,s=M,M=I,N=o=ug(R^s,I^w,24),T=I=p,w=I,L=Y,I=f+oA|0,I=(I=(o=(Y=x)+u|0)>>>0<Y>>>0?I+1|0:I)+w|0,w=f=N+o|0,z=ug(L^f,(Y=f>>>0<o>>>0?I+1|0:I)^c,16),I=M+(c=p)|0,I=(f=s+z|0)>>>0<s>>>0?I+1|0:I,s=f,M=I,o=ug(f^N,I^T,63),u=I=p,f=I,N=U,T=r,I=F+yA|0,F=r=(U=Z)+q|0,I=(I=r>>>0<U>>>0?I+1|0:I)+f|0,e=ug(T^(r=U=r+o|0),(f=F>>>0>r>>>0?I+1|0:I)^e,32),I=(U=p)+S|0,S=I=(F=N+e|0)>>>0<e>>>0?I+1|0:I,u=ug(o^F,u^I,24),q=I=p,o=I,N=e,e=(I=r)+(r=V)|0,I=f+cA|0,I=(I=r>>>0>e>>>0?I+1|0:I)+o|0,T=f=(r=e)+u|0,L=ug(N^f,(o=U)^(U=f>>>0<r>>>0?I+1|0:I),16),I=S+(o=p)|0,I=(f=F+L|0)>>>0<F>>>0?I+1|0:I,F=f,S=I,N=ug(f^u,I^q,63),f=p,I=eA+(r=b)|0,I=J+((e=W)>>>0>(u=e+P|0)>>>0?I+1|0:I)|0,v=ug((e=b=D+u|0)^IA,(b=e>>>0<D>>>0?I+1|0:I)^v,32),I=M+(J=p)|0,M=I=s>>>0>(D=s+v|0)>>>0?I+1|0:I,I=ug((s=D)^P,I^r,24),P=i[g+204>>2],u=I,q=v,v=I,r=I+e|0,I=(D=p)+b|0,I=(I=r>>>0<v>>>0?I+1|0:I)+P|0,P=b=r+i[g+200>>2]|0,q=ug(q^b,(e=J)^(J=b>>>0<r>>>0?I+1|0:I),16),I=M+(v=p)|0,M=b=s+q|0,e=ug(u^b,(r=D)^(D=s>>>0>b>>>0?I+1|0:I),63),b=p,s=y,R=m,I=y+H|0,I=(I=(r=m+BA|0)>>>0<m>>>0?I+1|0:I)+(u=i[g+220>>2])|0,r=ug((H=m=r+i[g+216>>2]|0)^z,(m=r>>>0>H>>>0?I+1|0:I)^c,32),I=_+(y=p)|0,_=s,s=I=(c=k+r|0)>>>0<k>>>0?I+1|0:I,I=ug(R^c,_^I,24),z=i[g+156>>2],u=I,_=H,H=I,_=_+I|0,I=(k=p)+m|0,I=(I=H>>>0>_>>>0?I+1|0:I)+z|0,z=m=(H=_)+i[g+152>>2]|0,BA=ug(m^r,(H=m>>>0<H>>>0?I+1|0:I)^y,16),I=s+(_=p)|0,y=ug(u^(s=m=c+BA|0),(r=k)^(k=c>>>0>s>>>0?I+1|0:I),63),c=p,m=t,I=t+Y|0,I=(I=(r=w+l|0)>>>0<w>>>0?I+1|0:I)+(u=i[g+132>>2])|0,w=I=(t=r+i[g+128>>2]|0)>>>0<r>>>0?I+1|0:I,a=ug(t^AA,I^a,32),I=d+(Y=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,u=m,m=I,r=ug(r^l,u^I,24),l=I=p,R=r,I=w+I|0,I=(I=(r=t+r|0)>>>0<t>>>0?I+1|0:I)+(u=i[g+196>>2])|0,I=(t=r+i[g+192>>2]|0)>>>0<r>>>0?I+1|0:I,w=t,r=Y,Y=I,a=ug(t^a,r^I,16),I=m+(t=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,d=I,u=ug(R^r,l^I,63),m=p,R=e,l=a,I=U+E|0,I=(I=(a=j)>>>0>(e=a+T|0)>>>0?I+1|0:I)+(r=b)|0,b=U=R+(a=e)|0,e=ug(l^U,(e=t)^(t=a>>>0>U>>>0?I+1|0:I),32),I=k+(U=p)|0,l=a=s+e|0,a=ug(R^a,(I=a>>>0<s>>>0?I+1|0:I)^r,24),k=I,IA=i[g+148>>2],T=a,I=t+(s=p)|0,I=(I=(a=a+b|0)>>>0<b>>>0?I+1|0:I)+(AA=IA)|0,O=ug((AA=b=(r=i[g+144>>2])+a|0)^e,(b=a>>>0>b>>>0?I+1|0:I)^U,16),I=(I=k)+(k=p)|0,I=(t=(U=O)+l|0)>>>0<U>>>0?I+1|0:I,U=t,a=I,t=ug(T^t,I^s,63),s=p,R=y,I=(e=c)+J|0,I=(I=(l=y+P|0)>>>0<y>>>0?I+1|0:I)+(T=i[g+236>>2])|0,o=ug((l=y=(c=l)+i[g+232>>2]|0)^L,(y=c>>>0>y>>>0?I+1|0:I)^o,32),I=d+(c=p)|0,d=I=G>>>0>(J=G+o|0)>>>0?I+1|0:I,P=e=ug(R^(G=J),I^e,24),T=I=p,J=I,R=o,I=y+rA|0,I=(I=(o=$)>>>0>(e=o+l|0)>>>0?I+1|0:I)+J|0,L=y=P+(o=e)|0,o=ug(R^y,(J=y>>>0<o>>>0?I+1|0:I)^c,16),I=d+(e=p)|0,d=y=G+o|0,P=ug(y^P,(l=y>>>0<G>>>0?I+1|0:I)^T,63),y=p,T=u,I=H+B|0,I=(I=(G=K)>>>0>(u=G+z|0)>>>0?I+1|0:I)+(c=m)|0,u=ug((m=G=T+(H=u)|0)^q,(G=G>>>0<H>>>0?I+1|0:I)^v,32),I=S+(H=p)|0,S=ug(T^(v=F+u|0),(I=F>>>0>v>>>0?I+1|0:I)^c,24),F=I,z=i[g+164>>2],q=S,R=v,I=G+(c=p)|0,G=S=m+S|0,I=(I=S>>>0<m>>>0?I+1|0:I)+(T=z)|0,S=H,H=I=(m=(v=i[g+160>>2])+G|0)>>>0<G>>>0?I+1|0:I,iA=ug(m^u,S^I,16),I=(I=F)+(F=p)|0,S=I=(G=R+(S=iA)|0)>>>0<S>>>0?I+1|0:I,q=ug(q^G,I^c,63),c=p,u=f,R=N,I=f+oA|0,I=Y+((N=x)>>>0>(T=R+N|0)>>>0?I+1|0:I)|0,_=ug((N=f=w+T|0)^BA,(f=f>>>0<w>>>0?I+1|0:I)^_,32),I=D+(w=p)|0,D=I=(Y=M+_|0)>>>0<M>>>0?I+1|0:I,T=u=ug(R^(M=Y),I^u,24),BA=I=p,Y=I,R=_,I=f+Q|0,I=(I=(u=(_=QA)+N|0)>>>0<_>>>0?I+1|0:I)+Y|0,Y=f=T+u|0,N=ug(R^f,(_=w)^(w=f>>>0<u>>>0?I+1|0:I),16),I=D+(_=p)|0,I=(f=M+N|0)>>>0<M>>>0?I+1|0:I,M=f,D=I,u=ug(f^T,I^BA,63),T=I=p,f=I,R=o,I=b+oA|0,b=o=x+AA|0,I=(I=o>>>0<x>>>0?I+1|0:I)+f|0,e=ug(R^(o=x=o+u|0),(b=b>>>0>o>>>0?I+1|0:I)^e,32),I=S+(f=p)|0,oA=x=G+e|0,S=I=G>>>0>x>>>0?I+1|0:I,R=x=ug(u^x,T^I,24),I=(G=p)+b|0,I=(I=(o=o+x|0)>>>0<x>>>0?I+1|0:I)+IA|0,T=ug((u=x=o+r|0)^e,(o=r>>>0>u>>>0?I+1|0:I)^f,16),I=(I=S)+(S=p)|0,oA=x=(b=T)+oA|0,f=ug(R^x,(b=b>>>0>x>>>0?I+1|0:I)^G,63),G=p,x=s,R=t,I=s+J|0,s=r=t+L|0,I=(I=r>>>0<t>>>0?I+1|0:I)+(e=i[g+196>>2])|0,e=ug((r=t=r+i[g+192>>2]|0)^iA,(t=r>>>0<s>>>0?I+1|0:I)^F,32),I=D+(s=p)|0,D=x,x=I=(F=M+e|0)>>>0<M>>>0?I+1|0:I,R=I=ug(R^F,D^I,24),M=I,D=I+r|0,I=(J=p)+t|0,I=z+(D>>>0<M>>>0?I+1|0:I)|0,z=t=D+v|0,L=ug(t^e,(r=s)^(s=t>>>0<v>>>0?I+1|0:I),16),I=x+(M=p)|0,I=(t=F+L|0)>>>0<F>>>0?I+1|0:I,F=t,r=J,J=I,r=ug(R^t,r^I,63),x=p,I=rA+(t=y)|0,I=H+((D=$)>>>0>(v=D+P|0)>>>0?I+1|0:I)|0,D=y=m+v|0,v=ug(y^N,(m=y>>>0<m>>>0?I+1|0:I)^_,32),I=a+(y=p)|0,a=t,t=I=(H=U+v|0)>>>0<U>>>0?I+1|0:I,a=_=ug(H^P,a^I,24),e=I=p,_=v,v=(I=D)+(D=Z)|0,I=m+yA|0,I=(I=D>>>0>v>>>0?I+1|0:I)+e|0,U=m=(D=v)+a|0,N=ug(_^m,(D=m>>>0<D>>>0?I+1|0:I)^y,16),I=t+(v=p)|0,t=ug((P=m=H+N|0)^a,(m=m>>>0<H>>>0?I+1|0:I)^e,63),y=p,H=c,I=c+B|0,I=w+((a=(_=K)+q|0)>>>0<_>>>0?I+1|0:I)|0,I=(c=Y+a|0)>>>0<Y>>>0?I+1|0:I,Y=c,c=I,_=ug(Y^O,I^k,32),I=l+(k=p)|0,I=(w=d+_|0)>>>0<d>>>0?I+1|0:I,d=w,a=H,H=I,a=ug(w^q,a^I,24),l=I=p,w=I,e=_,_=(I=Y)+(Y=QA)|0,I=c+Q|0,I=(I=Y>>>0>_>>>0?I+1|0:I)+w|0,q=c=_+a|0,_=ug(e^c,(Y=k)^(k=c>>>0<_>>>0?I+1|0:I),16),I=H+(w=p)|0,I=(c=d+_|0)>>>0<d>>>0?I+1|0:I,d=c,H=I,e=ug(c^a,I^l,63),c=p,a=r,l=_,I=o+cA|0,I=(I=(r=(_=V)+u|0)>>>0<_>>>0?I+1|0:I)+(Y=x)|0,_=o=a+r|0,x=I=o>>>0<r>>>0?I+1|0:I,r=ug(l^o,I^w,32),I=(I=m)+(m=p)|0,o=Y,Y=I=r>>>0>(w=r+P|0)>>>0?I+1|0:I,I=ug(a^w,o^I,24),l=i[g+220>>2],a=I,P=r,o=_,_=I,r=o+I|0,I=(o=p)+x|0,I=(I=r>>>0<_>>>0?I+1|0:I)+l|0,P=ug(P^(u=x=r+i[g+216>>2]|0),(_=r>>>0>u>>>0?I+1|0:I)^m,16),I=Y+(r=p)|0,Y=I=w>>>0>(x=w+P|0)>>>0?I+1|0:I,x=ug(a^(w=x),I^o,63),m=p,R=t,I=(o=y)+s|0,y=a=t+z|0,I=(I=a>>>0<t>>>0?I+1|0:I)+(l=i[g+204>>2])|0,S=ug((a=t=a+i[g+200>>2]|0)^T,(t=a>>>0<y>>>0?I+1|0:I)^S,32),I=H+(y=p)|0,d=I=(s=d+S|0)>>>0<d>>>0?I+1|0:I,l=o=ug(R^s,I^o,24),T=I=p,H=I,R=S,I=t+eA|0,I=(I=(o=(S=W)+a|0)>>>0<S>>>0?I+1|0:I)+H|0,z=t=l+o|0,BA=ug(R^t,(H=t>>>0<o>>>0?I+1|0:I)^y,16),I=d+(S=p)|0,I=(t=s+BA|0)>>>0<s>>>0?I+1|0:I,s=t,d=I,t=ug(t^l,I^T,63),y=p,R=e,I=(o=c)+D|0,I=(e=e+U|0)>>>0<U>>>0?I+1|0:I,U=e,I=I+(l=T=i[g+156>>2])|0,l=ug((e=c=(a=i[g+152>>2])+e|0)^L,(c=e>>>0<U>>>0?I+1|0:I)^M,32),I=(I=b)+(b=p)|0,M=I=(U=l+oA|0)>>>0<l>>>0?I+1|0:I,oA=o=ug(R^U,I^o,24),L=I=p,D=I,R=o,I=c+E|0,I=(I=(o=j)>>>0>(e=o+e|0)>>>0?I+1|0:I)+D|0,oA=c=oA+(o=e)|0,IA=ug(c^l,(D=c>>>0<o>>>0?I+1|0:I)^b,16),I=M+(c=p)|0,I=(b=U+IA|0)>>>0<U>>>0?I+1|0:I,U=b,M=I,l=ug(R^b,I^L,63),b=p,R=f,I=(o=G)+k|0,G=e=f+q|0,I=(I=e>>>0<f>>>0?I+1|0:I)+(L=i[g+236>>2])|0,v=ug((e=f=e+i[g+232>>2]|0)^N,(G=e>>>0<G>>>0?I+1|0:I)^v,32),I=J+(k=p)|0,N=f=F+v|0,f=ug(R^f,(I=f>>>0<F>>>0?I+1|0:I)^o,24),J=I,L=i[g+132>>2],q=f,R=N,N=v,I=(F=p)+G|0,I=(I=(o=f+e|0)>>>0<f>>>0?I+1|0:I)+L|0,I=(f=(v=i[g+128>>2])+o|0)>>>0<o>>>0?I+1|0:I,G=f,o=k,k=I,N=ug(N^f,o^I,16),I=(I=J)+(J=p)|0,I=(f=R+(o=N)|0)>>>0<o>>>0?I+1|0:I,o=f,f=F,F=I,q=I=ug(q^o,f^I,63),e=I,u=I+u|0,I=(f=p)+_|0,I=L+(e>>>0>u>>>0?I+1|0:I)|0,u=ug((e=_=u+v|0)^BA,(v=v>>>0>e>>>0?I+1|0:I)^S,32),I=M+(S=p)|0,I=U>>>0>(_=U+u|0)>>>0?I+1|0:I,U=_,_=f,f=I,q=_=ug(q^U,_^I,24),L=I=p,M=I,R=_,I=v+B|0,I=(I=(e=(_=K)+e|0)>>>0<_>>>0?I+1|0:I)+M|0,q=v=q+e|0,BA=ug(v^u,(M=v>>>0<e>>>0?I+1|0:I)^S,16),I=f+(v=p)|0,I=U>>>0>(S=U+BA|0)>>>0?I+1|0:I,U=S,S=I,u=ug(R^U,I^L,63),f=p,_=m,R=x,I=m+H|0,m=e=x+z|0,I=(I=e>>>0<x>>>0?I+1|0:I)+(L=i[g+148>>2])|0,z=ug((e=x=e+i[g+144>>2]|0)^IA,(x=m>>>0>e>>>0?I+1|0:I)^c,32),I=F+(m=p)|0,H=I=(c=o+z|0)>>>0<o>>>0?I+1|0:I,L=I=ug(R^c,I^_,24),o=I,_=I+e|0,I=(F=p)+x|0,I=T+(o>>>0>_>>>0?I+1|0:I)|0,T=x=a+_|0,z=ug(x^z,(o=a>>>0>x>>>0?I+1|0:I)^m,16),I=H+(_=p)|0,m=ug(L^(H=x=c+z|0),(a=F)^(F=c>>>0>H>>>0?I+1|0:I),63),c=p,x=y,L=t,I=y+D|0,y=a=t+oA|0,I=(I=a>>>0<t>>>0?I+1|0:I)+(e=i[g+164>>2])|0,e=ug((a=t=a+i[g+160>>2]|0)^N,(t=a>>>0<y>>>0?I+1|0:I)^J,32),I=Y+(y=p)|0,Y=x,x=I=w>>>0>(J=w+e|0)>>>0?I+1|0:I,w=ug(L^J,Y^I,24),N=I=p,D=I,R=w,I=t+Q|0,I=(I=(w=QA)>>>0>(Y=w+a|0)>>>0?I+1|0:I)+D|0,oA=t=R+(w=Y)|0,L=ug(t^e,(D=t>>>0<w>>>0?I+1|0:I)^y,16),I=x+(w=p)|0,I=(t=J+L|0)>>>0<J>>>0?I+1|0:I,J=t,Y=I,t=ug(R^t,I^N,63),y=p,x=b,I=b+yA|0,I=k+((a=Z)>>>0>(e=a+l|0)>>>0?I+1|0:I)|0,r=ug((a=b=G+e|0)^P,(b=a>>>0<G>>>0?I+1|0:I)^r,32),I=d+(G=p)|0,e=x,x=I=s>>>0>(k=s+r|0)>>>0?I+1|0:I,e=k=ug((s=k)^l,e^I,24),l=I=p,N=r,I=b+rA|0,I=(I=(r=(k=$)+a|0)>>>0<k>>>0?I+1|0:I)+l|0,d=b=e+r|0,r=ug(N^b,(a=G)^(G=b>>>0<r>>>0?I+1|0:I),16),I=x+(k=p)|0,l=ug((a=b=s+r|0)^e,(b=s>>>0>a>>>0?I+1|0:I)^l,63),x=p,s=c,N=m,P=r,I=c+M|0,I=(I=(r=m+q|0)>>>0<m>>>0?I+1|0:I)+(e=i[g+196>>2])|0,r=ug(P^(M=m=r+i[g+192>>2]|0),(m=r>>>0>m>>>0?I+1|0:I)^k,32),I=Y+(c=p)|0,e=s,s=I=(k=J+r|0)>>>0<J>>>0?I+1|0:I,I=ug(N^k,e^I,24),N=i[g+204>>2],e=I,Y=M,M=I,Y=Y+I|0,I=(J=p)+m|0,I=(I=Y>>>0<M>>>0?I+1|0:I)+N|0,P=m=Y+i[g+200>>2]|0,q=ug(m^r,(M=m>>>0<Y>>>0?I+1|0:I)^c,16),I=s+(Y=p)|0,m=ug(e^(s=m=k+q|0),(k=s>>>0<k>>>0?I+1|0:I)^J,63),c=p,J=y,N=t,R=a,I=y+o|0,I=(I=(a=t+T|0)>>>0<t>>>0?I+1|0:I)+(e=IA=i[g+212>>2])|0,a=ug((o=t=(r=i[g+208>>2])+a|0)^BA,(t=t>>>0<a>>>0?I+1|0:I)^v,32),I=(I=b)+(b=p)|0,e=J,J=I=(y=R+a|0)>>>0<a>>>0?I+1|0:I,I=ug(N^y,e^I,24),N=i[g+220>>2],R=I,e=a,a=o,o=I,a=a+I|0,I=(v=p)+t|0,I=(I=a>>>0<o>>>0?I+1|0:I)+N|0,T=t=a+i[g+216>>2]|0,a=ug(e^t,(o=t>>>0<a>>>0?I+1|0:I)^b,16),I=J+(e=p)|0,J=b=y+a|0,b=ug(R^b,(t=v)^(v=y>>>0>b>>>0?I+1|0:I),63),t=p,R=l,I=D+E|0,I=(I=(l=j)>>>0>(N=l+oA|0)>>>0?I+1|0:I)+(y=x)|0,N=ug((x=D=R+(l=N)|0)^z,(D=D>>>0<l>>>0?I+1|0:I)^_,32),I=S+(_=p)|0,I=U>>>0>(l=U+N|0)>>>0?I+1|0:I,U=l,l=y,y=I,l=ug(R^U,l^I,24),S=I=p,R=l,I=D+I|0,I=(I=(l=l+x|0)>>>0<x>>>0?I+1|0:I)+(z=i[g+236>>2])|0,oA=x=(D=l)+i[g+232>>2]|0,z=ug(x^N,(D=D>>>0>x>>>0?I+1|0:I)^_,16),I=y+(_=p)|0,N=ug(R^(y=x=U+z|0),(U=U>>>0>y>>>0?I+1|0:I)^S,63),x=p,S=f,R=u,I=f+eA|0,I=G+((u=(l=W)+u|0)>>>0<l>>>0?I+1|0:I)|0,w=ug((l=f=d+u|0)^L,(f=f>>>0<d>>>0?I+1|0:I)^w,32),I=F+(G=p)|0,H=I=H>>>0>(d=H+w|0)>>>0?I+1|0:I,u=S=ug(R^d,I^S,24),L=I=p,F=I,R=w,I=f+cA|0,I=(I=(w=V)>>>0>(S=w+l|0)>>>0?I+1|0:I)+F|0,F=f=u+(w=S)|0,l=ug(R^f,(l=G)^(G=f>>>0<w>>>0?I+1|0:I),16),I=H+(w=p)|0,I=(f=d+l|0)>>>0<d>>>0?I+1|0:I,d=f,H=I,S=ug(f^u,I^L,63),u=I=p,f=I,L=a,I=M+eA|0,M=a=P+W|0,I=(I=a>>>0<W>>>0?I+1|0:I)+f|0,e=ug(L^(a=W=a+S|0),(W=M>>>0>a>>>0?I+1|0:I)^e,32),I=U+(f=p)|0,U=I=y>>>0>(M=y+e|0)>>>0?I+1|0:I,P=I=ug(S^(y=M),u^I,24),S=I,a=I+a|0,I=(M=p)+W|0,I=IA+(a>>>0<S>>>0?I+1|0:I)|0,u=ug((u=e)^(e=W=a+r|0),(S=r>>>0>e>>>0?I+1|0:I)^f,16),I=U+(r=p)|0,y=ug(P^(U=W=y+u|0),(a=M)^(M=y>>>0>U>>>0?I+1|0:I),63),f=p,W=c,L=m,I=c+o|0,c=a=m+T|0,I=(I=a>>>0<m>>>0?I+1|0:I)+(P=i[g+164>>2])|0,_=ug((a=m=a+i[g+160>>2]|0)^z,(m=c>>>0>a>>>0?I+1|0:I)^_,32),I=H+(c=p)|0,I=(o=d+_|0)>>>0<d>>>0?I+1|0:I,d=o,H=W,W=I,I=ug(L^o,H^I,24),T=i[g+196>>2],L=I,P=_,o=I,_=I+a|0,I=(H=p)+m|0,I=(I=o>>>0>_>>>0?I+1|0:I)+T|0,P=ug(P^(a=m=(o=_)+i[g+192>>2]|0),(_=c)^(c=o>>>0>a>>>0?I+1|0:I),16),I=W+(T=p)|0,I=(m=d+P|0)>>>0<d>>>0?I+1|0:I,d=m,o=H,H=I,o=ug(L^m,o^I,63),W=p,m=t,L=b,I=t+D|0,I=(I=(_=b+oA|0)>>>0<b>>>0?I+1|0:I)+(eA=i[g+204>>2])|0,w=ug((_=b=(t=_)+i[g+200>>2]|0)^l,(b=t>>>0>b>>>0?I+1|0:I)^w,32),I=k+(t=p)|0,I=s>>>0>(D=s+w|0)>>>0?I+1|0:I,s=D,D=m,m=I,l=D=ug(L^s,D^I,24),eA=I=p,k=I,L=D,I=b+cA|0,I=(I=(D=_+V|0)>>>0<V>>>0?I+1|0:I)+k|0,l=ug((_=V=l+D|0)^w,(l=t)^(t=D>>>0>_>>>0?I+1|0:I),16),I=m+(k=p)|0,D=I=s>>>0>(V=s+l|0)>>>0?I+1|0:I,V=ug(L^(s=V),I^eA,63),b=p,I=G+(m=x)|0,G=w=F+N|0,I=(I=w>>>0<F>>>0?I+1|0:I)+(eA=i[g+236>>2])|0,Y=ug((w=x=w+i[g+232>>2]|0)^q,(x=G>>>0>w>>>0?I+1|0:I)^Y,32),I=v+(G=p)|0,v=m,m=I=(F=J+Y|0)>>>0<J>>>0?I+1|0:I,v=ug(F^N,v^I,24),q=I=p,J=I,I=x+yA|0,I=(I=(w=w+Z|0)>>>0<Z>>>0?I+1|0:I)+J|0,N=ug((J=Z=w+v|0)^Y,(N=G)^(G=w>>>0>J>>>0?I+1|0:I),16),I=m+(yA=p)|0,w=I=F>>>0>(Z=F+N|0)>>>0?I+1|0:I,x=ug(v^(F=Z),I^q,63),m=p,I=S+B|0,I=(I=(v=e+K|0)>>>0<K>>>0?I+1|0:I)+(Y=W)|0,I=v>>>0>(K=v+o|0)>>>0?I+1|0:I,v=K,K=I,I=E+I|0,j=I=(Y=j+v|0)>>>0<j>>>0?I+1|0:I,e=Y,Y=ug(v^N,K^yA,32),I=D+(v=p)|0,S=ug((D=K=s+Y|0)^o,(K=s>>>0>D>>>0?I+1|0:I)^W,24),I=(o=p)+j|0,I=(s=S)>>>0>(W=e+s|0)>>>0?I+1|0:I,s=W,i[g>>2]=s,i[g+4>>2]=I,Z=I,I=ug(s^Y,I^v,16),Y=W=p,i[g+120>>2]=I,i[g+124>>2]=Y,j=I,D=I+D|0,I=Y+K|0,i[g+80>>2]=D,I=D>>>0<j>>>0?I+1|0:I,i[g+84>>2]=I,hA=g,DA=ug(S^D,I^o,63),i[hA+40>>2]=DA,i[g+44>>2]=p,K=b,o=V,I=c+b|0,I=(I=(j=a+V|0)>>>0<V>>>0?I+1|0:I)+(D=i[g+132>>2])|0,j=I=(V=j+i[g+128>>2]|0)>>>0<j>>>0?I+1|0:I,c=ug(V^u,I^r,32),I=w+(D=p)|0,a=K,K=I=F>>>0>(b=F+c|0)>>>0?I+1|0:I,w=ug(o^(F=b),a^I,24),I=j+(Y=p)|0,I=(b=w+V|0)>>>0<V>>>0?I+1|0:I,V=(j=i[g+144>>2])+b|0,I=i[g+148>>2]+I|0,I=V>>>0<j>>>0?I+1|0:I,i[g+8>>2]=V,i[g+12>>2]=I,I=ug(c^V,I^D,16),b=W=p,i[g+96>>2]=I,i[g+100>>2]=b,V=I,j=I+F|0,I=b+K|0,K=j,i[g+88>>2]=K,I=V>>>0>K>>>0?I+1|0:I,i[g+92>>2]=I,hA=g,DA=ug(w^K,I^Y,63),i[hA+48>>2]=DA,i[g+52>>2]=p,a=$,I=t+m|0,I=(I=(V=_+x|0)>>>0<x>>>0?I+1|0:I)+(j=i[g+220>>2])|0,I=(W=V+i[g+216>>2]|0)>>>0<V>>>0?I+1|0:I,$=W,j=W,V=a+W|0,W=I,I=I+rA|0,I=V>>>0<j>>>0?I+1|0:I,j=V,V=I,a=j,o=x,j=ug(P^$,W^T,32),I=M+(x=p)|0,m=ug(o^(b=W=U+j|0),(W=U>>>0>b>>>0?I+1|0:I)^m,24),I=(c=p)+V|0,V=$=a+(t=m)|0,i[g+16>>2]=V,I=t>>>0>V>>>0?I+1|0:I,i[g+20>>2]=I,I=ug(V^j,I^x,16),K=p,i[g+104>>2]=I,i[g+108>>2]=K,V=I,$=I+b|0,I=W+K|0,W=$,i[g+64>>2]=W,I=V>>>0>W>>>0?I+1|0:I,i[g+68>>2]=I,hA=g,DA=ug(t^W,I^c,63),i[hA+56>>2]=DA,i[g+60>>2]=p,I=f+Q|0,I=(I=(V=y+QA|0)>>>0<y>>>0?I+1|0:I)+G|0,QA=I=J>>>0>(V=J+V|0)>>>0?I+1|0:I,x=ug(V^l,I^k,32),I=H+(b=p)|0,K=I=d>>>0>($=d+x|0)>>>0?I+1|0:I,m=ug($^y,f^I,24),I=QA+(t=p)|0,I=V>>>0>(j=m+V|0)>>>0?I+1|0:I,V=(QA=i[g+152>>2])+j|0,I=i[g+156>>2]+I|0,I=V>>>0<QA>>>0?I+1|0:I,i[g+24>>2]=V,i[g+28>>2]=I,I=ug(x^V,I^b,16),i[g+112>>2]=I,QA=p,i[g+116>>2]=QA,V=I+$|0,I=K+QA|0,K=V,i[g+72>>2]=K,I=K>>>0<$>>>0?I+1|0:I,i[g+76>>2]=I,hA=g,DA=ug(m^K,I^t,63),i[hA+32>>2]=DA,i[g+36>>2]=p,I=i[g+68>>2]^(n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24)^Z,K=i[g+64>>2]^(n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24)^s,C[0|A]=K,C[A+1|0]=K>>>8,C[A+2|0]=K>>>16,C[A+3|0]=K>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,Z=1;I=(K=Z<<3)+A|0,W=K=g+K|0,V=i[K>>2]^(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24),QA=i[(K=K- -64|0)>>2],K=i[K+4>>2]^i[W+4>>2]^(n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24),W=V^QA,C[0|I]=W,C[I+1|0]=W>>>8,C[I+2|0]=W>>>16,C[I+3|0]=W>>>24,C[I+4|0]=K,C[I+5|0]=K>>>8,C[I+6|0]=K>>>16,C[I+7|0]=K>>>24,8!=(0|(Z=Z+1|0)););h=g+256|0;}function F(A,I,g,B){var Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0;for(function(A,I){for(var g=0,B=0,Q=0,C=0,E=0;C=Q=(B=g<<3)+A|0,E=dA(I+B|0),i[C>>2]=E,i[Q+4>>2]=p,16!=(0|(g=g+1|0)););}(g,I),I=X(B,A,64),o=i[g>>2],f=i[g+4>>2],B=0;;){if(Q=ug(l=i[(E=I)+32>>2],t=i[E+36>>2],14),s=p,Q=ug(l,t,18)^Q,D=p^s,C=o,o=ug(l,t,41)^Q,Q=(p^D)+f|0,Q=o>>>0>(s=C+o|0)>>>0?Q+1|0:Q,o=s,y=i[E+48>>2],o=(D=i[(f=34784+(L=B<<3)|0)>>2])+o|0,Q=i[f+4>>2]+Q|0,Q=o>>>0<D>>>0?Q+1|0:Q,o=(f=y^((k=i[E+40>>2])^y)&l)+o|0,Q=(((C=i[E+52>>2])^(u=i[E+44>>2]))&t^C)+Q|0,Q=o>>>0<f>>>0?Q+1|0:Q,s=(a=o)+(o=i[E+56>>2])|0,Q=i[E+60>>2]+Q|0,Q=o>>>0>s>>>0?Q+1|0:Q,f=s+(D=i[E+24>>2])|0,o=Q,Q=Q+i[E+28>>2]|0,Q=f>>>0<D>>>0?Q+1|0:Q,D=f,c=Q,i[E+24>>2]=f,i[E+28>>2]=Q,Q=ug(F=i[E>>2],f=i[E+4>>2],28),h=p,Q=ug(F,f,34)^Q,n=p^h,h=s+(ug(F,f,39)^Q)|0,Q=o+(p^n)|0,Q=s>>>0>h>>>0?Q+1|0:Q,s=(a=F&((n=i[E+16>>2])|(r=i[E+8>>2]))|n&r)+h|0,Q=(f&((h=i[E+20>>2])|(o=i[E+12>>2]))|o&h)+Q|0,s=Q=a>>>0>(e=s)>>>0?Q+1|0:Q,i[E+56>>2]=e,i[E+60>>2]=Q,Q=ug(D,c,14),a=p,d=ug(D,c,18)^Q,a^=p,w=n,Q=((t^u)&c^u)+C|0,Q=(n=(l^k)&D^k)>>>0>(y=n+y|0)>>>0?Q+1|0:Q,C=ug(D,c,41)^d,Q=(p^a)+Q|0,Q=C>>>0>(y=C+y|0)>>>0?Q+1|0:Q,y=(a=i[(n=d=(C=(1|B)<<3)+g|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=a>>>0>y>>>0?Q+1|0:Q,y=(n=i[(C=C+34784|0)>>2])+y|0,Q=i[C+4>>2]+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,Q=Q+h|0,h=y=w+(C=a=y)|0,C=Q=C>>>0>y>>>0?Q+1|0:Q,i[E+16>>2]=y,i[E+20>>2]=Q,y=E,Q=ug(e,s,28),E=p,G=ug(e,s,34)^Q,H=p^E,E=(Q=a)+(a=(r|F)&e|r&F)|0,Q=((o|f)&s|o&f)+n|0,Q=E>>>0<a>>>0?Q+1|0:Q,n=ug(e,s,39)^G,Q=(p^H)+Q|0,G=E=n+E|0,E=Q=E>>>0<n>>>0?Q+1|0:Q,i[y+48>>2]=G,i[y+52>>2]=Q,a=y,Q=ug(h,C,14),y=p,n=ug(h,C,18)^Q,H=p^y,w=r,Q=((t^c)&C^t)+u|0,Q=(r=(D^l)&h^l)>>>0>(y=r+k|0)>>>0?Q+1|0:Q,n=ug(h,C,41)^n,Q=(p^H)+Q|0,Q=n>>>0>(y=n+y|0)>>>0?Q+1|0:Q,y=(k=i[(r=U=(n=(2|B)<<3)+g|0)>>2])+y|0,Q=i[r+4>>2]+Q|0,Q=y>>>0<k>>>0?Q+1|0:Q,y=(r=i[(n=n+34784|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=r>>>0>y>>>0?Q+1|0:Q,y=w+(n=r=y)|0,w=o,o=Q,Q=w+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,i[a+8>>2]=y,i[a+12>>2]=Q,Q=ug(G,E,28),k=p,u=ug(G,E,34)^Q,k^=p,Q=((f|s)&E|f&s)+o|0,Q=(r=(H=(e|F)&G|e&F)+r|0)>>>0<H>>>0?Q+1|0:Q,o=r,r=ug(G,E,39)^u,Q=(p^k)+Q|0,k=o=o+r|0,o=Q=o>>>0<r>>>0?Q+1|0:Q,i[a+40>>2]=k,i[a+44>>2]=Q,r=a,Q=ug(y,n,14),a=p,u=ug(y,n,18)^Q,H=p^a,w=F,Q=(c^(C^c)&n)+t|0,Q=(a=(F=D^(h^D)&y)+l|0)>>>0<F>>>0?Q+1|0:Q,t=a,a=ug(y,n,41)^u,Q=(p^H)+Q|0,Q=a>>>0>(t=t+a|0)>>>0?Q+1|0:Q,t=(u=i[(l=F=(a=(3|B)<<3)+g|0)>>2])+t|0,Q=i[l+4>>2]+Q|0,Q=t>>>0<u>>>0?Q+1|0:Q,t=(l=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<l>>>0?Q+1|0:Q,l=t,t=w+(a=t)|0,w=f,f=Q,Q=w+Q|0,a=Q=a>>>0>t>>>0?Q+1|0:Q,i[r>>2]=t,i[r+4>>2]=Q,Q=ug(k,o,28),u=p,H=ug(k,o,34)^Q,u^=p,Q=((E|s)&o|E&s)+f|0,Q=(l=(v=(e|G)&k|e&G)+l|0)>>>0<v>>>0?Q+1|0:Q,f=l,l=ug(k,o,39)^H,Q=(p^u)+Q|0,Q=(f=f+l|0)>>>0<l>>>0?Q+1|0:Q,l=f,f=Q,i[r+32>>2]=l,i[r+36>>2]=Q,Q=ug(t,a,14),u=p,H=ug(t,a,18)^Q,u^=p,w=e,Q=c+(C^(C^n)&a)|0,Q=(e=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,c=ug(t,a,41)^H,Q=(p^u)+Q|0,Q=c>>>0>(D=c+e|0)>>>0?Q+1|0:Q,D=(u=i[(e=S=(c=(4|B)<<3)+g|0)>>2])+D|0,Q=i[e+4>>2]+Q|0,Q=D>>>0<u>>>0?Q+1|0:Q,D=(e=i[(c=c+34784|0)>>2])+D|0,Q=i[c+4>>2]+Q|0,c=s,s=Q=e>>>0>D>>>0?Q+1|0:Q,Q=c+Q|0,c=Q=(e=D)>>>0>(D=w+e|0)>>>0?Q+1|0:Q,i[r+56>>2]=D,i[r+60>>2]=Q,Q=ug(l,f,28),u=p,H=ug(l,f,34)^Q,u^=p,Q=((E|o)&f|E&o)+s|0,Q=(e=(v=(k|G)&l|k&G)+e|0)>>>0<v>>>0?Q+1|0:Q,s=e,e=ug(l,f,39)^H,Q=(p^u)+Q|0,u=s=s+e|0,s=Q=e>>>0>s>>>0?Q+1|0:Q,i[r+24>>2]=u,i[r+28>>2]=Q,Q=ug(D,c,14),e=p,H=ug(D,c,18)^Q,v=p^e,w=G,Q=C+(n^(n^a)&c)|0,Q=(e=h+(y^(t^y)&D)|0)>>>0<h>>>0?Q+1|0:Q,C=ug(D,c,41)^H,Q=(p^v)+Q|0,Q=C>>>0>(h=C+e|0)>>>0?Q+1|0:Q,h=(H=i[(e=G=(C=(5|B)<<3)+g|0)>>2])+h|0,Q=i[e+4>>2]+Q|0,Q=h>>>0<H>>>0?Q+1|0:Q,h=(e=i[(C=C+34784|0)>>2])+h|0,Q=i[C+4>>2]+Q|0,Q=e>>>0>h>>>0?Q+1|0:Q,h=w+(C=e=h)|0,w=E,E=Q,Q=w+Q|0,C=Q=C>>>0>h>>>0?Q+1|0:Q,i[r+48>>2]=h,i[r+52>>2]=Q,Q=ug(u,s,28),H=p,v=ug(u,s,34)^Q,H^=p,Q=((o|f)&s|o&f)+E|0,Q=(e=(_=(l|k)&u|l&k)+e|0)>>>0<_>>>0?Q+1|0:Q,E=e,e=ug(u,s,39)^v,Q=(p^H)+Q|0,v=E=E+e|0,E=Q=E>>>0<e>>>0?Q+1|0:Q,i[r+16>>2]=v,i[r+20>>2]=Q,Q=ug(h,C,14),e=p,H=ug(h,C,18)^Q,_=p^e,w=k,Q=n+(a^(a^c)&C)|0,Q=(e=y+(t^(t^D)&h)|0)>>>0<y>>>0?Q+1|0:Q,n=ug(h,C,41)^H,Q=(p^_)+Q|0,Q=n>>>0>(y=n+e|0)>>>0?Q+1|0:Q,y=(k=i[(e=R=(n=(6|B)<<3)+g|0)>>2])+y|0,Q=i[e+4>>2]+Q|0,Q=y>>>0<k>>>0?Q+1|0:Q,y=(e=i[(n=n+34784|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=e>>>0>y>>>0?Q+1|0:Q,y=w+(n=e=y)|0,w=o,o=Q,Q=w+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,i[r+40>>2]=y,i[r+44>>2]=Q,Q=ug(v,E,28),k=p,H=ug(v,E,34)^Q,k^=p,Q=((f|s)&E|f&s)+o|0,Q=(e=(_=(u|l)&v|u&l)+e|0)>>>0<_>>>0?Q+1|0:Q,o=e,e=ug(v,E,39)^H,Q=(p^k)+Q|0,_=o=o+e|0,o=Q=o>>>0<e>>>0?Q+1|0:Q,i[r+8>>2]=_,i[r+12>>2]=Q,Q=ug(y,n,14),e=p,k=ug(y,n,18)^Q,H=p^e,w=l,Q=a+(c^(C^c)&n)|0,Q=(e=t+(D^(h^D)&y)|0)>>>0<t>>>0?Q+1|0:Q,a=ug(y,n,41)^k,Q=(p^H)+Q|0,Q=a>>>0>(t=a+e|0)>>>0?Q+1|0:Q,t=(l=i[(e=k=(a=(7|B)<<3)+g|0)>>2])+t|0,Q=i[e+4>>2]+Q|0,Q=t>>>0<l>>>0?Q+1|0:Q,t=(e=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<e>>>0?Q+1|0:Q,t=w+(a=e=t)|0,w=f,f=Q,Q=w+Q|0,a=Q=a>>>0>t>>>0?Q+1|0:Q,i[r+32>>2]=t,i[r+36>>2]=Q,Q=ug(_,o,28),l=p,H=ug(_,o,34)^Q,l^=p,Q=((E|s)&o|E&s)+f|0,Q=(e=(w=(u|v)&_|u&v)+e|0)>>>0<w>>>0?Q+1|0:Q,f=e,e=ug(_,o,39)^H,Q=(p^l)+Q|0,w=f=f+e|0,f=Q=e>>>0>f>>>0?Q+1|0:Q,i[r>>2]=w,i[r+4>>2]=Q,e=r,Q=ug(t,a,14),r=p,l=ug(t,a,18)^Q,H=p^r,Q=c+(C^(C^n)&a)|0,Q=(r=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,c=ug(t,a,41)^l,Q=(p^H)+Q|0,Q=c>>>0>(D=c+r|0)>>>0?Q+1|0:Q,D=(l=i[(r=H=(c=(8|B)<<3)+g|0)>>2])+D|0,Q=i[r+4>>2]+Q|0,Q=D>>>0<l>>>0?Q+1|0:Q,D=(r=i[(c=c+34784|0)>>2])+D|0,Q=i[c+4>>2]+Q|0,Q=r>>>0>D>>>0?Q+1|0:Q,l=D,r=s,s=Q,Q=r+Q|0,r=Q=(c=D)>>>0>(D=c+u|0)>>>0?Q+1|0:Q,i[e+24>>2]=D,i[e+28>>2]=Q,c=e,Q=ug(w,f,28),e=p,u=ug(w,f,34)^Q,Y=p^e,e=(Q=l)+(l=(_|v)&w|_&v)|0,Q=((E|o)&f|E&o)+s|0,Q=e>>>0<l>>>0?Q+1|0:Q,s=e,e=ug(w,f,39)^u,Q=(p^Y)+Q|0,Y=s=s+e|0,s=Q=e>>>0>s>>>0?Q+1|0:Q,i[c+56>>2]=Y,i[c+60>>2]=Q,Q=ug(D,r,14),e=p,l=ug(D,r,18)^Q,u=p^e,Q=C+(n^(n^a)&r)|0,Q=(e=h+(y^(t^y)&D)|0)>>>0<h>>>0?Q+1|0:Q,C=ug(D,r,41)^l,Q=(p^u)+Q|0,Q=C>>>0>(h=C+e|0)>>>0?Q+1|0:Q,h=(u=i[(e=l=(C=(9|B)<<3)+g|0)>>2])+h|0,Q=i[e+4>>2]+Q|0,Q=h>>>0<u>>>0?Q+1|0:Q,h=(e=i[(C=C+34784|0)>>2])+h|0,Q=i[C+4>>2]+Q|0,Q=e>>>0>h>>>0?Q+1|0:Q,e=E,E=Q,Q=e+Q|0,e=Q=(C=h)>>>0>(h=C+v|0)>>>0?Q+1|0:Q,i[c+16>>2]=h,i[c+20>>2]=Q,Q=ug(Y,s,28),u=p,v=ug(Y,s,34)^Q,u^=p,Q=((o|f)&s|o&f)+E|0,Q=(C=(b=(w|_)&Y|w&_)+C|0)>>>0<b>>>0?Q+1|0:Q,E=C,C=ug(Y,s,39)^v,Q=(p^u)+Q|0,b=E=E+C|0,E=Q=E>>>0<C>>>0?Q+1|0:Q,i[c+48>>2]=b,i[c+52>>2]=Q,Q=ug(h,e,14),C=p,u=ug(h,e,18)^Q,v=p^C,Q=n+(a^(r^a)&e)|0,Q=(C=y+(t^(t^D)&h)|0)>>>0<y>>>0?Q+1|0:Q,n=C,C=ug(h,e,41)^u,Q=(p^v)+Q|0,Q=C>>>0>(y=n+C|0)>>>0?Q+1|0:Q,y=(u=i[(n=v=(C=(10|B)<<3)+g|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=y>>>0<u>>>0?Q+1|0:Q,y=(n=i[(C=C+34784|0)>>2])+y|0,Q=i[C+4>>2]+Q|0,Q=n>>>0>y>>>0?Q+1|0:Q,u=y,n=o,o=Q,Q=n+Q|0,n=Q=(C=y)>>>0>(y=C+_|0)>>>0?Q+1|0:Q,i[c+8>>2]=y,i[c+12>>2]=Q,C=c,Q=ug(b,E,28),c=p,_=ug(b,E,34)^Q,N=p^c,c=(Q=u)+(u=(w|Y)&b|w&Y)|0,Q=((f|s)&E|f&s)+o|0,Q=c>>>0<u>>>0?Q+1|0:Q,o=c,c=ug(b,E,39)^_,Q=(p^N)+Q|0,c=Q=(o=o+c|0)>>>0<c>>>0?Q+1|0:Q,i[C+40>>2]=o,i[C+44>>2]=Q,Q=ug(y,n,14),u=p,_=ug(y,n,18)^Q,N=p^u,m=w,Q=a+(r^(r^e)&n)|0,Q=(u=t+(D^(h^D)&y)|0)>>>0<t>>>0?Q+1|0:Q,a=ug(y,n,41)^_,Q=(p^N)+Q|0,Q=a>>>0>(t=a+u|0)>>>0?Q+1|0:Q,t=(w=i[(u=(a=(11|B)<<3)+g|0)>>2])+t|0,Q=i[u+4>>2]+Q|0,Q=t>>>0<w>>>0?Q+1|0:Q,t=(_=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<_>>>0?Q+1|0:Q,w=t,_=f,f=Q,Q=_+Q|0,a=Q=(a=t)>>>0>(t=m+a|0)>>>0?Q+1|0:Q,i[C>>2]=t,i[C+4>>2]=Q,_=C,Q=ug(o,c,28),C=p,N=ug(o,c,34)^Q,M=p^C,C=(Q=w)+(w=(Y|b)&o|Y&b)|0,Q=((E|s)&c|E&s)+f|0,Q=C>>>0<w>>>0?Q+1|0:Q,f=C,C=ug(o,c,39)^N,Q=(p^M)+Q|0,C=Q=C>>>0>(f=f+C|0)>>>0?Q+1|0:Q,i[_+32>>2]=f,i[_+36>>2]=Q,w=_,Q=ug(t,a,14),_=p,N=ug(t,a,18)^Q,M=p^_,m=Y,Q=r+(e^(n^e)&a)|0,Q=(_=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,r=ug(t,a,41)^N,Q=(p^M)+Q|0,Q=r>>>0>(D=r+_|0)>>>0?Q+1|0:Q,D=(N=i[(Y=_=(r=(12|B)<<3)+g|0)>>2])+D|0,Q=i[Y+4>>2]+Q|0,Q=D>>>0<N>>>0?Q+1|0:Q,D=(Y=i[(r=r+34784|0)>>2])+D|0,Q=i[r+4>>2]+Q|0,Q=D>>>0<Y>>>0?Q+1|0:Q,Y=D,D=m+(r=D)|0,m=s,s=Q,Q=m+Q|0,N=D,D=Q=r>>>0>D>>>0?Q+1|0:Q,i[w+56>>2]=N,i[w+60>>2]=Q,r=w,Q=ug(f,C,28),w=p,M=ug(f,C,34)^Q,m=p^w,w=(Q=Y)+(Y=(o|b)&f|o&b)|0,Q=((E|c)&C|E&c)+s|0,Q=w>>>0<Y>>>0?Q+1|0:Q,s=w,w=ug(f,C,39)^M,Q=(p^m)+Q|0,Y=s=s+w|0,s=Q=s>>>0<w>>>0?Q+1|0:Q,i[r+24>>2]=Y,i[r+28>>2]=Q,w=r,Q=ug(N,D,14),r=p,M=ug(N,D,18)^Q,m=p^r,P=b,Q=e+(n^(n^a)&D)|0,Q=(r=h+(y^(t^y)&N)|0)>>>0<h>>>0?Q+1|0:Q,e=r,r=ug(N,D,41)^M,Q=(p^m)+Q|0,Q=r>>>0>(h=e+r|0)>>>0?Q+1|0:Q,r=(r=h)+(M=i[(h=(e=(13|B)<<3)+g|0)>>2])|0,Q=i[h+4>>2]+Q|0,Q=r>>>0<M>>>0?Q+1|0:Q,r=(b=i[(e=e+34784|0)>>2])+r|0,Q=i[e+4>>2]+Q|0,Q=r>>>0<b>>>0?Q+1|0:Q,b=r,e=r,m=E,E=Q,Q=m+Q|0,M=r=P+r|0,r=Q=r>>>0<e>>>0?Q+1|0:Q,i[w+48>>2]=M,i[w+52>>2]=Q,e=w,Q=ug(Y,s,28),w=p,m=ug(Y,s,34)^Q,P=p^w,w=(Q=b)+(b=(o|f)&Y|o&f)|0,Q=((C|c)&s|C&c)+E|0,Q=w>>>0<b>>>0?Q+1|0:Q,E=w,w=ug(Y,s,39)^m,Q=(p^P)+Q|0,b=E=E+w|0,E=Q=E>>>0<w>>>0?Q+1|0:Q,i[e+16>>2]=b,i[e+20>>2]=Q,Q=ug(M,r,14),w=p,m=ug(M,r,18)^Q,P=p^w,Q=n+(a^(a^D)&r)|0,Q=(w=y+(t^(t^N)&M)|0)>>>0<y>>>0?Q+1|0:Q,n=ug(M,r,41)^m,Q=(p^P)+Q|0,Q=n>>>0>(y=n+w|0)>>>0?Q+1|0:Q,n=(n=y)+(P=i[(y=(w=(14|B)<<3)+g|0)>>2])|0,Q=i[y+4>>2]+Q|0,Q=n>>>0<P>>>0?Q+1|0:Q,n=(m=i[(w=w+34784|0)>>2])+n|0,Q=i[w+4>>2]+Q|0,P=n,w=Q=n>>>0<m>>>0?Q+1|0:Q,Q=c+Q|0,m=n=o+n|0,o=Q=n>>>0<o>>>0?Q+1|0:Q,i[e+40>>2]=n,i[e+44>>2]=Q,n=e,Q=ug(b,E,28),c=p,e=ug(b,E,34)^Q,J=p^c,c=(Q=P)+(P=(f|Y)&b|f&Y)|0,Q=((C|s)&E|C&s)+w|0,Q=c>>>0<P>>>0?Q+1|0:Q,e=ug(b,E,39)^e,Q=(p^J)+Q|0,Q=e>>>0>(c=e+c|0)>>>0?Q+1|0:Q,e=c,c=Q,i[n+8>>2]=e,i[n+12>>2]=Q,Q=ug(m,o,14),n=p,P=ug(m,o,18)^Q,J=p^n,Q=a+(D^(r^D)&o)|0,Q=(w=t+(N^(N^M)&m)|0)>>>0<t>>>0?Q+1|0:Q,D=ug(m,o,41)^P,Q=(p^J)+Q|0,Q=(o=D+w|0)>>>0<D>>>0?Q+1|0:Q,o=(r=i[(a=D=(t=(15|B)<<3)+g|0)>>2])+o|0,Q=i[a+4>>2]+Q|0,Q=o>>>0<r>>>0?Q+1|0:Q,o=(a=i[(t=t+34784|0)>>2])+o|0,Q=i[t+4>>2]+Q|0,Q=o>>>0<a>>>0?Q+1|0:Q,t=f+(a=o)|0,o=Q,Q=C+Q|0,i[(n=I)+32>>2]=t,i[n+36>>2]=t>>>0<f>>>0?Q+1|0:Q,Q=ug(e,c,28),f=p,C=ug(e,c,34)^Q,n=p^f,Q=((E|s)&c|E&s)+o|0,s=(t=(E=a)+(a=(Y|b)&e|Y&b)|0)+(E=ug(e,c,39)^C)|0,Q=(p^n)+(a>>>0>t>>>0?Q+1|0:Q)|0,i[(f=I)>>2]=s,i[f+4>>2]=E>>>0>s>>>0?Q+1|0:Q,64==(0|B)){for(;s=g=(B=x<<3)+A|0,B=(E=i[(Q=I+B|0)>>2])+i[s>>2]|0,Q=i[s+4>>2]+i[Q+4>>2]|0,i[s>>2]=B,i[s+4>>2]=B>>>0<E>>>0?Q+1|0:Q,8!=(0|(x=x+1|0)););break}c=((B=B+16|0)<<3)+g|0,Y=s=i[y+4>>2],Q=s>>>6|0,s=((63&s)<<26|(b=i[y>>2])>>>6)^ug(b,s,19),Q^=p,s=(C=ug(b,Y,61)^s)+(E=w=i[l>>2])|0,Q=(f=i[l+4>>2])+(p^Q)|0,Q=E>>>0>s>>>0?Q+1|0:Q,s=(o=i[(E=g+L|0)>>2])+s|0,Q=i[E+4>>2]+Q|0,s=o>>>0>(C=s)>>>0?Q+1|0:Q,o=E=i[d+4>>2],Q=E>>>7|0,E=((127&E)<<25|(t=i[d>>2])>>>7)^ug(t,E,1),Q^=p,a=C,C=ug(t,o,8)^E,Q=(p^Q)+s|0,n=E=a+C|0,E=Q=E>>>0<C>>>0?Q+1|0:Q,i[c>>2]=n,i[c+4>>2]=Q,Q=i[(c=d)+76>>2]+o|0,C=t,o=(t=i[c+72>>2])>>>0>(C=s=C+t|0)>>>0?Q+1|0:Q,s=t=i[D+4>>2],Q=t>>>6|0,t=((63&t)<<26|(e=i[D>>2])>>>6)^ug(e,t,19),Q^=p,a=C,C=ug(e,s,61)^t,Q=(p^Q)+o|0,o=C>>>0>(a=t=a+C|0)>>>0?Q+1|0:Q,t=C=i[c+12>>2],Q=C>>>7|0,C=((127&C)<<25|(r=i[c+8>>2])>>>7)^ug(r,C,1),Q^=p,d=a,a=ug(r,t,8)^C,Q=(p^Q)+o|0,Q=(C=d+a|0)>>>0<a>>>0?Q+1|0:Q,a=C,o=Q,i[c+128>>2]=C,i[c+132>>2]=Q,c=U,C=t,Q=ug(n,E,19),U=p,t=Q,Q=E>>>6|0,E=(E=ug(n,E,61)^t^((63&E)<<26|n>>>6))+(n=d=i[u>>2])|0,Q=(t=i[u+4>>2])+(p^Q^U)|0,Q=E>>>0<n>>>0?Q+1|0:Q,n=E,Q=Q+C|0,r=E=E+r|0,E=E>>>0<n>>>0?Q+1|0:Q,n=C=i[F+4>>2],Q=C>>>7|0,C=((127&C)<<25|(U=i[F>>2])>>>7)^ug(U,C,1),Q^=p,m=r,r=ug(U,n,8)^C,Q=(p^Q)+E|0,Q=(C=m+r|0)>>>0<r>>>0?Q+1|0:Q,r=C,E=Q,i[c+128>>2]=C,i[c+132>>2]=Q,c=(Q=U)+(U=i[(C=F)+72>>2])|0,Q=i[C+76>>2]+n|0,n=Q=c>>>0<U>>>0?Q+1|0:Q,Q=ug(a,o,19),U=p,F=c,c=Q,Q=o>>>6|0,c=ug(a,o,61)^c^((63&o)<<26|a>>>6),Q=(p^Q^U)+n|0,U=o=F+c|0,o=o>>>0<c>>>0?Q+1|0:Q,c=n=i[C+12>>2],Q=n>>>7|0,n=((127&n)<<25|(a=i[C+8>>2])>>>7)^ug(a,n,1),Q^=p,F=ug(a,c,8)^n,Q=(p^Q)+o|0,Q=(n=F+U|0)>>>0<F>>>0?Q+1|0:Q,F=n,o=Q,i[C+128>>2]=n,i[C+132>>2]=Q,C=S,n=c,Q=ug(r,E,19),S=p,m=a,a=Q,Q=E>>>6|0,E=(E=ug(r,E,61)^a^((63&E)<<26|r>>>6))+(a=U=i[h>>2])|0,Q=(c=i[h+4>>2])+(p^Q^S)|0,Q=E>>>0<a>>>0?Q+1|0:Q,a=E,Q=Q+n|0,S=E=m+E|0,E=E>>>0<a>>>0?Q+1|0:Q,a=n=i[G+4>>2],Q=n>>>7|0,n=((127&n)<<25|(r=i[G>>2])>>>7)^ug(r,n,1),Q^=p,m=S,S=ug(r,a,8)^n,Q=(p^Q)+E|0,Q=(n=m+S|0)>>>0<S>>>0?Q+1|0:Q,S=n,E=Q,i[C+128>>2]=n,i[C+132>>2]=Q,C=(Q=r)+(r=i[(n=G)+72>>2])|0,Q=i[n+76>>2]+a|0,a=Q=C>>>0<r>>>0?Q+1|0:Q,Q=ug(F,o,19),r=p,G=C,m=Q,Q=(C=o)>>>6|0,C=m^((63&C)<<26|F>>>6)^ug(F,C,61),Q=(p^Q^r)+a|0,o=C>>>0>(r=o=G+C|0)>>>0?Q+1|0:Q,Q=(C=a=i[n+12>>2])>>>7|0,a=((127&C)<<25|(G=i[n+8>>2])>>>7)^ug(G,C,1),Q^=p,F=r,r=ug(G,C,8)^a,Q=(p^Q)+o|0,F=a=F+r|0,o=Q=r>>>0>a>>>0?Q+1|0:Q,i[n+128>>2]=a,i[n+132>>2]=Q,n=R,a=C,Q=ug(S,E,19),R=p,C=Q,Q=E>>>6|0,C=ug(S,E,61)^C^((63&E)<<26|S>>>6),Q=(p^Q^R)+s|0,Q=(E=C+e|0)>>>0<C>>>0?Q+1|0:Q,C=E,Q=Q+a|0,G=E=E+G|0,E=E>>>0<C>>>0?Q+1|0:Q,Q=(C=r=i[k+4>>2])>>>7|0,r=((127&C)<<25|(a=i[k>>2])>>>7)^ug(a,C,1),Q^=p,S=G,G=ug(a,C,8)^r,Q=(p^Q)+E|0,E=Q=(r=S+G|0)>>>0<G>>>0?Q+1|0:Q,i[n+128>>2]=r,i[n+132>>2]=Q,Q=i[(n=k)+76>>2]+C|0,a=(C=a=(G=i[n+72>>2])+a|0)>>>0<G>>>0?Q+1|0:Q,Q=ug(F,o,19),G=p,S=C,k=Q,Q=(C=o)>>>6|0,C=k^((63&C)<<26|F>>>6)^ug(F,C,61),Q=(p^Q^G)+a|0,F=o=S+C|0,o=C>>>0>o>>>0?Q+1|0:Q,Q=(C=a=i[n+12>>2])>>>7|0,a=((127&C)<<25|(G=i[n+8>>2])>>>7)^ug(G,C,1),Q^=p,S=F,F=ug(G,C,8)^a,Q=(p^Q)+o|0,Q=(a=S+F|0)>>>0<F>>>0?Q+1|0:Q,F=a,o=Q,i[n+128>>2]=a,i[n+132>>2]=Q,a=C,Q=ug(r,E,19),k=p,C=Q,Q=E>>>6|0,E=(E=ug(r,E,61)^C^((63&E)<<26|r>>>6))+(C=i[(n=H)+72>>2])|0,Q=i[n+76>>2]+(p^Q^k)|0,Q=E>>>0<C>>>0?Q+1|0:Q,C=E,Q=Q+a|0,C=Q=(E=E+G|0)>>>0<C>>>0?Q+1|0:Q,Q=ug(w,f,1),a=p,G=E,r=Q,Q=(E=f)>>>7|0,r=r^((127&E)<<25|w>>>7)^ug(w,E,8),Q=(p^Q^a)+C|0,a=E=G+r|0,E=Q=E>>>0<r>>>0?Q+1|0:Q,i[n+128>>2]=a,i[n+132>>2]=Q,Q=i[(C=l)+76>>2]+f|0,f=n=(r=i[C+72>>2])+w|0,n=n>>>0<r>>>0?Q+1|0:Q,Q=ug(F,o,19),r=p,w=f,f=Q,Q=o>>>6|0,f=ug(F,o,61)^f^((63&o)<<26|F>>>6),Q=(p^Q^r)+n|0,o=(r=o=w+f|0)>>>0<f>>>0?Q+1|0:Q,f=n=i[C+12>>2],Q=n>>>7|0,n=((127&n)<<25|(F=i[C+8>>2])>>>7)^ug(F,n,1),Q^=p,w=r,r=ug(F,f,8)^n,Q=(p^Q)+o|0,Q=(n=w+r|0)>>>0<r>>>0?Q+1|0:Q,r=n,o=Q,i[C+128>>2]=n,i[C+132>>2]=Q,n=f,Q=ug(a,E,19),G=p,C=Q,Q=E>>>6|0,E=(E=ug(a,E,61)^C^((63&E)<<26|a>>>6))+(f=i[(C=v)+72>>2])|0,Q=i[C+76>>2]+(p^Q^G)|0,Q=E>>>0<f>>>0?Q+1|0:Q,f=E,Q=Q+n|0,f=Q=(E=E+F|0)>>>0<f>>>0?Q+1|0:Q,Q=ug(d,t,1),n=p,w=E,a=Q,Q=(E=t)>>>7|0,a=a^((127&E)<<25|d>>>7)^ug(d,E,8),Q=(p^Q^n)+f|0,n=E=w+a|0,E=Q=E>>>0<a>>>0?Q+1|0:Q,i[C+128>>2]=n,i[C+132>>2]=Q,f=(a=i[(C=u)+72>>2])+d|0,Q=i[C+76>>2]+t|0,t=Q=a>>>0>f>>>0?Q+1|0:Q,Q=ug(r,o,19),a=p,w=f,f=Q,Q=o>>>6|0,f=ug(r,o,61)^f^((63&o)<<26|r>>>6),Q=(p^Q^a)+t|0,o=(a=o=w+f|0)>>>0<f>>>0?Q+1|0:Q,f=t=i[C+12>>2],Q=t>>>7|0,t=((127&t)<<25|(r=i[C+8>>2])>>>7)^ug(r,t,1),Q^=p,w=a,a=ug(r,f,8)^t,Q=(p^Q)+o|0,Q=a>>>0>(t=w+a|0)>>>0?Q+1|0:Q,a=t,o=Q,i[C+128>>2]=a,i[C+132>>2]=Q,C=f,Q=ug(n,E,19),d=p,f=Q,Q=E>>>6|0,E=(E=ug(n,E,61)^f^((63&E)<<26|n>>>6))+(f=i[(t=_)+72>>2])|0,Q=i[t+76>>2]+(p^Q^d)|0,Q=E>>>0<f>>>0?Q+1|0:Q,f=E,Q=Q+C|0,f=Q=(E=E+r|0)>>>0<f>>>0?Q+1|0:Q,Q=ug(U,c,1),C=p,r=E,n=Q,Q=(E=c)>>>7|0,n=n^((127&E)<<25|U>>>7)^ug(U,E,8),Q=(p^Q^C)+f|0,C=E=r+n|0,E=Q=E>>>0<n>>>0?Q+1|0:Q,i[t+128>>2]=C,i[t+132>>2]=Q,t=(n=i[(f=h)+72>>2])+U|0,Q=i[f+76>>2]+c|0,c=Q=n>>>0>t>>>0?Q+1|0:Q,Q=ug(a,o,19),n=p,r=t,t=Q,Q=o>>>6|0,t=ug(a,o,61)^t^((63&o)<<26|a>>>6),Q=(p^Q^n)+c|0,o=(n=o=r+t|0)>>>0<t>>>0?Q+1|0:Q,c=t=i[f+12>>2],Q=t>>>7|0,t=((127&t)<<25|(h=i[f+8>>2])>>>7)^ug(h,t,1),Q^=p,t=ug(h,c,8)^t,Q=(p^Q)+o|0,Q=t>>>0>(h=t+n|0)>>>0?Q+1|0:Q,t=h,o=Q,i[f+128>>2]=t,i[f+132>>2]=Q,h=(c=i[(f=y)+72>>2])+b|0,Q=i[f+76>>2]+Y|0,y=Q=c>>>0>h>>>0?Q+1|0:Q,Q=ug(C,E,19),c=p,a=h,n=Q,Q=E>>>6|0,h=ug(C,E,61)^n^((63&E)<<26|C>>>6),Q=(p^Q^c)+y|0,h=Q=(E=a+h|0)>>>0<h>>>0?Q+1|0:Q,Q=ug(e,s,1),y=p,C=E,a=Q,Q=(E=s)>>>7|0,E=C+(c=a^((127&E)<<25|e>>>7)^ug(e,E,8))|0,Q=(p^Q^y)+h|0,i[f+128>>2]=E,i[f+132>>2]=E>>>0<c>>>0?Q+1|0:Q,Q=i[(E=D)+76>>2]+s|0,s=f=(h=i[E+72>>2])+e|0,f=f>>>0<h>>>0?Q+1|0:Q,Q=ug(t,o,19),h=p,C=Q,Q=o>>>6|0,o=ug(t,o,61)^C^((63&o)<<26|t>>>6),Q=(p^Q^h)+f|0,s=o>>>0>(y=s=o+s|0)>>>0?Q+1|0:Q,D=((127&(f=h=i[E+12>>2]))<<25|(o=i[E+8>>2])>>>7)^ug(o,f,1),Q=p^f>>>7,D=(h=ug(o,f,8)^D)+y|0,Q=(p^Q)+s|0,i[E+128>>2]=D,i[E+132>>2]=h>>>0>D>>>0?Q+1|0:Q;}}function G(A){var I,g,B,Q,E,i,a,r,o,e,t,f,c,y,s,w,h,D,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0;y=HI(A),s=n[A+2|0]|n[A+3|0]<<8|n[A+4|0]<<16|n[A+5|0]<<24,w=HI(A+5|0),h=p,IA=n[A+7|0]|n[A+8|0]<<8|n[A+9|0]<<16|n[A+10|0]<<24,gA=n[A+10|0]|n[A+11|0]<<8|n[A+12|0]<<16|n[A+13|0]<<24,D=HI(A+13|0),BA=p,M=n[A+15|0]|n[A+16|0]<<8|n[A+17|0]<<16|n[A+18|0]<<24,Z=HI(A+18|0),d=p,m=HI(A+21|0),_=n[A+23|0]|n[A+24|0]<<8|n[A+25|0]<<16|n[A+26|0]<<24,k=HI(A+26|0),l=p,AA=n[A+28|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24,q=n[A+31|0]|n[A+32|0]<<8|n[A+33|0]<<16|n[A+34|0]<<24,T=HI(A+34|0),W=p,P=n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24,O=HI(A+39|0),J=p,Y=HI(A+42|0),G=n[A+44|0]|n[A+45|0]<<8|n[A+46|0]<<16|n[A+47|0]<<24,F=HI(A+47|0),u=2097151&((3&l)<<30|k>>>2),k=eg(I=2097151&((3&(H=p))<<30|F>>>2),0,136657,0)+u|0,l=p,l=u>>>0>k>>>0?l+1|0:l,F=eg(g=(n[A+49|0]|n[A+50|0]<<8|n[A+51|0]<<16|n[A+52|0]<<24)>>>7&2097151,0,-997805,-1),u=p+l|0,u=F>>>0>(k=F+k|0)>>>0?u+1|0:u,l=eg(B=(n[A+52|0]|n[A+53|0]<<8|n[A+54|0]<<16|n[A+55|0]<<24)>>>4&2097151,0,654183,0),F=p+u|0,F=l>>>0>(k=l+k|0)>>>0?F+1|0:F,u=k,l=HI(A+55|0),k=u+(l=eg(Q=2097151&((1&(k=p))<<31|l>>>1),0,470296,0))|0,u=p+F|0,u=l>>>0>k>>>0?u+1|0:u,F=eg(E=(n[A+57|0]|n[A+58|0]<<8|n[A+59|0]<<16|n[A+60|0]<<24)>>>6&2097151,0,666643,0),l=p+u|0,U=l=F>>>0>(k=F+k|0)>>>0?l+1|0:l,F=l,b=G>>>5&2097151,l=2097151&Y,G=eg(i=(n[A+60|0]|n[A+61|0]<<8|n[A+62|0]<<16|n[A+63|0]<<24)>>>3|0,0,-683901,-1)+l|0,u=p,Y=G,S=u=l>>>0>G>>>0?u+1|0:u,N=(u=G)- -1048576|0,L=G=S-((u>>>0<4293918720)-1|0)|0,u=G>>21,r=b=(G=(2097151&G)<<11|N>>>21)+b|0,V=l=G>>>0>b>>>0?u+1|0:u,u=eg(b,l,-683901,-1),l=p+F|0,j=H=u+k|0,v=u>>>0>H>>>0?l+1|0:l,F=_>>>5&2097151,H=eg(I,0,-997805,-1)+F|0,u=p,u=F>>>0>H>>>0?u+1|0:u,l=eg(g,0,654183,0),F=p+u|0,F=l>>>0>(H=l+H|0)>>>0?F+1|0:F,u=eg(B,0,470296,0),l=p+F|0,l=u>>>0>(H=u+H|0)>>>0?l+1|0:l,F=eg(Q,0,666643,0),u=p+l|0,F=F>>>0>(_=H=F+H|0)>>>0?u+1|0:u,u=2097151&m,H=eg(I,0,654183,0)+u|0,l=p,l=u>>>0>H>>>0?l+1|0:l,G=(u=H)+(H=eg(g,0,470296,0))|0,u=p+l|0,u=G>>>0<H>>>0?u+1|0:u,H=eg(B,0,666643,0),l=p+u|0,b=G=H+G|0,G=l=G>>>0<H>>>0?l+1|0:l,z=(u=b)- -1048576|0,R=H=l-((u>>>0<4293918720)-1|0)|0,F=(u=H>>>21|0)+F|0,m=F=(l=(2097151&H)<<11|z>>>21)>>>0>(_=H=l+_|0)>>>0?F+1|0:F,K=(u=_)- -1048576|0,f=k- -1048576|0,U=U-((k>>>0<4293918720)-1|0)|0,l=(u=(F=x=F-((u>>>0<4293918720)-1|0)|0)>>21)+v|0,U=(l=(k=(2097151&F)<<11|K>>>21)>>>0>(x=k+j|0)>>>0?l+1|0:l)-(((u=-2097152&f)>>>0>(k=x)>>>0)+(H=U)|0)|0,QA=(u=k-u|0)-(l=-2097152&(c=u- -1048576|0))|0,CA=U-((u>>>0<l>>>0)+(k=U-((u>>>0<4293918720)-1|0)|0)|0)|0,l=eg(r,V,136657,0)+_|0,u=m+p|0,u=l>>>0<_>>>0?u+1|0:u,$=(_=l)-(l=-2097152&K)|0,j=u-((l>>>0>_>>>0)+F|0)|0,U=Y-(u=-2097152&N)|0,v=S-((u>>>0>Y>>>0)+L|0)|0,u=2097151&((7&J)<<29|O>>>3),F=eg(i,0,136657,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,_=(u=F)+(F=eg(E,0,-683901,-1))|0,u=p+l|0,Y=_,_=F>>>0>_>>>0?u+1|0:u,u=eg(Q,0,-683901,-1),l=p,F=u,l=(u=P>>>6&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,m=(u=eg(i,0,-997805,-1))+F|0,F=p+l|0,F=u>>>0>m>>>0?F+1|0:F,l=eg(E,0,136657,0),u=p+F|0,K=l=(N=u=l>>>0>(m=l+m|0)>>>0?u+1|0:u)-(((u=m)>>>0<4293918720)-1|0)|0,u=(2097151&l)<<11|(O=u- -1048576|0)>>>21,l=(l>>21)+_|0,S=l=u>>>0>(Y=u+Y|0)>>>0?l+1|0:l,x=(u=Y)- -1048576|0,L=l=l-((u>>>0<4293918720)-1|0)|0,u=(F=l>>21)+v|0,o=_=(l=(2097151&l)<<11|x>>>21)+U|0,X=u=l>>>0>_>>>0?u+1|0:u,l=eg(_,u,-683901,-1),u=p+j|0,EA=F=l+$|0,P=l>>>0>F>>>0?u+1|0:u,v=b,u=2097151&((7&d)<<29|Z>>>3),F=eg(I,0,470296,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,u=eg(g,0,666643,0),l=p+l|0,U=F=u+F|0,F=u>>>0>F>>>0?l+1|0:l,_=M>>>6&2097151,b=eg(I,0,666643,0)+_|0,u=p,d=_=(M=u=_>>>0>b>>>0?u+1|0:u)-(((u=b)>>>0<4293918720)-1|0)|0,l=(l=_>>>21|0)+F|0,J=l=(u=(2097151&_)<<11|($=u- -1048576|0)>>>21)>>>0>(_=u+U|0)>>>0?l+1|0:l,Z=l-(((u=_)>>>0<4293918720)-1|0)|0,j=u- -1048576|0,a=Y-(u=-2097152&x)|0,e=F=S-((u>>>0>Y>>>0)+L|0)|0,u=((U=Z)>>>21|0)+G|0,u=(Y=(2097151&U)<<11|j>>>21)>>>0>(v=Y+v|0)>>>0?u+1|0:u,v=(G=eg(r,V,-997805,-1))+((Y=v)-(l=-2097152&z)|0)|0,l=p+(u-((8191&R)+(l>>>0>Y>>>0)|0)|0)|0,l=G>>>0>v>>>0?l+1|0:l,u=eg(o,X,136657,0),l=p+l|0,l=u>>>0>(G=u+v|0)>>>0?l+1|0:l,F=eg(a,F,-683901,-1),u=p+l|0,S=u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,x=(u=G)- -1048576|0,L=F=S-((u>>>0<4293918720)-1|0)|0,l=(u=F>>21)+P|0,v=l=(F=(2097151&F)<<11|x>>>21)>>>0>(Y=F+EA|0)>>>0?l+1|0:l,R=(u=F=Y)- -1048576|0,u=(u=(Y=P=l-((u>>>0<4293918720)-1|0)|0)>>21)+CA|0,QA=P=(l=(2097151&Y)<<11|R>>>21)+QA|0,P=l>>>0>P>>>0?u+1|0:u,CA=F-(u=-2097152&R)|0,EA=v-((u>>>0>F>>>0)+Y|0)|0,Z=G-(u=-2097152&x)|0,z=S-((u>>>0>G>>>0)+L|0)|0,u=eg(r,V,654183,0),F=p+(J-((8191&U)+((l=-2097152&j)>>>0>_>>>0)|0)|0)|0,F=u>>>0>(G=u+(_-l|0)|0)>>>0?F+1|0:F,l=eg(o,X,-997805,-1),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(a,e,136657,0),l=p+u|0,x=G=F+G|0,Y=F>>>0>G>>>0?l+1|0:l,R=m-(u=-2097152&O)|0,J=N-((u>>>0>m>>>0)+K|0)|0,l=2097151&((1&W)<<31|T>>>1),G=eg(B,0,-683901,-1)+l|0,u=p,u=l>>>0>G>>>0?u+1|0:u,l=eg(Q,0,136657,0),u=p+u|0,u=l>>>0>(F=l+G|0)>>>0?u+1|0:u,G=(l=F)+(F=eg(i,0,654183,0))|0,l=p+u|0,l=F>>>0>G>>>0?l+1|0:l,u=eg(E,0,-997805,-1),l=p+l|0,m=F=u+G|0,G=u>>>0>F>>>0?l+1|0:l,u=eg(g,0,-683901,-1),F=p,l=u,F=(u=q>>>4&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,_=(u=l)+(l=eg(B,0,136657,0))|0,u=p+F|0,u=l>>>0>_>>>0?u+1|0:u,F=eg(Q,0,-997805,-1),l=p+u|0,l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,F=eg(i,0,470296,0),u=p+l|0,u=F>>>0>(_=F+_|0)>>>0?u+1|0:u,F=eg(E,0,654183,0),l=p+u|0,S=l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,K=(u=_)- -1048576|0,L=F=l-((u>>>0<4293918720)-1|0)|0,u=(u=F>>21)+G|0,G=F=(l=(2097151&F)<<11|K>>>21)+m|0,v=u=l>>>0>F>>>0?u+1|0:u,U=(u=F)- -1048576|0,m=F=v-((u>>>0<4293918720)-1|0)|0,l=(u=F>>21)+J|0,t=N=(F=(2097151&F)<<11|U>>>21)+R|0,q=l=F>>>0>N>>>0?l+1|0:l,u=eg(N,l,-683901,-1),F=p+Y|0,J=l=u+x|0,Y=u>>>0>l>>>0?F+1|0:F,T=G-(u=-2097152&U)|0,W=m=v-((u>>>0>G>>>0)+m|0)|0,F=(u=eg(r,V,470296,0))+(b-(l=-2097152&$)|0)|0,l=p+(M-((2047&d)+(l>>>0>b>>>0)|0)|0)|0,l=u>>>0>F>>>0?l+1|0:l,u=eg(o,X,654183,0),l=p+l|0,l=u>>>0>(F=u+F|0)>>>0?l+1|0:l,G=(u=eg(a,e,-997805,-1))+F|0,F=p+l|0,F=u>>>0>G>>>0?F+1|0:F,l=eg(N,q,136657,0),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(T,m,-683901,-1),l=p+u|0,v=l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,d=(u=G)- -1048576|0,m=F=l-((u>>>0<4293918720)-1|0)|0,u=(u=F>>21)+Y|0,Y=u=(l=(2097151&F)<<11|d>>>21)>>>0>(F=l+J|0)>>>0?u+1|0:u,U=(u=F)- -1048576|0,l=(u=(b=J=Y-((u>>>0<4293918720)-1|0)|0)>>21)+z|0,Z=M=(J=(2097151&b)<<11|U>>>21)+Z|0,J=M>>>0<J>>>0?l+1|0:l,z=F-(u=-2097152&U)|0,O=Y-((u>>>0>F>>>0)+b|0)|0,x=G-(u=-2097152&d)|0,N=v-((u>>>0>G>>>0)+m|0)|0,l=2097151&((1&BA)<<31|D>>>1),G=eg(r,V,666643,0)+l|0,u=p,u=l>>>0>G>>>0?u+1|0:u,F=eg(o,X,470296,0),l=p+u|0,l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,F=eg(a,e,654183,0),u=p+l|0,u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,l=eg(t,q,-997805,-1),F=p+u|0,F=l>>>0>(G=l+G|0)>>>0?F+1|0:F,u=eg(T,W,136657,0),l=p+F|0,m=G=u+G|0,b=u>>>0>G>>>0?l+1|0:l,Y=_-(u=-2097152&K)|0,_=S-((u>>>0>_>>>0)+L|0)|0,u=eg(I,0,-683901,-1),l=p,F=u,l=(u=AA>>>7&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,G=(u=eg(g,0,136657,0))+F|0,F=p+l|0,F=u>>>0>G>>>0?F+1|0:F,l=eg(B,0,-997805,-1),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(Q,0,654183,0),l=p+u|0,l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,F=eg(i,0,666643,0),u=p+l|0,u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,F=eg(E,0,470296,0),l=p+u|0,u=l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,l=H>>21,G=(H=(2097151&H)<<11|f>>>21)+(F=G)|0,F=u+l|0,L=F=G>>>0<H>>>0?F+1|0:F,S=(u=G)- -1048576|0,v=F=F-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+_|0,V=H=(F=(2097151&F)<<11|S>>>21)+Y|0,R=u=F>>>0>H>>>0?u+1|0:u,u=eg(H,u,-683901,-1),l=p+b|0,b=F=u+m|0,H=u>>>0>F>>>0?l+1|0:l,u=eg(o,X,666643,0),F=p,l=u,F=(u=gA>>>4&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,_=(u=l)+(l=eg(a,e,470296,0))|0,u=p+F|0,u=l>>>0>_>>>0?u+1|0:u,F=eg(t,q,654183,0),l=p+u|0,l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,u=eg(T,W,-997805,-1),l=p+l|0,l=u>>>0>(F=u+_|0)>>>0?l+1|0:l,_=(u=F)+(F=eg(V,R,136657,0))|0,u=p+l|0,m=u=F>>>0>_>>>0?u+1|0:u,M=(u=_)- -1048576|0,Y=F=m-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+H|0,F=u=(F=(2097151&F)<<11|M>>>21)>>>0>(H=b=F+b|0)>>>0?u+1|0:u,d=(u=H)- -1048576|0,u=(l=(b=U=F-((u>>>0<4293918720)-1|0)|0)>>21)+N|0,$=K=(U=(2097151&b)<<11|d>>>21)+x|0,U=U>>>0>K>>>0?u+1|0:u,u=G-(l=-2097152&S)|0,G=L-((l>>>0>G>>>0)+v|0)|0,v=u,u=(u=k>>21)+G|0,S=u=(l=(2097151&k)<<11|c>>>21)>>>0>(G=k=v+l|0)>>>0?u+1|0:u,K=(u=G)- -1048576|0,L=k=S-((u>>>0<4293918720)-1|0)|0,N=u=k>>21,u=eg(X=(2097151&k)<<11|K>>>21,u,-683901,-1),l=p+F|0,l=u>>>0>(k=u+H|0)>>>0?l+1|0:l,j=(F=k)-(u=-2097152&d)|0,x=l-((u>>>0>F>>>0)+b|0)|0,l=eg(X,N,136657,0)+_|0,u=m+p|0,u=l>>>0<_>>>0?u+1|0:u,AA=(F=l)-(l=-2097152&M)|0,M=u-((l>>>0>F>>>0)+Y|0)|0,u=eg(a,e,666643,0),l=p,F=u,l=(u=IA>>>7&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,k=(u=eg(t,q,470296,0))+F|0,F=p+l|0,F=u>>>0>k>>>0?F+1|0:F,l=eg(T,W,654183,0),u=p+F|0,u=l>>>0>(k=l+k|0)>>>0?u+1|0:u,l=eg(V,R,-997805,-1),u=p+u|0,Y=F=l+k|0,F=l>>>0>F>>>0?u+1|0:u,u=2097151&((3&h)<<30|w>>>2),k=eg(t,q,666643,0)+u|0,l=p,l=u>>>0>k>>>0?l+1|0:l,u=eg(T,W,470296,0),l=p+l|0,l=u>>>0>(k=u+k|0)>>>0?l+1|0:l,H=(u=k)+(k=eg(V,R,654183,0))|0,u=p+l|0,b=u=k>>>0>H>>>0?u+1|0:u,d=(u=k=H)- -1048576|0,u=(l=(_=H=b-((u>>>0<4293918720)-1|0)|0)>>21)+F|0,m=Y=(H=(2097151&_)<<11|d>>>21)+Y|0,F=u=H>>>0>Y>>>0?u+1|0:u,Y=(u=Y)- -1048576|0,u=(l=(H=v=F-((u>>>0<4293918720)-1|0)|0)>>21)+M|0,IA=q=(v=(2097151&H)<<11|Y>>>21)+AA|0,v=v>>>0>q>>>0?u+1|0:u,u=eg(X,N,-997805,-1),F=p+F|0,F=u>>>0>(l=u+m|0)>>>0?F+1|0:F,gA=l-(u=-2097152&Y)|0,BA=F-((u>>>0>l>>>0)+H|0)|0,u=eg(X,N,654183,0)+k|0,l=b+p|0,l=u>>>0<k>>>0?l+1|0:l,AA=(F=u)-(u=-2097152&d)|0,q=l-((u>>>0>F>>>0)+_|0)|0,u=eg(T,W,666643,0),F=p,l=u,F=(u=s>>>5&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,k=(u=l)+(l=eg(V,R,470296,0))|0,u=p+F|0,_=k,F=l>>>0>k>>>0?u+1|0:u,l=2097151&y,k=eg(V,R,666643,0)+l|0,u=p,H=k,Y=k=(m=u=l>>>0>k>>>0?u+1|0:u)-(((u=k)>>>0<4293918720)-1|0)|0,F=(l=k>>21)+F|0,b=F=(u=(2097151&k)<<11|(M=u- -1048576|0)>>>21)>>>0>(k=u+_|0)>>>0?F+1|0:F,d=(u=k)- -1048576|0,_=F=F-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+q|0,F=u=(F=(2097151&F)<<11|d>>>21)>>>0>(R=F+AA|0)>>>0?u+1|0:u,u=eg(X,N,470296,0)+k|0,l=b+p|0,_=(l=u>>>0<k>>>0?l+1|0:l)-(((k=-2097152&d)>>>0>(b=u)>>>0)+_|0)|0,b=u=u-k|0,k=(l=eg(X,N,666643,0))+(H-(u=-2097152&M)|0)|0,u=p+(m-((u>>>0>H>>>0)+Y|0)|0)|0,H=k,l=(l=(u=l>>>0>k>>>0?u+1|0:u)>>21)+_|0,W=k=b+(u=(2097151&u)<<11|k>>>21)|0,F=(u=(l=u>>>0>k>>>0?l+1|0:l)>>21)+F|0,_=k=(l=(2097151&l)<<11|k>>>21)+R|0,l=(F=l>>>0>(u=k)>>>0?F+1|0:F)>>21,F=(2097151&F)<<11|u>>>21,u=l+BA|0,Y=k=F+gA|0,F=(u=F>>>0>(l=k)>>>0?u+1|0:u)>>21,u=(2097151&u)<<11|l>>>21,l=F+v|0,v=k=u+IA|0,u=(u=(l=u>>>0>(F=k)>>>0?l+1|0:l)>>21)+x|0,R=F=(l=(2097151&l)<<11|F>>>21)+j|0,l=(l=(u=l>>>0>F>>>0?u+1|0:u)>>21)+U|0,N=F=(u=(2097151&u)<<11|F>>>21)+$|0,u=(l=u>>>0>F>>>0?l+1|0:l)>>21,l=(2097151&l)<<11|F>>>21,F=u+O|0,M=k=l+z|0,l=(F=l>>>0>(u=k)>>>0?F+1|0:F)>>21,F=(2097151&F)<<11|u>>>21,u=l+J|0,d=k=F+Z|0,F=(u=F>>>0>(l=k)>>>0?u+1|0:u)>>21,u=(2097151&u)<<11|l>>>21,l=F+EA|0,J=k=u+CA|0,u=(u=(l=u>>>0>(F=k)>>>0?l+1|0:l)>>21)+P|0,U=F=(l=(2097151&l)<<11|F>>>21)+QA|0,l=(u=l>>>0>F>>>0?u+1|0:u)>>21,k=(2097151&u)<<11|F>>>21,u=G-(F=-2097152&K)|0,F=(S-((F>>>0>G>>>0)+L|0)|0)+l|0,L=k=k+u|0,P=(2097151&(F=u>>>0>(l=k)>>>0?F+1|0:F))<<11|l>>>21,m=u=F>>21,l=2097151&H,F=eg(P,u,666643,0)+l|0,u=p,b=F,k=u=l>>>0>F>>>0?u+1|0:u,C[0|A]=F,C[A+1|0]=(255&u)<<24|F>>>8,u=2097151&W,F=eg(P,m,470296,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,H=F,G=(2097151&(F=k))<<11|b>>>21,F=(u=F>>21)+l|0,F=G>>>0>(S=H+G|0)>>>0?F+1|0:F,G=S,C[A+4|0]=(2047&F)<<21|G>>>11,u=l=F,F=G,C[A+3|0]=(7&u)<<29|F>>>3,F=2097151&_,_=eg(P,m,654183,0)+F|0,u=p,u=F>>>0>_>>>0?u+1|0:u,F=_,_=(2097151&l)<<11|G>>>21,l=(l>>21)+u|0,l=_>>>0>(S=F+_|0)>>>0?l+1|0:l,_=S,u=l,C[A+6|0]=(63&u)<<26|_>>>6,H=0,F=31&((65535&k)<<16|b>>>16),l=b=2097151&G,C[A+2|0]=F|l<<5,F=2097151&Y,G=eg(P,m,-997805,-1)+F|0,l=p,F=l=F>>>0>G>>>0?l+1|0:l,F=(l=u>>21)+F|0,Y=G=(u=(2097151&u)<<11|_>>>21)+G|0,F=u>>>0>G>>>0?F+1|0:F,C[A+9|0]=(511&F)<<23|G>>>9,u=l=F,F=G,C[A+8|0]=(1&u)<<31|F>>>1,G=0,F=_&=2097151,C[A+5|0]=(524287&H)<<13|b>>>19|F<<2,F=2097151&v,H=eg(P,m,136657,0)+F|0,u=p,u=(u=F>>>0>H>>>0?u+1|0:u)+(F=l>>21)|0,b=H=(l=(2097151&l)<<11|Y>>>21)+H|0,u=l>>>0>H>>>0?u+1|0:u,l=H,C[A+12|0]=(4095&u)<<20|l>>>12,F=u,C[A+11|0]=(15&u)<<28|l>>>4,H=0,l=v=2097151&Y,C[A+7|0]=(16383&G)<<18|_>>>14|l<<7,u=2097151&R,G=eg(P,m,-683901,-1)+u|0,l=p,l=u>>>0>G>>>0?l+1|0:l,l=(u=F>>21)+l|0,_=G=(F=(2097151&F)<<11|b>>>21)+G|0,u=l=F>>>0>G>>>0?l+1|0:l,C[A+14|0]=(127&u)<<25|G>>>7,G=0,F=Y=2097151&b,C[A+10|0]=(131071&H)<<15|v>>>17|F<<4,l=u>>21,F=(u=(2097151&u)<<11|_>>>21)>>>0>(b=u+(2097151&N)|0)>>>0?l+1|0:l,C[A+17|0]=(1023&F)<<22|b>>>10,u=F,F=b,C[A+16|0]=(3&u)<<30|F>>>2,F=m=2097151&_,C[A+13|0]=(1048575&G)<<12|Y>>>20|F<<1,F=(2097151&u)<<11|b>>>21,u>>=21,u=F>>>0>(_=F+(2097151&M)|0)>>>0?u+1|0:u,l=_,C[A+20|0]=(8191&u)<<19|l>>>13,C[A+19|0]=(31&u)<<27|l>>>5,l=Y=2097151&b,C[A+15|0]=(32767&H)<<17|m>>>15|l<<6,k=(2097151&u)<<11|_>>>21,u=l=u>>21,k=u=k>>>0>(m=k+(2097151&d)|0)>>>0?u+1|0:u,C[A+21|0]=m,u=_,C[A+18|0]=(262143&G)<<14|Y>>>18|u<<3,u=k,C[A+22|0]=(255&u)<<24|m>>>8,F=u,u>>=21,F=(_=(H=(2097151&F)<<11|m>>>21)+(2097151&J)|0)>>>0<H>>>0?u+1|0:u,C[(l=A)+25|0]=(2047&F)<<21|_>>>11,u=F,F=_,C[l+24|0]=(7&u)<<29|F>>>3,F=l,H=(2097151&u)<<11|_>>>21,u>>=21,l=u=H>>>0>(G=b=H+(2097151&U)|0)>>>0?u+1|0:u,C[F+27|0]=(63&u)<<26|G>>>6,H=0,u=b=2097151&_,C[F+23|0]=31&((65535&k)<<16|m>>>16)|u<<5,l=(u=l)>>21,l=(u=(2097151&u)<<11|G>>>21)>>>0>(k=u+(2097151&L)|0)>>>0?l+1|0:l,F=k,C[A+31|0]=(131071&l)<<15|F>>>17,u=l,C[A+30|0]=(511&u)<<23|F>>>9,C[A+29|0]=(1&u)<<31|F>>>1,l=0,G&=2097151,C[A+26|0]=(524287&H)<<13|b>>>19|G<<2,C[A+28|0]=(16383&l)<<18|G>>>14|F<<7;}function k(A){var I,g=0,B=0,Q=0,C=0,E=0,r=0,o=0,t=0,f=0,c=0,y=0,s=0,w=0;h=I=h-16|0;A:{I:{g:{B:{Q:{C:{E:{i:{n:{a:{r:{o:{if((A|=0)>>>0<=244){if(3&(g=(E=i[8961])>>>(B=(t=A>>>0<11?16:A+11&-8)>>>3|0)|0)){A=(C=i[35892+(g=(Q=B+(1&(-1^g))|0)<<3)>>2])+8|0,(0|(B=i[C+8>>2]))!=(0|(g=g+35884|0))?(i[B+12>>2]=g,i[g+8>>2]=B):(s=35844,w=vI(-2,Q)&E,i[s>>2]=w),g=Q<<3,i[C+4>>2]=3|g,i[4+(g=g+C|0)>>2]=1|i[g+4>>2];break A}if((c=i[8963])>>>0>=t>>>0)break o;if(g){B=A=(g=(0-(A=(0-(A=2<<B)|A)&g<<B)&A)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,r=i[35892+(A=(B=((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)|0)<<3)>>2],(0|(g=i[r+8>>2]))!=(0|(A=A+35884|0))?(i[g+12>>2]=A,i[A+8>>2]=g):(E=vI(-2,B)&E,i[8961]=E),A=r+8|0,i[r+4>>2]=3|t,C=(g=B<<3)-t|0,i[4+(Q=r+t|0)>>2]=1|C,i[g+r>>2]=C,c&&(B=35884+((g=c>>>3|0)<<3)|0,r=i[8966],(g=1<<g)&E?g=i[B+8>>2]:(i[8961]=g|E,g=B),i[B+8>>2]=r,i[g+12>>2]=r,i[r+12>>2]=B,i[r+8>>2]=g),i[8966]=Q,i[8963]=C;break A}if(!(o=i[8962]))break o;for(B=A=(g=(o&0-o)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,g=i[36148+(((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)<<2)>>2],C=(-8&i[g+4>>2])-t|0,B=g;(A=i[B+16>>2])||(A=i[B+20>>2]);)C=(Q=(B=(-8&i[A+4>>2])-t|0)>>>0<C>>>0)?B:C,g=Q?A:g,B=A;if((f=g+t|0)>>>0<=g>>>0)break r;if(y=i[g+24>>2],(0|(Q=i[g+12>>2]))!=(0|g)){A=i[g+8>>2],i[A+12>>2]=Q,i[Q+8>>2]=A;break I}if(!(A=i[(B=g+20|0)>>2])){if(!(A=i[g+16>>2]))break a;B=g+16|0;}for(;r=B,Q=A,(A=i[(B=A+20|0)>>2])||(B=Q+16|0,A=i[Q+16>>2]););i[r>>2]=0;break I}if(t=-1,!(A>>>0>4294967231)&&(t=-8&(A=A+11|0),f=i[8962])){E=31,C=0-t|0,t>>>0<=16777215&&(A=A>>>8|0,A<<=r=A+1048320>>>16&8,E=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|r)|0)<<1|t>>>A+21&1)|0);e:{t:{if(B=i[36148+(E<<2)>>2])for(A=0,g=t<<(31==(0|E)?0:25-(E>>>1|0)|0);;){if(!((r=(-8&i[B+4>>2])-t|0)>>>0>=C>>>0||(Q=B,C=r))){C=0,A=B;break t}if(r=i[B+20>>2],B=i[16+((g>>>29&4)+B|0)>>2],A=r?(0|r)==(0|B)?A:r:A,g<<=1,!B)break}else A=0;if(!(A|Q)){if(!(A=(0-(A=2<<E)|A)&f))break o;B=A=(g=(A&0-A)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,A=i[36148+(((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)<<2)>>2];}if(!A)break e}for(;C=(B=(g=(-8&i[A+4>>2])-t|0)>>>0<C>>>0)?g:C,Q=B?A:Q,A=(g=i[A+16>>2])||i[A+20>>2];);}if(!(!Q|i[8963]-t>>>0<=C>>>0)){if((o=Q+t|0)>>>0<=Q>>>0)break r;if(E=i[Q+24>>2],(0|Q)!=(0|(g=i[Q+12>>2]))){A=i[Q+8>>2],i[A+12>>2]=g,i[g+8>>2]=A;break g}if(!(A=i[(B=Q+20|0)>>2])){if(!(A=i[Q+16>>2]))break n;B=Q+16|0;}for(;r=B,g=A,(A=i[(B=A+20|0)>>2])||(B=g+16|0,A=i[g+16>>2]););i[r>>2]=0;break g}}}if((B=i[8963])>>>0>=t>>>0){Q=i[8966],(g=B-t|0)>>>0>=16?(i[8963]=g,A=Q+t|0,i[8966]=A,i[A+4>>2]=1|g,i[B+Q>>2]=g,i[Q+4>>2]=3|t):(i[8966]=0,i[8963]=0,i[Q+4>>2]=3|B,i[4+(A=B+Q|0)>>2]=1|i[A+4>>2]),A=Q+8|0;break A}if((o=i[8964])>>>0>t>>>0){g=o-t|0,i[8964]=g,A=(B=i[8967])+t|0,i[8967]=A,i[A+4>>2]=1|g,i[B+4>>2]=3|t,A=B+8|0;break A}if(A=0,g=f=t+47|0,i[9079]?B=i[9081]:(i[9082]=-1,i[9083]=-1,i[9080]=4096,i[9081]=4096,i[9079]=I+12&-16^1431655768,i[9084]=0,i[9072]=0,B=4096),(B=(r=g+B|0)&(C=0-B|0))>>>0<=t>>>0)break A;if((Q=i[9071])&&Q>>>0<(E=(g=i[9069])+B|0)>>>0|g>>>0>=E>>>0)break A;if(4&n[36288])break C;o:{e:{if(Q=i[8967])for(A=36292;;){if(Q>>>0<(g=i[A>>2])+i[A+4>>2]>>>0&&g>>>0<=Q>>>0)break e;if(!(A=i[A+8>>2]))break}if(-1==(0|(g=II(0))))break E;if(E=B,(A=(Q=i[9080])-1|0)&g&&(E=(B-g|0)+(A+g&0-Q)|0),E>>>0<=t>>>0|E>>>0>2147483646)break E;if((Q=i[9071])&&Q>>>0<(C=(A=i[9069])+E|0)>>>0|A>>>0>=C>>>0)break E;if((0|g)!=(0|(A=II(E))))break o;break Q}if((E=C&r-o)>>>0>2147483646)break E;if((0|(g=II(E)))==(i[A>>2]+i[A+4>>2]|0))break i;A=g;}if(!(-1==(0|A)|t+48>>>0<=E>>>0)){if((g=(g=i[9081])+(f-E|0)&0-g)>>>0>2147483646){g=A;break Q}if(-1!=(0|II(g))){E=g+E|0,g=A;break Q}II(0-E|0);break E}if(g=A,-1!=(0|A))break Q;break E}e();}Q=0;break I}g=0;break g}if(-1!=(0|g))break Q}i[9072]=4|i[9072];}if(B>>>0>2147483646)break B;if((g=II(B))>>>0>=(A=II(0))>>>0|-1==(0|g)|-1==(0|A))break B;if((E=A-g|0)>>>0<=t+40>>>0)break B}A=i[9069]+E|0,i[9069]=A,A>>>0>a[9070]&&(i[9070]=A);Q:{C:{E:{if(r=i[8967]){for(A=36292;;){if(((Q=i[A>>2])+(B=i[A+4>>2])|0)==(0|g))break E;if(!(A=i[A+8>>2]))break}break C}for((A=i[8965])>>>0<=g>>>0&&A||(i[8965]=g),A=0,i[9074]=E,i[9073]=g,i[8969]=-1,i[8970]=i[9079],i[9076]=0;B=35884+(Q=A<<3)|0,i[Q+35892>>2]=B,i[Q+35896>>2]=B,32!=(0|(A=A+1|0)););B=(Q=E-40|0)-(A=g+8&7?-8-g&7:0)|0,i[8964]=B,A=A+g|0,i[8967]=A,i[A+4>>2]=1|B,i[4+(g+Q|0)>>2]=40,i[8968]=i[9083];break Q}if(!(8&n[A+12|0]|g>>>0<=r>>>0|Q>>>0>r>>>0)){i[A+4>>2]=B+E,B=(A=r+8&7?-8-r&7:0)+r|0,i[8967]=B,A=(g=i[8964]+E|0)-A|0,i[8964]=A,i[B+4>>2]=1|A,i[4+(g+r|0)>>2]=40,i[8968]=i[9083];break Q}}(Q=i[8965])>>>0>g>>>0&&(i[8965]=g,Q=0),B=g+E|0,A=36292;C:{E:{i:{n:{a:{r:{for(;;){if((0|B)!=i[A>>2]){if(A=i[A+8>>2])continue;break r}break}if(!(8&n[A+12|0]))break a}for(A=36292;;){if((B=i[A>>2])>>>0<=r>>>0&&(C=B+i[A+4>>2]|0)>>>0>r>>>0)break n;A=i[A+8>>2];}}if(i[A>>2]=g,i[A+4>>2]=i[A+4>>2]+E,i[4+(f=(g+8&7?-8-g&7:0)+g|0)>>2]=3|t,B=((E=B+(B+8&7?-8-B&7:0)|0)-f|0)-t|0,o=t+f|0,(0|E)==(0|r)){i[8967]=o,A=i[8964]+B|0,i[8964]=A,i[o+4>>2]=1|A;break E}if(i[8966]==(0|E)){i[8966]=o,A=i[8963]+B|0,i[8963]=A,i[o+4>>2]=1|A,i[A+o>>2]=A;break E}if(1==(3&(A=i[E+4>>2]))){r=-8&A;a:if(A>>>0<=255){if(Q=i[E+8>>2],A=A>>>3|0,(0|(g=i[E+12>>2]))==(0|Q)){s=35844,w=i[8961]&vI(-2,A),i[s>>2]=w;break a}i[Q+12>>2]=g,i[g+8>>2]=Q;}else {if(t=i[E+24>>2],(0|E)==(0|(g=i[E+12>>2])))if((C=i[(A=E+20|0)>>2])||(C=i[(A=E+16|0)>>2])){for(;Q=A,(C=i[(A=(g=C)+20|0)>>2])||(A=g+16|0,C=i[g+16>>2]););i[Q>>2]=0;}else g=0;else A=i[E+8>>2],i[A+12>>2]=g,i[g+8>>2]=A;if(t){Q=i[E+28>>2];r:{if(i[(A=36148+(Q<<2)|0)>>2]==(0|E)){if(i[A>>2]=g,g)break r;s=35848,w=i[8962]&vI(-2,Q),i[s>>2]=w;break a}if(i[t+(i[t+16>>2]==(0|E)?16:20)>>2]=g,!g)break a}i[g+24>>2]=t,(A=i[E+16>>2])&&(i[g+16>>2]=A,i[A+24>>2]=g),(A=i[E+20>>2])&&(i[g+20>>2]=A,i[A+24>>2]=g);}}E=E+r|0,B=B+r|0;}if(i[E+4>>2]=-2&i[E+4>>2],i[o+4>>2]=1|B,i[B+o>>2]=B,B>>>0<=255){g=35884+((A=B>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=o,i[A+12>>2]=o,i[o+12>>2]=g,i[o+8>>2]=A;break E}if(A=31,B>>>0<=16777215&&(A=B>>>8|0,A<<=C=A+1048320>>>16&8,A=28+((A=((A<<=Q=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|Q|C)|0)<<1|B>>>A+21&1)|0),i[o+28>>2]=A,i[o+16>>2]=0,i[o+20>>2]=0,C=36148+(A<<2)|0,(Q=i[8962])&(g=1<<A)){for(A=B<<(31==(0|A)?0:25-(A>>>1|0)|0),g=i[C>>2];;){if(Q=g,(-8&i[g+4>>2])==(0|B))break i;if(g=A>>>29|0,A<<=1,!(g=i[16+(C=Q+(4&g)|0)>>2]))break}i[C+16>>2]=o,i[o+24>>2]=Q;}else i[8962]=g|Q,i[C>>2]=o,i[o+24>>2]=C;i[o+12>>2]=o,i[o+8>>2]=o;break E}for(B=(Q=E-40|0)-(A=g+8&7?-8-g&7:0)|0,i[8964]=B,A=A+g|0,i[8967]=A,i[A+4>>2]=1|B,i[4+(g+Q|0)>>2]=40,i[8968]=i[9083],i[(B=(A=(C+(C-39&7?39-C&7:0)|0)-47|0)>>>0<r+16>>>0?r:A)+4>>2]=27,A=i[9076],i[B+16>>2]=i[9075],i[B+20>>2]=A,A=i[9074],i[B+8>>2]=i[9073],i[B+12>>2]=A,i[9075]=B+8,i[9074]=E,i[9073]=g,i[9076]=0,A=B+24|0;i[A+4>>2]=7,g=A+8|0,A=A+4|0,g>>>0<C>>>0;);if((0|B)==(0|r))break Q;if(i[B+4>>2]=-2&i[B+4>>2],C=B-r|0,i[r+4>>2]=1|C,i[B>>2]=C,C>>>0<=255){g=35884+((A=C>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=r,i[A+12>>2]=r,i[r+12>>2]=g,i[r+8>>2]=A;break Q}if(A=31,i[r+16>>2]=0,i[r+20>>2]=0,C>>>0<=16777215&&(A=C>>>8|0,A<<=Q=A+1048320>>>16&8,A=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|Q)|0)<<1|C>>>A+21&1)|0),i[r+28>>2]=A,Q=36148+(A<<2)|0,(B=i[8962])&(g=1<<A)){for(A=C<<(31==(0|A)?0:25-(A>>>1|0)|0),g=i[Q>>2];;){if(B=g,(0|C)==(-8&i[g+4>>2]))break C;if(g=A>>>29|0,A<<=1,!(g=i[16+(Q=B+(4&g)|0)>>2]))break}i[Q+16>>2]=r,i[r+24>>2]=B;}else i[8962]=g|B,i[Q>>2]=r,i[r+24>>2]=Q;i[r+12>>2]=r,i[r+8>>2]=r;break Q}A=i[Q+8>>2],i[A+12>>2]=o,i[Q+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=Q,i[o+8>>2]=A;}A=f+8|0;break A}A=i[B+8>>2],i[A+12>>2]=r,i[B+8>>2]=r,i[r+24>>2]=0,i[r+12>>2]=B,i[r+8>>2]=A;}if(!((A=i[8964])>>>0<=t>>>0)){g=A-t|0,i[8964]=g,A=(B=i[8967])+t|0,i[8967]=A,i[A+4>>2]=1|g,i[B+4>>2]=3|t,A=B+8|0;break A}}i[8960]=48,A=0;break A}g:if(E){B=i[Q+28>>2];B:{if(i[(A=36148+(B<<2)|0)>>2]==(0|Q)){if(i[A>>2]=g,g)break B;f=vI(-2,B)&f,i[8962]=f;break g}if(i[E+(i[E+16>>2]==(0|Q)?16:20)>>2]=g,!g)break g}i[g+24>>2]=E,(A=i[Q+16>>2])&&(i[g+16>>2]=A,i[A+24>>2]=g),(A=i[Q+20>>2])&&(i[g+20>>2]=A,i[A+24>>2]=g);}g:if(C>>>0<=15)A=C+t|0,i[Q+4>>2]=3|A,i[4+(A=A+Q|0)>>2]=1|i[A+4>>2];else if(i[Q+4>>2]=3|t,i[o+4>>2]=1|C,i[C+o>>2]=C,C>>>0<=255)g=35884+((A=C>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=o,i[A+12>>2]=o,i[o+12>>2]=g,i[o+8>>2]=A;else {A=31,C>>>0<=16777215&&(A=C>>>8|0,A<<=r=A+1048320>>>16&8,A=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|r)|0)<<1|C>>>A+21&1)|0),i[o+28>>2]=A,i[o+16>>2]=0,i[o+20>>2]=0,B=36148+(A<<2)|0;B:{if((g=1<<A)&f){for(A=C<<(31==(0|A)?0:25-(A>>>1|0)|0),t=i[B>>2];;){if((-8&i[(g=t)+4>>2])==(0|C))break B;if(B=A>>>29|0,A<<=1,!(t=i[16+(B=g+(4&B)|0)>>2]))break}i[B+16>>2]=o,i[o+24>>2]=g;}else i[8962]=g|f,i[B>>2]=o,i[o+24>>2]=B;i[o+12>>2]=o,i[o+8>>2]=o;break g}A=i[g+8>>2],i[A+12>>2]=o,i[g+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=g,i[o+8>>2]=A;}A=Q+8|0;break A}I:if(y){B=i[g+28>>2];g:{if(i[(A=36148+(B<<2)|0)>>2]==(0|g)){if(i[A>>2]=Q,Q)break g;s=35848,w=vI(-2,B)&o,i[s>>2]=w;break I}if(i[(i[y+16>>2]==(0|g)?16:20)+y>>2]=Q,!Q)break I}i[Q+24>>2]=y,(A=i[g+16>>2])&&(i[Q+16>>2]=A,i[A+24>>2]=Q),(A=i[g+20>>2])&&(i[Q+20>>2]=A,i[A+24>>2]=Q);}C>>>0<=15?(A=C+t|0,i[g+4>>2]=3|A,i[4+(A=A+g|0)>>2]=1|i[A+4>>2]):(i[g+4>>2]=3|t,i[f+4>>2]=1|C,i[C+f>>2]=C,c&&(B=35884+((A=c>>>3|0)<<3)|0,Q=i[8966],(A=1<<A)&E?A=i[B+8>>2]:(i[8961]=A|E,A=B),i[B+8>>2]=Q,i[A+12>>2]=Q,i[Q+12>>2]=B,i[Q+8>>2]=A),i[8966]=f,i[8963]=C),A=g+8|0;}return h=I+16|0,0|A}function _(A,I,g){var B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K,q,X,V,W,T,j,Z,O,z,$,AA,IA,gA,BA,QA,CA,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0;eA=A,B=EA=HA=i[g+4>>2],t=EA>>31,x=EA=(DA=i[I+20>>2])<<1,EA=eg(B,t,EA,H=EA>>31),nA=p,iA=EA,Q=EA=i[g>>2],C=EA>>31,f=EA=i[I+24>>2],rA=eg(Q,C,EA,E=EA>>31),EA=p+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,L=iA=oA=i[g+8>>2],u=iA>>31,c=iA=i[I+16>>2],iA=nA+(rA=eg(oA,u,iA,n=iA>>31))|0,nA=p+EA|0,nA=iA>>>0<rA>>>0?nA+1|0:nA,K=EA=pA=i[g+12>>2],l=EA>>31,q=EA=(sA=i[I+12>>2])<<1,EA=(rA=eg(pA,l,EA,Y=EA>>31))+iA|0,iA=p+nA|0,iA=EA>>>0<rA>>>0?iA+1|0:iA,nA=EA,O=EA=uA=i[g+16>>2],k=EA>>31,y=EA=i[I+8>>2],rA=eg(uA,k,EA,a=EA>>31),EA=p+iA|0,EA=(nA=nA+rA|0)>>>0<rA>>>0?EA+1|0:EA,aA=nA,z=iA=cA=i[g+20>>2],b=iA>>31,X=iA=(fA=i[I+4>>2])<<1,nA=eg(cA,b,iA,m=iA>>31),EA=p+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,$=iA=yA=i[g+24>>2],V=iA>>31,s=iA=i[I>>2],rA=eg(yA,V,iA,o=iA>>31),iA=p+EA|0,iA=(nA=nA+rA|0)>>>0<rA>>>0?iA+1|0:iA,lA=i[g+28>>2],F=EA=r(lA,19),G=EA>>31,W=EA=(wA=i[I+36>>2])<<1,EA=(rA=eg(F,G,EA,v=EA>>31))+nA|0,nA=p+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=EA,hA=i[g+32>>2],FA=EA=r(hA,19),GA=EA>>31,w=EA=i[I+32>>2],rA=eg(FA,GA,EA,e=EA>>31),EA=p+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,AA=i[g+36>>2],h=g=r(AA,19),D=g>>31,T=g=(I=i[I+28>>2])<<1,iA=eg(h,D,g,U=g>>31),EA=p+EA|0,tA=g=nA+iA|0,g=g>>>0<iA>>>0?EA+1|0:EA,EA=eg(c,n,B,t),iA=p,DA=eg(Q,C,rA=DA,S=rA>>31),nA=p+iA|0,nA=(EA=DA+EA|0)>>>0<DA>>>0?nA+1|0:nA,DA=sA,sA=eg(oA,u,sA,N=sA>>31),iA=p+nA|0,iA=(EA=sA+EA|0)>>>0<sA>>>0?iA+1|0:iA,nA=(sA=eg(y,a,pA,l))+EA|0,EA=p+iA|0,EA=nA>>>0<sA>>>0?EA+1|0:EA,iA=nA,sA=fA,nA=eg(uA,k,fA,M=fA>>31),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(s,o,cA,b),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,d=iA=r(yA,19),iA=nA+(wA=eg(iA,_=iA>>31,fA=wA,P=fA>>31))|0,nA=p+EA|0,nA=iA>>>0<wA>>>0?nA+1|0:nA,EA=(wA=eg(w,e,F,G))+iA|0,iA=p+nA|0,iA=EA>>>0<wA>>>0?iA+1|0:iA,wA=I,I=(nA=eg(FA,GA,I,R=I>>31))+EA|0,EA=p+iA|0,EA=I>>>0<nA>>>0?EA+1|0:EA,iA=eg(h,D,f,E),EA=p+EA|0,_A=I=iA+I|0,I=I>>>0<iA>>>0?EA+1|0:EA,EA=eg(B,t,q,Y),nA=p,iA=(yA=eg(Q,C,c,n))+EA|0,EA=p+nA|0,EA=iA>>>0<yA>>>0?EA+1|0:EA,yA=eg(y,a,oA,u),nA=p+EA|0,nA=(iA=yA+iA|0)>>>0<yA>>>0?nA+1|0:nA,EA=(yA=eg(pA,l,X,m))+iA|0,iA=p+nA|0,iA=EA>>>0<yA>>>0?iA+1|0:iA,nA=(yA=eg(s,o,uA,k))+EA|0,EA=p+iA|0,EA=nA>>>0<yA>>>0?EA+1|0:EA,aA=nA,j=iA=r(cA,19),nA=eg(iA,J=iA>>31,W,v),EA=p+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(w,e,d,_),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,cA=eg(F,G,T,U),nA=p+EA|0,nA=(iA=cA+iA|0)>>>0<cA>>>0?nA+1|0:nA,EA=(cA=eg(FA,GA,f,E))+iA|0,iA=p+nA|0,iA=EA>>>0<cA>>>0?iA+1|0:iA,nA=(cA=eg(h,D,x,H))+EA|0,EA=p+iA|0,EA=nA>>>0<cA>>>0?EA+1|0:EA,cA=nA,gA=EA,yA=iA=nA+33554432|0,BA=EA=iA>>>0<33554432?EA+1|0:EA,nA=_A,_A=(67108863&EA)<<6|iA>>>26,EA=(EA>>26)+I|0,EA=(nA=nA+_A|0)>>>0<_A>>>0?EA+1|0:EA,QA=I=(_A=nA)+16777216|0,EA=g+(iA=(nA=I>>>0<16777216?EA+1|0:EA)>>25)|0,EA=(I=(nA=(33554431&nA)<<7|I>>>25)+tA|0)>>>0<nA>>>0?EA+1|0:EA,YA=I=(g=I)+33554432|0,I=EA=I>>>0<33554432?EA+1|0:EA,EA=-67108864&YA,i[eA+24>>2]=g-EA,tA=eA,g=eg(B,t,X,m),EA=p,iA=eg(Q,C,y,a),nA=p+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=eg(s,o,oA,u),EA=p+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=g,eA=g=r(pA,19),iA=eg(g,pA=g>>31,W,v),EA=p+EA|0,EA=(g=nA+iA|0)>>>0<iA>>>0?EA+1|0:EA,iA=g,IA=g=r(uA,19),g=iA+(nA=eg(w,e,g,Z=g>>31))|0,iA=p+EA|0,iA=g>>>0<nA>>>0?iA+1|0:iA,nA=eg(T,U,j,J),EA=p+iA|0,EA=(g=nA+g|0)>>>0<nA>>>0?EA+1|0:EA,iA=eg(f,E,d,_),nA=p+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=eg(F,G,x,H),EA=p+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,iA=eg(FA,GA,c,n),EA=p+EA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=eg(h,D,q,Y),iA=p+EA|0,aA=g=nA+g|0,g=g>>>0<nA>>>0?iA+1|0:iA,EA=eg(s,o,B,t),nA=p,iA=(uA=eg(Q,C,sA,M))+EA|0,EA=p+nA|0,EA=iA>>>0<uA>>>0?EA+1|0:EA,nA=iA,uA=iA=r(oA,19),iA=nA+(oA=eg(iA,kA=iA>>31,fA,P))|0,nA=p+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=eg(w,e,eA,pA),EA=p+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=eg(IA,Z,wA,R),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(oA=eg(f,E,j,J))+iA|0,iA=p+EA|0,iA=nA>>>0<oA>>>0?iA+1|0:iA,oA=eg(d,_,rA,S),EA=p+iA|0,EA=(nA=oA+nA|0)>>>0<oA>>>0?EA+1|0:EA,iA=(oA=eg(c,n,F,G))+nA|0,nA=p+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=eg(FA,GA,DA,N),EA=p+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=eg(h,D,y,a),EA=p+EA|0,bA=iA=nA+iA|0,oA=iA>>>0<nA>>>0?EA+1|0:EA,EA=eg(EA=r(B,19),EA>>31,W,v),iA=p,nA=eg(Q,C,s,o),iA=p+iA|0,iA=(EA=nA+EA|0)>>>0<nA>>>0?iA+1|0:iA,nA=(HA=eg(w,e,uA,kA))+EA|0,EA=p+iA|0,iA=(eA=eg(eA,pA,T,U))+nA|0,nA=p+(nA>>>0<HA>>>0?EA+1|0:EA)|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=eg(f,E,IA,Z),EA=p+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,nA=eg(x,H,j,J),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(eA=eg(c,n,d,_))+iA|0,iA=p+EA|0,iA=nA>>>0<eA>>>0?iA+1|0:iA,eA=eg(F,G,q,Y),EA=p+iA|0,EA=(nA=eA+nA|0)>>>0<eA>>>0?EA+1|0:EA,iA=(eA=eg(FA,GA,y,a))+nA|0,nA=p+EA|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=eg(h,D,X,m),EA=p+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,eA=iA,HA=EA,pA=iA=iA+33554432|0,uA=EA=iA>>>0<33554432?EA+1|0:EA,kA=(67108863&EA)<<6|iA>>>26,iA=(nA=EA>>26)+oA|0,oA=EA=kA+bA|0,nA=aA,EA=EA>>>0<kA>>>0?iA+1|0:iA,CA=iA=oA+16777216|0,aA=(33554431&(EA=iA>>>0<16777216?EA+1|0:EA))<<7|iA>>>25,EA=(EA>>25)+g|0,EA=(iA=nA+aA|0)>>>0<aA>>>0?EA+1|0:EA,kA=g=iA+33554432|0,g=EA=g>>>0<33554432?EA+1|0:EA,EA=-67108864&kA,i[tA+8>>2]=iA-EA,aA=tA,EA=eg(f,E,B,t),nA=p,iA=(tA=eg(Q,C,wA,R))+EA|0,EA=p+nA|0,EA=iA>>>0<tA>>>0?EA+1|0:EA,nA=eg(L,u,rA,S),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(c,n,K,l),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,tA=eg(O,k,DA,N),nA=p+EA|0,nA=(iA=tA+iA|0)>>>0<tA>>>0?nA+1|0:nA,EA=(tA=eg(y,a,z,b))+iA|0,iA=p+nA|0,iA=EA>>>0<tA>>>0?iA+1|0:iA,nA=(tA=eg(sA,M,$,V))+EA|0,EA=p+iA|0,EA=nA>>>0<tA>>>0?EA+1|0:EA,iA=nA,nA=eg(s,o,tA=lA,bA=tA>>31),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(FA,GA,fA,P),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,lA=eg(h,D,w,e),nA=p+EA|0,nA=(iA=lA+iA|0)>>>0<lA>>>0?nA+1|0:nA,EA=I>>26,I=(lA=(67108863&I)<<6|YA>>>26)+iA|0,iA=EA+nA|0,EA=iA=I>>>0<lA>>>0?iA+1|0:iA,YA=I=(nA=I)+16777216|0,I=EA=I>>>0<16777216?EA+1|0:EA,EA=-33554432&YA,i[aA+28>>2]=nA-EA,lA=aA,EA=eg(y,a,B,t),iA=p,aA=eg(Q,C,DA,N),nA=p+iA|0,nA=(EA=aA+EA|0)>>>0<aA>>>0?nA+1|0:nA,aA=eg(L,u,sA,M),iA=p+nA|0,iA=(EA=aA+EA|0)>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(s,o,K,l))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(IA,Z,fA,P),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(w,e,j,J),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=eg(d,_,wA,R),nA=p+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=eg(f,E,F,G))+iA|0,iA=p+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(FA,GA,rA,S))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(h,D,c,n),EA=p+EA|0,aA=iA=iA+nA|0,EA=(EA=iA>>>0<nA>>>0?EA+1|0:EA)+(iA=g>>26)|0,EA=(g=aA+(nA=(67108863&g)<<6|kA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,FA=g=(iA=g)+16777216|0,g=nA=g>>>0<16777216?EA+1|0:EA,EA=-33554432&FA,i[lA+12>>2]=iA-EA,EA=eg(B,t,T,U),nA=p,iA=(aA=eg(Q,C,w,e))+EA|0,EA=p+nA|0,EA=iA>>>0<aA>>>0?EA+1|0:EA,nA=eg(f,E,L,u),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=eg(K,l,x,H),nA=p+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=eg(c,n,O,k))+iA|0,iA=p+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(q,Y,z,b))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(y,a,$,V),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(tA,bA,X,m),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,hA=eg(s,o,aA=hA,GA=aA>>31),nA=p+EA|0,nA=(iA=hA+iA|0)>>>0<hA>>>0?nA+1|0:nA,EA=(hA=eg(h,D,W,v))+iA|0,iA=p+nA|0,iA=EA>>>0<hA>>>0?iA+1|0:iA,hA=EA,EA=(EA=I>>25)+iA|0,EA=(I=hA+(nA=(33554431&I)<<7|YA>>>25)|0)>>>0<nA>>>0?EA+1|0:EA,hA=I=(iA=I)+33554432|0,I=EA=I>>>0<33554432?EA+1|0:EA,EA=-67108864&hA,i[lA+32>>2]=iA-EA,nA=iA=cA-(EA=-67108864&yA)|0,EA=(EA=gA-((EA>>>0>cA>>>0)+BA|0)|0)+(iA=g>>25)|0,EA=(g=nA+(cA=(33554431&g)<<7|FA>>>25)|0)>>>0<cA>>>0?EA+1|0:EA,(iA=g+33554432|0)>>>0<33554432&&(EA=EA+1|0),EA=(_A-(-33554432&QA)|0)+((67108863&EA)<<6|iA>>>26)|0,i[A+20>>2]=EA,EA=-67108864&iA,i[A+16>>2]=g-EA,EA=eg(w,e,B,t),nA=p,iA=(fA=eg(Q,C,fA,P))+EA|0,EA=p+nA|0,EA=iA>>>0<fA>>>0?EA+1|0:EA,nA=(fA=eg(L,u,wA,R))+iA|0,iA=p+EA|0,iA=nA>>>0<fA>>>0?iA+1|0:iA,EA=(fA=eg(f,E,K,l))+nA|0,nA=p+iA|0,iA=(rA=eg(O,k,rA,S))+EA|0,EA=p+(EA>>>0<fA>>>0?nA+1|0:nA)|0,EA=iA>>>0<rA>>>0?EA+1|0:EA,nA=eg(c,n,z,b),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(DA,N,$,V),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(rA=eg(y,a,tA,bA))+iA|0,iA=p+EA|0,iA=nA>>>0<rA>>>0?iA+1|0:iA,EA=(rA=eg(aA,GA,sA,M))+nA|0,nA=p+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=(rA=eg(s,o,AA,AA>>31))+EA|0,EA=p+nA|0,g=iA,EA=(EA=iA>>>0<rA>>>0?EA+1|0:EA)+(iA=I>>26)|0,EA=(I=g+(nA=(67108863&I)<<6|hA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,EA=(I=(g=I)+16777216|0)>>>0<16777216?EA+1|0:EA,I=-33554432&(iA=I),i[A+36>>2]=g-I,nA=oA-(-33554432&CA)|0,rA=eA-(I=-67108864&pA)|0,DA=HA-((I>>>0>eA>>>0)+uA|0)|0,EA=eg((33554431&(I=EA))<<7|iA>>>25,EA>>=25,19,0),iA=p+DA|0,EA=iA=(I=EA+rA|0)>>>0<EA>>>0?iA+1|0:iA,g=((67108863&(EA=(g=I+33554432|0)>>>0<33554432?EA+1|0:EA))<<6|(iA=g)>>>26)+nA|0,i[A+4>>2]=g,g=A,A=-67108864&iA,i[g>>2]=I-A;}function H(A,I){var g,B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0;W=A,t=K=(L=i[I+12>>2])<<1,j=L,L=eg(K,E=K>>31,L,H=L>>31),X=p,K=L,g=L=i[I+16>>2],n=L>>31,D=L=(O=i[I+8>>2])<<1,V=eg(g,n,L,y=L>>31),L=p+X|0,L=(K=K+V|0)>>>0<V>>>0?L+1|0:L,X=K,s=K=(V=i[I+20>>2])<<1,w=K>>31,a=K=(z=i[I+4>>2])<<1,q=eg(s,w,K,B=K>>31),K=p+L|0,K=(X=X+q|0)>>>0<q>>>0?K+1|0:K,F=L=T=i[I+24>>2],f=L>>31,o=L=(BA=i[I>>2])<<1,q=eg(T,f,L,Q=L>>31),L=p+K|0,L=(X=q+X|0)>>>0<q>>>0?L+1|0:L,Z=X,K=i[I+32>>2],h=X=r(K,19),Y=K,X=eg(X,c=X>>31,K,G=K>>31),L=p+L|0,L=(K=Z+X|0)>>>0<X>>>0?L+1|0:L,Z=K,AA=i[I+36>>2],e=K=r(AA,38),C=K>>31,S=I=(X=i[I+28>>2])<<1,q=eg(K,C,I,b=I>>31),I=p+L|0,IA=K=Z+q|0,$=K>>>0<q>>>0?I+1|0:I,I=eg(a,B,g,n),L=p,K=eg(D,y,j,H),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,N=V,q=eg(V,k=V>>31,o,Q),K=p+L|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(h,c,S,b),L=p+K|0,L=(I=q+I|0)>>>0<q>>>0?L+1|0:L,K=eg(e,C,T,f),L=p+L|0,Z=I=K+I|0,QA=I>>>0<K>>>0?L+1|0:L,I=eg(a,B,t,E),K=p,L=(O=eg(q=O,u=q>>31,q,u))+I|0,I=p+K|0,I=L>>>0<O>>>0?I+1|0:I,K=(O=eg(o,Q,g,n))+L|0,L=p+I|0,L=K>>>0<O>>>0?L+1|0:L,_=I=r(X,38),O=X,I=(X=eg(I,l=I>>31,X,m=X>>31))+K|0,K=p+L|0,K=I>>>0<X>>>0?K+1|0:K,I=(L=I)+(X=eg(h,c,I=T<<1,I>>31))|0,L=p+K|0,L=I>>>0<X>>>0?L+1|0:L,K=eg(e,C,s,w),L=p+L|0,v=I=K+I|0,P=L=I>>>0<K>>>0?L+1|0:L,I=L,M=L=v+33554432|0,R=I=L>>>0<33554432?I+1|0:I,L=(L=I>>26)+QA|0,QA=I=(K=(67108863&I)<<6|M>>>26)+Z|0,K=I>>>0<K>>>0?L+1|0:L,J=I=I+16777216|0,L=(L=(K=I>>>0<16777216?K+1|0:K)>>25)+$|0,L=(I=(K=(33554431&K)<<7|I>>>25)+IA|0)>>>0<K>>>0?L+1|0:L,K=I,I=L,Z=L=K+33554432|0,X=I=L>>>0<33554432?I+1|0:I,I=-67108864&L,i[W+24>>2]=K-I,I=eg(o,Q,q,u),L=p,z=eg(a,B,W=z,gA=W>>31),K=p+L|0,K=(I=z+I|0)>>>0<z>>>0?K+1|0:K,L=I,z=I=r(T,19),I=L+(T=eg(I,IA=I>>31,T,f))|0,L=p+K|0,L=I>>>0<T>>>0?L+1|0:L,K=(T=eg(s,w,_,l))+I|0,I=p+L|0,I=K>>>0<T>>>0?I+1|0:I,d=L=g<<1,T=eg(h,c,L,U=L>>31),L=p+I|0,L=(K=T+K|0)>>>0<T>>>0?L+1|0:L,I=K,K=eg(e,C,t,E),L=p+L|0,$=I=I+K|0,T=I>>>0<K>>>0?L+1|0:L,I=eg(s,w,z,IA),L=p,W=eg(o,Q,W,gA),K=p+L|0,K=(I=W+I|0)>>>0<W>>>0?K+1|0:K,W=eg(g,n,_,l),L=p+K|0,L=(I=W+I|0)>>>0<W>>>0?L+1|0:L,K=(W=eg(h,c,t,E))+I|0,I=p+L|0,I=K>>>0<W>>>0?I+1|0:I,W=eg(e,C,q,u),L=p+I|0,gA=K=W+K|0,W=K>>>0<W>>>0?L+1|0:L,I=eg(I=r(V,38),I>>31,V,k),L=p,V=I,K=eg(I=BA,K=I>>31,I,K),L=p+L|0,L=(I=V+K|0)>>>0<K>>>0?L+1|0:L,V=eg(z,IA,d,U),K=p+L|0,K=(I=V+I|0)>>>0<V>>>0?K+1|0:K,V=eg(t,E,_,l),L=p+K|0,L=(I=V+I|0)>>>0<V>>>0?L+1|0:L,K=(V=eg(h,c,D,y))+I|0,I=p+L|0,I=K>>>0<V>>>0?I+1|0:I,V=eg(a,B,e,C),L=p+I|0,z=K=V+K|0,IA=L=K>>>0<V>>>0?L+1|0:L,BA=I=K+33554432|0,x=L=I>>>0<33554432?L+1|0:L,K=(I=L>>26)+W|0,W=L=(V=(67108863&L)<<6|BA>>>26)+gA|0,L=L>>>0<V>>>0?K+1|0:K,gA=I=W+16777216|0,V=(33554431&(L=I>>>0<16777216?L+1|0:L))<<7|I>>>25,L=(L>>25)+T|0,L=(K=V+$|0)>>>0<V>>>0?L+1|0:L,T=K=(I=K)+33554432|0,V=L=K>>>0<33554432?L+1|0:L,L=-67108864&K,i[A+8>>2]=I-L,I=eg(D,y,N,k),L=p,K=eg(g,n,t,E),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(a,B,F,f),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(o,Q,O,m),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=($=eg(e,C,Y,G))+I|0,I=p+L|0,L=X>>26,X=(Z=(67108863&X)<<6|Z>>>26)+K|0,K=(I=K>>>0<$>>>0?I+1|0:I)+L|0,L=K=X>>>0<Z>>>0?K+1|0:K,Z=K=(I=X)+16777216|0,X=L=K>>>0<16777216?L+1|0:L,L=-33554432&K,i[A+28>>2]=I-L,I=eg(o,Q,j,H),K=p,L=(q=eg(a,B,q,u))+I|0,I=p+K|0,I=L>>>0<q>>>0?I+1|0:I,q=eg(F,f,_,l),K=p+I|0,K=(L=q+L|0)>>>0<q>>>0?K+1|0:K,I=(q=eg(h,c,s,w))+L|0,L=p+K|0,L=I>>>0<q>>>0?L+1|0:L,K=eg(e,C,g,n),L=p+L|0,L=(L=(I=K+I|0)>>>0<K>>>0?L+1|0:L)+(K=V>>26)|0,K=I=(V=(67108863&V)<<6|T>>>26)+I|0,I=L=I>>>0<V>>>0?L+1|0:L,T=L=K+16777216|0,V=I=L>>>0<16777216?I+1|0:I,I=-33554432&L,i[A+12>>2]=K-I,q=A,I=eg(F,f,D,y),L=p,K=eg(g,n,g,n),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(t,E,s,w),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(j=eg(a,B,S,b))+I|0,I=p+L|0,I=K>>>0<j>>>0?I+1|0:I,L=(j=eg(o,Q,Y,G))+K|0,K=p+I|0,K=L>>>0<j>>>0?K+1|0:K,I=(AA=eg(e,C,j=AA,$=j>>31))+L|0,L=p+K|0,L=I>>>0<AA>>>0?L+1|0:L,A=I,L=(I=X>>25)+L|0,L=(K=A+(X=(33554431&X)<<7|Z>>>25)|0)>>>0<X>>>0?L+1|0:L,AA=K=(I=K)+33554432|0,X=L=K>>>0<33554432?L+1|0:L,L=-67108864&K,i[q+32>>2]=I-L,L=V>>25,K=(V=(33554431&V)<<7|T>>>25)+(v-(I=-67108864&M)|0)|0,I=L+(P-((I>>>0>v>>>0)+R|0)|0)|0,L=I=K>>>0<V>>>0?I+1|0:I,V=I=K+33554432|0,I=((67108863&(L=I>>>0<33554432?L+1|0:L))<<6|I>>>26)+(QA=QA-(-33554432&J)|0)|0,i[q+20>>2]=I,I=-67108864&V,i[q+16>>2]=K-I,V=q,I=eg(t,E,F,f),K=p,L=(q=eg(N,k,d,U))+I|0,I=p+K|0,I=L>>>0<q>>>0?I+1|0:I,K=(q=eg(D,y,O,m))+L|0,L=p+I|0,L=K>>>0<q>>>0?L+1|0:L,I=(q=eg(a,B,Y,G))+K|0,K=p+L|0,K=I>>>0<q>>>0?K+1|0:K,q=eg(o,Q,j,$),L=p+K|0,K=I=q+I|0,L=(I=I>>>0<q>>>0?L+1|0:L)+(L=X>>26)|0,L=(K=(X=(67108863&X)<<6|AA>>>26)+K|0)>>>0<X>>>0?L+1|0:L,X=K,I=L,I=(L=K+16777216|0)>>>0<16777216?I+1|0:I,K=-33554432&L,i[V+36>>2]=X-K,q=eg((33554431&I)<<7|L>>>25,I>>25,19,0),L=p+(IA-(((K=-67108864&BA)>>>0>z>>>0)+x|0)|0)|0,K=I=q+(z-K|0)|0,I=I>>>0<q>>>0?L+1|0:L,I=(W-(-33554432&gA)|0)+((67108863&(I=(L=K+33554432|0)>>>0<33554432?I+1|0:I))<<6|L>>>26)|0,i[V+4>>2]=I,A=-67108864&L,i[V>>2]=K-A;}function Y(A,I,g){var B,Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0;for(h=B=h-2048|0,Yg(B+1024|0,I),QI(B+1024|0,A),Yg(B,B+1024|0),QI(B,g),I=0;n=i[(Q=f=(B+1024|0)+(64|(A=F<<7))|0)>>2],e=i[(E=t=(B+1024|0)+(96|A)|0)>>2],E=i[E+4>>2],a=n,w=i[Q+4>>2],o=e,Q=A+(B+1024|0)|0,r=i[(n=(B+1024|0)+(32|A)|0)>>2],e=i[n+4>>2],o=ug(o^(l=rI(i[Q>>2],i[Q+4>>2],r,e)),(C=E)^(E=p),32),e=ug(a=(s=rI(a,w,o,C=p))^r,e^(r=p),24),P=ug((m=rI(l,a=E,e,E=p))^o,(y=p)^C,16),E=ug(e^(R=rI(s,r,P,S=p)),(N=p)^E,63),e=p,o=i[(r=(B+1024|0)+(104|A)|0)>>2],s=i[r+4>>2],H=i[(C=l=(B+1024|0)+(72|A)|0)>>2],c=i[C+4>>2],G=ug((G=o)^(k=rI(u=i[(C=o=(B+1024|0)+(8|A)|0)>>2],w=i[C+4>>2],U=i[(C=(B+1024|0)+(40|A)|0)>>2],a=i[C+4>>2])),(w=s)^(s=p),32),a=ug(c=(u=rI(H,c,G,w=p))^U,a^(U=p),24),V=ug((M=rI(k,c=s,a,s=p))^G,(J=p)^w,16),s=ug(a^(O=rI(u,U,V,j=p)),(z=p)^s,63),a=p,G=i[(k=U=(B+1024|0)+(112|A)|0)>>2],u=i[k+4>>2],v=i[(k=(B+1024|0)+(80|A)|0)>>2],D=i[k+4>>2],H=G,G=(B+1024|0)+(16|A)|0,Y=i[(b=w=(B+1024|0)+(48|A)|0)>>2],b=i[b+4>>2],H=ug(H^(d=rI(i[G>>2],i[G+4>>2],Y,b)),(c=u)^(u=p),32),b=ug(D=(c=rI(v,D,H,_=p))^Y,b^(Y=p),24),IA=ug(($=rI(d,D=u,b,u=p))^H,(AA=p)^_,16),u=ug(b^(W=rI(c,Y,IA,gA=p)),(q=p)^u,63),b=p,H=i[(Y=(B+1024|0)+(120|A)|0)>>2],_=i[Y+4>>2],BA=i[(c=d=(B+1024|0)+(88|A)|0)>>2],X=i[c+4>>2],L=ug((v=H)^(T=rI(Z=i[(c=H=(B+1024|0)+(24|A)|0)>>2],D=i[c+4>>2],x=i[(A=(B+1024|0)+(56|A)|0)>>2],c=i[A+4>>2])),(D=_)^(_=p),32),c=ug(D=(X=rI(BA,X,L,K=p))^x,c^(x=p),24),v=x,L=ug((x=rI(T,D=_,c,_=p))^L,(T=p)^K,16),_=ug(c^(X=rI(X,v,L,K=p)),(Z=p)^_,63),c=p,v=W,D=q,W=ug(L^(m=rI(m,y,s,a)),K^(y=p),32),s=ug((L=rI(v,D,W,q=p))^s,(K=p)^a,24),a=rI(a=m,y,s,m=p),y=p,i[Q>>2]=a,i[Q+4>>2]=y,Q=ug(a^W,q^y,16),a=p,i[Y>>2]=Q,i[Y+4>>2]=a,Q=rI(L,K,Q,a),a=p,i[k>>2]=Q,i[k+4>>2]=a,QA=C,CA=ug(Q^s,a^m,63),i[QA>>2]=CA,i[C+4>>2]=p,y=u,a=ug(P^(C=rI(M,J,u,b)),S^(s=p),32),Q=ug(y^(u=rI(X,Z,a,k=p)),(Q=b)^(b=p),24),C=rI(C,y=s,Q,s=p),Y=p,i[o>>2]=C,i[o+4>>2]=Y,o=ug(C^a,k^Y,16),C=p,i[t>>2]=o,i[t+4>>2]=C,t=rI(u,b,o,C),i[d>>2]=t,o=p,i[d+4>>2]=o,QA=w,CA=ug(Q^t,o^s,63),i[QA>>2]=CA,i[w+4>>2]=p,Q=rI($,AA,_,c),a=rI(R,N,C=ug(V^Q,j^(o=p),32),s=p),Q=rI(Q,w=o,t=ug(a^_,(k=p)^c,24),o=p),u=w=p,i[G>>2]=Q,i[G+4>>2]=u,Q=ug(Q^C,s^u,16),C=p,i[r>>2]=Q,i[r+4>>2]=C,Q=rI(a,k,Q,C),i[f>>2]=Q,C=f,f=p,i[C+4>>2]=f,QA=A,CA=ug(Q^t,f^o,63),i[QA>>2]=CA,i[A+4>>2]=p,C=E,Q=ug(IA^(f=rI(x,T,E,e)),gA^(t=p),32),A=ug(C^(r=rI(O,z,Q,E=p)),(A=e)^(e=p),24),f=rI(f,C=t,A,t=p),C=o=p,i[H>>2]=f,i[H+4>>2]=C,f=ug(Q^f,E^C,16),Q=p,i[U>>2]=f,i[U+4>>2]=Q,f=rI(r,e,f,Q),i[l>>2]=f,Q=p,i[l+4>>2]=Q,QA=n,CA=ug(A^f,Q^t,63),i[QA>>2]=CA,i[n+4>>2]=p,8!=(0|(F=F+1|0)););for(;F=i[768+(A=(t=I<<4)+(B+1024|0)|0)>>2],f=i[A+772>>2],a=i[(Q=A+512|0)>>2],o=i[Q+4>>2],C=F,F=i[A+256>>2],Q=i[A+260>>2],E=ug(C^(n=rI(i[A>>2],i[A+4>>2],F,Q)),(E=f)^(f=p),32),Q=ug(C=(r=rI(a,o,E,e=p))^F,Q^(F=p),24),w=F,s=ug((o=rI(n,f,Q,F=p))^E,(C=p)^e,16),F=ug(Q^(U=rI(r,w,s,a=p)),(k=p)^F,63),f=p,Q=i[A+780>>2],u=i[A+520>>2],y=i[A+524>>2],r=ug((G=i[A+776>>2])^(e=rI(w=i[(n=t=(B+1024|0)+(8|t)|0)>>2],e=i[n+4>>2],n=i[A+264>>2],E=i[A+268>>2])),(w=Q)^(Q=p),32),E=ug(w=(G=rI(u,y,r,l=p))^n,E^(n=p),24),y=G,u=ug((G=rI(e,w=Q,E,Q=p))^r,(w=p)^l,16),Q=ug(E^(Y=rI(y,n,u,b=p)),(d=p)^Q,63),n=p,E=i[A+900>>2],D=i[A+640>>2],m=i[A+644>>2],c=i[A+896>>2],e=i[A+384>>2],r=i[A+388>>2],H=ug(c^(l=rI(i[A+128>>2],i[A+132>>2],e,r)),(y=E)^(E=p),32),r=ug(y=(c=rI(D,m,H,_=p))^e,r^(e=p),24),D=c,c=ug((c=H)^(H=rI(l,y=E,r,E=p)),(y=_)^(_=p),16),E=ug(r^(y=rI(D,e,c,m=p)),(P=p)^E,63),e=p,r=i[A+908>>2],q=i[A+648>>2],j=i[A+652>>2],v=i[A+904>>2],l=i[A+392>>2],S=i[A+396>>2],N=ug(v^(R=rI(i[A+136>>2],i[A+140>>2],l,S)),(D=r)^(r=p),32),v=S=ug(D=(J=rI(q,j,N,M=p))^l,S^(l=p),24),N=ug((S=rI(R,D=r,S,r=p))^N,(R=p)^M,16),r=ug(v^(J=rI(J,l,N,M=p)),(V=p)^r,63),l=p,v=y,D=P,y=ug(N^(o=rI(o,C,Q,n)),M^(C=p),32),Q=ug((N=rI(v,D,y,P=p))^Q,(M=p)^n,24),n=rI(n=o,C,Q,o=p),C=p,i[A>>2]=n,i[A+4>>2]=C,n=ug(n^y,P^C,16),C=p,i[A+904>>2]=n,i[A+908>>2]=C,n=rI(N,M,n,C),C=p,i[A+640>>2]=n,i[A+644>>2]=C,QA=A,CA=ug(Q^n,o^C,63),i[QA+264>>2]=CA,i[A+268>>2]=p,y=E,n=rI(G,w,E,e),s=rI(J,V,o=ug(s^n,a^(E=p),32),C=p),n=rI(n,a=E,Q=ug(y^s,(Q=e)^(e=p),24),E=p),a=p,i[t>>2]=n,i[t+4>>2]=a,t=ug(n^o,C^a,16),n=p,i[A+768>>2]=t,i[A+772>>2]=n,t=rI(s,e,t,n),i[A+648>>2]=t,n=p,i[A+652>>2]=n,QA=A,CA=ug(Q^t,n^E,63),i[QA+384>>2]=CA,i[A+388>>2]=p,o=r,E=ug(u^(Q=rI(H,_,r,l)),b^(n=p),32),t=ug(o^(r=rI(U,k,E,e=p)),(C=l)^(l=p),24),Q=rI(Q,C=n,t,n=p),C=o=p,i[A+128>>2]=Q,i[A+132>>2]=C,Q=ug(Q^E,C^e,16),E=p,i[A+776>>2]=Q,i[A+780>>2]=E,Q=rI(r,l,Q,E),i[A+512>>2]=Q,E=p,i[A+516>>2]=E,QA=A,CA=ug(Q^t,n^E,63),i[QA+392>>2]=CA,i[A+396>>2]=p,t=rI(S,R,F,f),e=rI(Y,d,n=ug(c^t,m^(Q=p),32),E=p),f=rI(C=t,Q,F=ug(e^F,(r=p)^f,24),t=p),Q=p,i[A+136>>2]=f,i[A+140>>2]=Q,f=ug(n^f,E^Q,16),Q=p,i[A+896>>2]=f,i[A+900>>2]=Q,f=rI(e,r,f,Q),i[A+520>>2]=f,Q=p,i[A+524>>2]=Q,QA=A,CA=ug(f^F,Q^t,63),i[QA+256>>2]=CA,i[A+260>>2]=p,8!=(0|(I=I+1|0)););Yg(g,B),QI(g,B+1024|0),h=B+2048|0;}function b(A,I,g){var B,Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0;for(h=B=h-2048|0,Yg(B+1024|0,I),QI(B+1024|0,A),Yg(B,B+1024|0),I=0;n=i[(Q=f=(B+1024|0)+(64|(A=F<<7))|0)>>2],e=i[(E=t=(B+1024|0)+(96|A)|0)>>2],E=i[E+4>>2],a=n,w=i[Q+4>>2],o=e,Q=A+(B+1024|0)|0,r=i[(n=(B+1024|0)+(32|A)|0)>>2],e=i[n+4>>2],o=ug(o^(l=rI(i[Q>>2],i[Q+4>>2],r,e)),(C=E)^(E=p),32),e=ug(a=(s=rI(a,w,o,C=p))^r,e^(r=p),24),P=ug((m=rI(l,a=E,e,E=p))^o,(y=p)^C,16),E=ug(e^(R=rI(s,r,P,S=p)),(N=p)^E,63),e=p,o=i[(r=(B+1024|0)+(104|A)|0)>>2],s=i[r+4>>2],H=i[(C=l=(B+1024|0)+(72|A)|0)>>2],c=i[C+4>>2],G=ug((G=o)^(k=rI(u=i[(C=o=(B+1024|0)+(8|A)|0)>>2],w=i[C+4>>2],U=i[(C=(B+1024|0)+(40|A)|0)>>2],a=i[C+4>>2])),(w=s)^(s=p),32),a=ug(c=(u=rI(H,c,G,w=p))^U,a^(U=p),24),V=ug((M=rI(k,c=s,a,s=p))^G,(J=p)^w,16),s=ug(a^(O=rI(u,U,V,j=p)),(z=p)^s,63),a=p,G=i[(k=U=(B+1024|0)+(112|A)|0)>>2],u=i[k+4>>2],v=i[(k=(B+1024|0)+(80|A)|0)>>2],D=i[k+4>>2],H=G,G=(B+1024|0)+(16|A)|0,Y=i[(b=w=(B+1024|0)+(48|A)|0)>>2],b=i[b+4>>2],H=ug(H^(d=rI(i[G>>2],i[G+4>>2],Y,b)),(c=u)^(u=p),32),b=ug(D=(c=rI(v,D,H,_=p))^Y,b^(Y=p),24),IA=ug(($=rI(d,D=u,b,u=p))^H,(AA=p)^_,16),u=ug(b^(W=rI(c,Y,IA,gA=p)),(q=p)^u,63),b=p,H=i[(Y=(B+1024|0)+(120|A)|0)>>2],_=i[Y+4>>2],BA=i[(c=d=(B+1024|0)+(88|A)|0)>>2],X=i[c+4>>2],L=ug((v=H)^(T=rI(Z=i[(c=H=(B+1024|0)+(24|A)|0)>>2],D=i[c+4>>2],x=i[(A=(B+1024|0)+(56|A)|0)>>2],c=i[A+4>>2])),(D=_)^(_=p),32),c=ug(D=(X=rI(BA,X,L,K=p))^x,c^(x=p),24),v=x,L=ug((x=rI(T,D=_,c,_=p))^L,(T=p)^K,16),_=ug(c^(X=rI(X,v,L,K=p)),(Z=p)^_,63),c=p,v=W,D=q,W=ug(L^(m=rI(m,y,s,a)),K^(y=p),32),s=ug((L=rI(v,D,W,q=p))^s,(K=p)^a,24),a=rI(a=m,y,s,m=p),y=p,i[Q>>2]=a,i[Q+4>>2]=y,Q=ug(a^W,q^y,16),a=p,i[Y>>2]=Q,i[Y+4>>2]=a,Q=rI(L,K,Q,a),a=p,i[k>>2]=Q,i[k+4>>2]=a,QA=C,CA=ug(Q^s,a^m,63),i[QA>>2]=CA,i[C+4>>2]=p,y=u,a=ug(P^(C=rI(M,J,u,b)),S^(s=p),32),Q=ug(y^(u=rI(X,Z,a,k=p)),(Q=b)^(b=p),24),C=rI(C,y=s,Q,s=p),Y=p,i[o>>2]=C,i[o+4>>2]=Y,o=ug(C^a,k^Y,16),C=p,i[t>>2]=o,i[t+4>>2]=C,t=rI(u,b,o,C),i[d>>2]=t,o=p,i[d+4>>2]=o,QA=w,CA=ug(Q^t,o^s,63),i[QA>>2]=CA,i[w+4>>2]=p,Q=rI($,AA,_,c),a=rI(R,N,C=ug(V^Q,j^(o=p),32),s=p),Q=rI(Q,w=o,t=ug(a^_,(k=p)^c,24),o=p),u=w=p,i[G>>2]=Q,i[G+4>>2]=u,Q=ug(Q^C,s^u,16),C=p,i[r>>2]=Q,i[r+4>>2]=C,Q=rI(a,k,Q,C),i[f>>2]=Q,C=f,f=p,i[C+4>>2]=f,QA=A,CA=ug(Q^t,f^o,63),i[QA>>2]=CA,i[A+4>>2]=p,C=E,Q=ug(IA^(f=rI(x,T,E,e)),gA^(t=p),32),A=ug(C^(r=rI(O,z,Q,E=p)),(A=e)^(e=p),24),f=rI(f,C=t,A,t=p),C=o=p,i[H>>2]=f,i[H+4>>2]=C,f=ug(Q^f,E^C,16),Q=p,i[U>>2]=f,i[U+4>>2]=Q,f=rI(r,e,f,Q),i[l>>2]=f,Q=p,i[l+4>>2]=Q,QA=n,CA=ug(A^f,Q^t,63),i[QA>>2]=CA,i[n+4>>2]=p,8!=(0|(F=F+1|0)););for(;F=i[768+(A=(t=I<<4)+(B+1024|0)|0)>>2],f=i[A+772>>2],a=i[(Q=A+512|0)>>2],o=i[Q+4>>2],C=F,F=i[A+256>>2],Q=i[A+260>>2],E=ug(C^(n=rI(i[A>>2],i[A+4>>2],F,Q)),(E=f)^(f=p),32),Q=ug(C=(r=rI(a,o,E,e=p))^F,Q^(F=p),24),w=F,s=ug((o=rI(n,f,Q,F=p))^E,(C=p)^e,16),F=ug(Q^(U=rI(r,w,s,a=p)),(k=p)^F,63),f=p,Q=i[A+780>>2],u=i[A+520>>2],y=i[A+524>>2],r=ug((G=i[A+776>>2])^(e=rI(w=i[(n=t=(B+1024|0)+(8|t)|0)>>2],e=i[n+4>>2],n=i[A+264>>2],E=i[A+268>>2])),(w=Q)^(Q=p),32),E=ug(w=(G=rI(u,y,r,l=p))^n,E^(n=p),24),y=G,u=ug((G=rI(e,w=Q,E,Q=p))^r,(w=p)^l,16),Q=ug(E^(Y=rI(y,n,u,b=p)),(d=p)^Q,63),n=p,E=i[A+900>>2],D=i[A+640>>2],m=i[A+644>>2],c=i[A+896>>2],e=i[A+384>>2],r=i[A+388>>2],H=ug(c^(l=rI(i[A+128>>2],i[A+132>>2],e,r)),(y=E)^(E=p),32),r=ug(y=(c=rI(D,m,H,_=p))^e,r^(e=p),24),D=c,c=ug((c=H)^(H=rI(l,y=E,r,E=p)),(y=_)^(_=p),16),E=ug(r^(y=rI(D,e,c,m=p)),(P=p)^E,63),e=p,r=i[A+908>>2],q=i[A+648>>2],j=i[A+652>>2],v=i[A+904>>2],l=i[A+392>>2],S=i[A+396>>2],N=ug(v^(R=rI(i[A+136>>2],i[A+140>>2],l,S)),(D=r)^(r=p),32),v=S=ug(D=(J=rI(q,j,N,M=p))^l,S^(l=p),24),N=ug((S=rI(R,D=r,S,r=p))^N,(R=p)^M,16),r=ug(v^(J=rI(J,l,N,M=p)),(V=p)^r,63),l=p,v=y,D=P,y=ug(N^(o=rI(o,C,Q,n)),M^(C=p),32),Q=ug((N=rI(v,D,y,P=p))^Q,(M=p)^n,24),n=rI(n=o,C,Q,o=p),C=p,i[A>>2]=n,i[A+4>>2]=C,n=ug(n^y,P^C,16),C=p,i[A+904>>2]=n,i[A+908>>2]=C,n=rI(N,M,n,C),C=p,i[A+640>>2]=n,i[A+644>>2]=C,QA=A,CA=ug(Q^n,o^C,63),i[QA+264>>2]=CA,i[A+268>>2]=p,y=E,n=rI(G,w,E,e),s=rI(J,V,o=ug(s^n,a^(E=p),32),C=p),n=rI(n,a=E,Q=ug(y^s,(Q=e)^(e=p),24),E=p),a=p,i[t>>2]=n,i[t+4>>2]=a,t=ug(n^o,C^a,16),n=p,i[A+768>>2]=t,i[A+772>>2]=n,t=rI(s,e,t,n),i[A+648>>2]=t,n=p,i[A+652>>2]=n,QA=A,CA=ug(Q^t,n^E,63),i[QA+384>>2]=CA,i[A+388>>2]=p,o=r,E=ug(u^(Q=rI(H,_,r,l)),b^(n=p),32),t=ug(o^(r=rI(U,k,E,e=p)),(C=l)^(l=p),24),Q=rI(Q,C=n,t,n=p),C=o=p,i[A+128>>2]=Q,i[A+132>>2]=C,Q=ug(Q^E,C^e,16),E=p,i[A+776>>2]=Q,i[A+780>>2]=E,Q=rI(r,l,Q,E),i[A+512>>2]=Q,E=p,i[A+516>>2]=E,QA=A,CA=ug(Q^t,n^E,63),i[QA+392>>2]=CA,i[A+396>>2]=p,t=rI(S,R,F,f),e=rI(Y,d,n=ug(c^t,m^(Q=p),32),E=p),f=rI(C=t,Q,F=ug(e^F,(r=p)^f,24),t=p),Q=p,i[A+136>>2]=f,i[A+140>>2]=Q,f=ug(n^f,E^Q,16),Q=p,i[A+896>>2]=f,i[A+900>>2]=Q,f=rI(e,r,f,Q),i[A+520>>2]=f,Q=p,i[A+524>>2]=Q,QA=A,CA=ug(f^F,Q^t,63),i[QA+256>>2]=CA,i[A+260>>2]=p,8!=(0|(I=I+1|0)););Yg(g,B),QI(g,B+1024|0),h=B+2048|0;}function m(A){var I=0,g=0,B=0,Q=0,C=0,E=0,n=0,r=0,o=0;A:if(A|=0){C=(B=A-8|0)+(A=-8&(I=i[A-4>>2]))|0;I:if(!(1&I)){if(!(3&I))break A;if((B=B-(I=i[B>>2])|0)>>>0<a[8965])break A;if(A=A+I|0,i[8966]==(0|B)){if(3==(3&(I=i[C+4>>2])))return i[8963]=A,i[C+4>>2]=-2&I,i[B+4>>2]=1|A,void(i[A+B>>2]=A)}else {if(I>>>0<=255){if(Q=i[B+8>>2],I=I>>>3|0,(0|(g=i[B+12>>2]))==(0|Q)){r=35844,o=i[8961]&vI(-2,I),i[r>>2]=o;break I}i[Q+12>>2]=g,i[g+8>>2]=Q;break I}if(n=i[B+24>>2],(0|B)==(0|(I=i[B+12>>2])))if((g=i[(Q=B+20|0)>>2])||(g=i[(Q=B+16|0)>>2])){for(;E=Q,(g=i[(Q=(I=g)+20|0)>>2])||(Q=I+16|0,g=i[I+16>>2]););i[E>>2]=0;}else I=0;else g=i[B+8>>2],i[g+12>>2]=I,i[I+8>>2]=g;if(!n)break I;Q=i[B+28>>2];g:{if(i[(g=36148+(Q<<2)|0)>>2]==(0|B)){if(i[g>>2]=I,I)break g;r=35848,o=i[8962]&vI(-2,Q),i[r>>2]=o;break I}if(i[n+(i[n+16>>2]==(0|B)?16:20)>>2]=I,!I)break I}if(i[I+24>>2]=n,(g=i[B+16>>2])&&(i[I+16>>2]=g,i[g+24>>2]=I),!(g=i[B+20>>2]))break I;i[I+20>>2]=g,i[g+24>>2]=I;}}if(!(B>>>0>=C>>>0)&&1&(I=i[C+4>>2])){I:{if(!(2&I)){if(i[8967]==(0|C)){if(i[8967]=B,A=i[8964]+A|0,i[8964]=A,i[B+4>>2]=1|A,i[8966]!=(0|B))break A;return i[8963]=0,void(i[8966]=0)}if(i[8966]==(0|C))return i[8966]=B,A=i[8963]+A|0,i[8963]=A,i[B+4>>2]=1|A,void(i[A+B>>2]=A);A=(-8&I)+A|0;g:if(I>>>0<=255){if(I=I>>>3|0,(0|(g=i[C+8>>2]))==(0|(Q=i[C+12>>2]))){r=35844,o=i[8961]&vI(-2,I),i[r>>2]=o;break g}i[g+12>>2]=Q,i[Q+8>>2]=g;}else {if(n=i[C+24>>2],(0|C)==(0|(I=i[C+12>>2])))if((g=i[(Q=C+20|0)>>2])||(g=i[(Q=C+16|0)>>2])){for(;E=Q,(g=i[(Q=(I=g)+20|0)>>2])||(Q=I+16|0,g=i[I+16>>2]););i[E>>2]=0;}else I=0;else g=i[C+8>>2],i[g+12>>2]=I,i[I+8>>2]=g;if(n){Q=i[C+28>>2];B:{if(i[(g=36148+(Q<<2)|0)>>2]==(0|C)){if(i[g>>2]=I,I)break B;r=35848,o=i[8962]&vI(-2,Q),i[r>>2]=o;break g}if(i[n+(i[n+16>>2]==(0|C)?16:20)>>2]=I,!I)break g}i[I+24>>2]=n,(g=i[C+16>>2])&&(i[I+16>>2]=g,i[g+24>>2]=I),(g=i[C+20>>2])&&(i[I+20>>2]=g,i[g+24>>2]=I);}}if(i[B+4>>2]=1|A,i[A+B>>2]=A,i[8966]!=(0|B))break I;return void(i[8963]=A)}i[C+4>>2]=-2&I,i[B+4>>2]=1|A,i[A+B>>2]=A;}if(A>>>0<=255)return I=35884+((A=A>>>3|0)<<3)|0,(g=i[8961])&(A=1<<A)?A=i[I+8>>2]:(i[8961]=A|g,A=I),i[I+8>>2]=B,i[A+12>>2]=B,i[B+12>>2]=I,void(i[B+8>>2]=A);Q=31,i[B+16>>2]=0,i[B+20>>2]=0,A>>>0<=16777215&&(I=A>>>8|0,I<<=E=I+1048320>>>16&8,Q=28+((I=((I<<=Q=I+520192>>>16&4)<<(g=I+245760>>>16&2)>>>15|0)-(g|Q|E)|0)<<1|A>>>I+21&1)|0),i[B+28>>2]=Q,E=36148+(Q<<2)|0;I:{g:{if((g=i[8962])&(I=1<<Q)){for(Q=A<<(31==(0|Q)?0:25-(Q>>>1|0)|0),I=i[E>>2];;){if(g=I,(-8&i[I+4>>2])==(0|A))break g;if(I=Q>>>29|0,Q<<=1,!(I=i[16+(E=g+(4&I)|0)>>2]))break}i[E+16>>2]=B,i[B+24>>2]=g;}else i[8962]=I|g,i[E>>2]=B,i[B+24>>2]=E;i[B+12>>2]=B,i[B+8>>2]=B;break I}A=i[g+8>>2],i[A+12>>2]=B,i[g+8>>2]=B,i[B+24>>2]=0,i[B+12>>2]=g,i[B+8>>2]=A;}A=i[8969]-1|0,i[8969]=A||-1;}}}function v(A,I){var g,B=0,Q=0,C=0,E=0,n=0,a=0,r=0;g=A+I|0;A:{I:if(!(1&(B=i[A+4>>2]))){if(!(3&B))break A;if(I=(B=i[A>>2])+I|0,(0|(A=A-B|0))==i[8966]){if(3==(3&(B=i[g+4>>2])))return i[8963]=I,i[g+4>>2]=-2&B,i[A+4>>2]=1|I,void(i[g>>2]=I)}else {if(B>>>0<=255){if(C=i[A+8>>2],B=B>>>3|0,(0|(Q=i[A+12>>2]))==(0|C)){a=35844,r=i[8961]&vI(-2,B),i[a>>2]=r;break I}i[C+12>>2]=Q,i[Q+8>>2]=C;break I}if(n=i[A+24>>2],(0|(B=i[A+12>>2]))==(0|A))if((Q=i[(C=A+20|0)>>2])||(Q=i[(C=A+16|0)>>2])){for(;E=C,(Q=i[(C=(B=Q)+20|0)>>2])||(C=B+16|0,Q=i[B+16>>2]););i[E>>2]=0;}else B=0;else Q=i[A+8>>2],i[Q+12>>2]=B,i[B+8>>2]=Q;if(!n)break I;C=i[A+28>>2];g:{if(i[(Q=36148+(C<<2)|0)>>2]==(0|A)){if(i[Q>>2]=B,B)break g;a=35848,r=i[8962]&vI(-2,C),i[a>>2]=r;break I}if(i[n+(i[n+16>>2]==(0|A)?16:20)>>2]=B,!B)break I}if(i[B+24>>2]=n,(Q=i[A+16>>2])&&(i[B+16>>2]=Q,i[Q+24>>2]=B),!(Q=i[A+20>>2]))break I;i[B+20>>2]=Q,i[Q+24>>2]=B;}}I:{if(!(2&(B=i[g+4>>2]))){if(i[8967]==(0|g)){if(i[8967]=A,I=i[8964]+I|0,i[8964]=I,i[A+4>>2]=1|I,i[8966]!=(0|A))break A;return i[8963]=0,void(i[8966]=0)}if(i[8966]==(0|g))return i[8966]=A,I=i[8963]+I|0,i[8963]=I,i[A+4>>2]=1|I,void(i[A+I>>2]=I);I=(-8&B)+I|0;g:if(B>>>0<=255){if(C=i[g+8>>2],B=B>>>3|0,(0|(Q=i[g+12>>2]))==(0|C)){a=35844,r=i[8961]&vI(-2,B),i[a>>2]=r;break g}i[C+12>>2]=Q,i[Q+8>>2]=C;}else {if(n=i[g+24>>2],(0|g)==(0|(B=i[g+12>>2])))if((C=i[(Q=g+20|0)>>2])||(C=i[(Q=g+16|0)>>2])){for(;E=Q,(C=i[(Q=(B=C)+20|0)>>2])||(Q=B+16|0,C=i[B+16>>2]););i[E>>2]=0;}else B=0;else Q=i[g+8>>2],i[Q+12>>2]=B,i[B+8>>2]=Q;if(n){C=i[g+28>>2];B:{if(i[(Q=36148+(C<<2)|0)>>2]==(0|g)){if(i[Q>>2]=B,B)break B;a=35848,r=i[8962]&vI(-2,C),i[a>>2]=r;break g}if(i[n+(i[n+16>>2]==(0|g)?16:20)>>2]=B,!B)break g}i[B+24>>2]=n,(Q=i[g+16>>2])&&(i[B+16>>2]=Q,i[Q+24>>2]=B),(Q=i[g+20>>2])&&(i[B+20>>2]=Q,i[Q+24>>2]=B);}}if(i[A+4>>2]=1|I,i[A+I>>2]=I,i[8966]!=(0|A))break I;return void(i[8963]=I)}i[g+4>>2]=-2&B,i[A+4>>2]=1|I,i[A+I>>2]=I;}if(I>>>0<=255)return B=35884+((I=I>>>3|0)<<3)|0,(Q=i[8961])&(I=1<<I)?I=i[B+8>>2]:(i[8961]=I|Q,I=B),i[B+8>>2]=A,i[I+12>>2]=A,i[A+12>>2]=B,void(i[A+8>>2]=I);C=31,i[A+16>>2]=0,i[A+20>>2]=0,I>>>0<=16777215&&(B=I>>>8|0,B<<=E=B+1048320>>>16&8,C=28+((B=((B<<=C=B+520192>>>16&4)<<(Q=B+245760>>>16&2)>>>15|0)-(Q|C|E)|0)<<1|I>>>B+21&1)|0),i[A+28>>2]=C,E=36148+(C<<2)|0;I:{if((Q=i[8962])&(B=1<<C)){for(C=I<<(31==(0|C)?0:25-(C>>>1|0)|0),B=i[E>>2];;){if(Q=B,(-8&i[B+4>>2])==(0|I))break I;if(B=C>>>29|0,C<<=1,!(B=i[16+(E=Q+(4&B)|0)>>2]))break}i[E+16>>2]=A,i[A+24>>2]=Q;}else i[8962]=B|Q,i[E>>2]=A,i[A+24>>2]=E;return i[A+12>>2]=A,void(i[A+8>>2]=A)}I=i[Q+8>>2],i[I+12>>2]=A,i[Q+8>>2]=A,i[A+24>>2]=0,i[A+12>>2]=Q,i[A+8>>2]=I;}}function U(A,I,g,B,Q){var E,a,r,o,e,t,f,c,y,s,w,D,u,p,l,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0;for(h=E=h+-64|0,a=i[A+60>>2],r=i[A+56>>2],K=i[A+52>>2],x=i[A+48>>2],o=i[A+44>>2],e=i[A+40>>2],t=i[A+36>>2],f=i[A+32>>2],c=i[A+28>>2],y=i[A+24>>2],s=i[A+20>>2],w=i[A+16>>2],D=i[A+12>>2],u=i[A+8>>2],p=i[A+4>>2],l=i[A>>2];;){if(!Q&B>>>0>63|Q)k=g;else {if(_=0,k=F=EA(E,0,64),B|Q)for(;C[F+_|0]=n[I+_|0],!Q&(_=_+1|0)>>>0<B>>>0|Q;);I=k,V=g;}for(q=20,m=l,v=p,U=u,S=D,_=w,F=s,g=y,N=c,H=f,Y=t,M=e,d=a,P=r,G=K,R=x,L=o;b=_,m=Hg((_=_+m|0)^R,16),R=Hg(b^(H=m+H|0),12),b=H,H=Hg((H=m)^(m=_+R|0),8),_=Hg(R^(J=b+H|0),7),b=F,v=Hg((F=F+v|0)^G,16),G=Hg(b^(Y=v+Y|0),12),b=Y,Y=Hg((Y=v)^(v=F+G|0),8),F=Hg(G^(X=b+Y|0),7),G=g,U=Hg((g=g+U|0)^P,16),b=P=Hg(G^(M=U+M|0),12),P=Hg((G=U)^(U=g+P|0),8),g=Hg(b^(M=P+M|0),7),G=N,S=Hg((N=N+S|0)^d,16),L=G=Hg(G^(d=S+L|0),12),b=d,d=Hg((d=S)^(S=N+G|0),8),N=Hg(L^(G=b+d|0),7),b=M,M=Hg((m=F+m|0)^d,16),F=Hg((R=b+M|0)^F,12),d=Hg(M^(m=F+m|0),8),F=Hg(F^(M=R+d|0),7),H=Hg((v=g+v|0)^H,16),g=Hg((G=H+G|0)^g,12),R=Hg(H^(v=g+v|0),8),g=Hg(g^(L=G+R|0),7),H=Hg((U=N+U|0)^Y,16),N=Hg((Y=H+J|0)^N,12),G=Hg(H^(U=N+U|0),8),N=Hg(N^(H=Y+G|0),7),Y=Hg((S=_+S|0)^P,16),_=Hg((J=Y+X|0)^_,12),P=Hg(Y^(S=_+S|0),8),_=Hg(_^(Y=J+P|0),7),q=q-2|0;);if(q=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,J=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,X=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,W=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,T=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,j=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,Z=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,O=n[I+32|0]|n[I+33|0]<<8|n[I+34|0]<<16|n[I+35|0]<<24,z=n[I+36|0]|n[I+37|0]<<8|n[I+38|0]<<16|n[I+39|0]<<24,$=n[I+40|0]|n[I+41|0]<<8|n[I+42|0]<<16|n[I+43|0]<<24,AA=n[I+44|0]|n[I+45|0]<<8|n[I+46|0]<<16|n[I+47|0]<<24,IA=n[I+48|0]|n[I+49|0]<<8|n[I+50|0]<<16|n[I+51|0]<<24,gA=n[I+52|0]|n[I+53|0]<<8|n[I+54|0]<<16|n[I+55|0]<<24,BA=n[I+56|0]|n[I+57|0]<<8|n[I+58|0]<<16|n[I+59|0]<<24,b=n[I+60|0]|n[I+61|0]<<8|n[I+62|0]<<16|n[I+63|0]<<24,xI(k,m+l^(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24)),xI(k+4|0,v+p^q),xI(k+8|0,U+u^J),xI(k+12|0,S+D^X),xI(k+16|0,_+w^W),xI(k+20|0,F+s^T),xI(k+24|0,g+y^j),xI(k+28|0,N+c^Z),xI(k+32|0,H+f^O),xI(k+36|0,Y+t^z),xI(k+40|0,$^M+e),xI(k+44|0,AA^L+o),xI(k+48|0,IA^R+x),xI(k+52|0,gA^G+K),xI(k+56|0,BA^P+r),xI(k+60|0,b^d+a),K=((x=(g=x)+1|0)>>>0<g>>>0)+K|0,!Q&B>>>0<=64){if(!(!B|!Q&B>>>0>63|0!=(0|Q)))for(F=0;C[F+V|0]=n[k+F|0],(0|B)!=(0|(F=F+1|0)););i[A+52>>2]=K,i[A+48>>2]=x,h=E- -64|0;break}I=I- -64|0,g=k- -64|0,Q=Q-1|0,Q=(B=B+-64|0)>>>0<4294967232?Q+1|0:Q;}}function S(A,I,g,B){var Q=0,C=0,E=0,a=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0;if(c=i[A+36>>2],a=i[A+32>>2],E=i[A+28>>2],C=i[A+24>>2],o=i[A+20>>2],!B&g>>>0>=16|B)for(H=!n[A+80|0]<<24,s=i[A+4>>2],Y=r(s,5),D=i[A+8>>2],_=r(D,5),G=i[A+12>>2],k=r(G,5),Q=i[A+16>>2],u=r(Q,5),b=Q,w=i[A>>2];Q=eg(e=((n[I+3|0]|n[I+4|0]<<8|n[I+5|0]<<16|n[I+6|0]<<24)>>>2&67108863)+C|0,0,G,0),t=p,C=(y=eg(o=(67108863&(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24))+o|0,0,b,0))+Q|0,Q=p+t|0,Q=C>>>0<y>>>0?Q+1|0:Q,f=C,C=eg(t=((n[I+6|0]|n[I+7|0]<<8|n[I+8|0]<<16|n[I+9|0]<<24)>>>4&67108863)+E|0,0,D,0),Q=p+Q|0,Q=C>>>0>(E=f+C|0)>>>0?Q+1|0:Q,C=E,E=eg(y=((n[I+9|0]|n[I+10|0]<<8|n[I+11|0]<<16|n[I+12|0]<<24)>>>6|0)+a|0,0,s,0),Q=p+Q|0,Q=E>>>0>(a=C+E|0)>>>0?Q+1|0:Q,C=a,a=eg(h=c+H+((n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24)>>>8)|0,0,w,0),Q=p+Q|0,m=c=C+a|0,c=a>>>0>c>>>0?Q+1|0:Q,Q=eg(e,0,D,0),E=p,a=(C=eg(o,0,G,0))+Q|0,Q=p+E|0,Q=C>>>0>a>>>0?Q+1|0:Q,E=eg(t,0,s,0),Q=p+Q|0,Q=E>>>0>(a=E+a|0)>>>0?Q+1|0:Q,E=eg(y,0,w,0),Q=p+Q|0,Q=E>>>0>(a=E+a|0)>>>0?Q+1|0:Q,E=eg(h,0,u,0),Q=p+Q|0,v=a=E+a|0,a=E>>>0>a>>>0?Q+1|0:Q,Q=eg(e,0,s,0),C=p,E=(l=eg(o,0,D,0))+Q|0,Q=p+C|0,Q=E>>>0<l>>>0?Q+1|0:Q,C=eg(t,0,w,0),Q=p+Q|0,Q=C>>>0>(E=C+E|0)>>>0?Q+1|0:Q,C=eg(y,0,u,0),Q=p+Q|0,Q=C>>>0>(E=C+E|0)>>>0?Q+1|0:Q,C=eg(h,0,k,0),Q=p+Q|0,l=E=C+E|0,E=C>>>0>E>>>0?Q+1|0:Q,Q=eg(e,0,w,0),f=p,C=(F=eg(o,0,s,0))+Q|0,Q=p+f|0,Q=C>>>0<F>>>0?Q+1|0:Q,f=eg(t,0,u,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=eg(y,0,k,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=eg(h,0,_,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=C,C=Q,Q=eg(e,0,u,0),F=p,e=(o=eg(o,0,w,0))+Q|0,Q=p+F|0,Q=e>>>0<o>>>0?Q+1|0:Q,o=eg(t,0,k,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=eg(y,0,_,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=eg(h,0,Y,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=e,t=(67108863&Q)<<6|e>>>26,Q=C,t=(67108863&(Q=(e=t+f|0)>>>0<t>>>0?Q+1|0:Q))<<6|(C=e)>>>26,Q=E,Q=(C=t+l|0)>>>0<t>>>0?Q+1|0:Q,t=C,C=(67108863&Q)<<6|C>>>26,Q=a,y=E=C+v|0,E=(67108863&(Q=C>>>0>E>>>0?Q+1|0:Q))<<6|E>>>26,Q=c,c=a=E+m|0,C=(67108863&e)+((Q=r((67108863&(Q=E>>>0>a>>>0?Q+1|0:Q))<<6|a>>>26,5)+(67108863&o)|0)>>>26|0)|0,E=67108863&t,a=67108863&y,c&=67108863,o=67108863&Q,I=I+16|0,!(B=B-(g>>>0<16)|0)&(g=g-16|0)>>>0>15|B;);i[A+20>>2]=o,i[A+36>>2]=c,i[A+32>>2]=a,i[A+28>>2]=E,i[A+24>>2]=C;}function N(A,I,g){var B,Q,E,i,a=0,r=0,o=0,e=0,t=0;return h=E=h-160|0,mI(I,g,32,0),C[0|I]=248&n[0|I],C[I+31|0]=63&n[I+31|0]|64,CA(E,I),nI(A,E),r=n[(Q=g)+8|0]|n[Q+9|0]<<8|n[Q+10|0]<<16|n[Q+11|0]<<24,a=n[Q+12|0]|n[Q+13|0]<<8|n[Q+14|0]<<16|n[Q+15|0]<<24,o=n[Q+16|0]|n[Q+17|0]<<8|n[Q+18|0]<<16|n[Q+19|0]<<24,e=n[Q+20|0]|n[Q+21|0]<<8|n[Q+22|0]<<16|n[Q+23|0]<<24,t=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,g=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,B=I,i=n[Q+28|0]|n[Q+29|0]<<8|n[Q+30|0]<<16|n[Q+31|0]<<24,I=n[Q+24|0]|n[Q+25|0]<<8|n[Q+26|0]<<16|n[Q+27|0]<<24,C[B+24|0]=I,C[B+25|0]=I>>>8,C[B+26|0]=I>>>16,C[B+27|0]=I>>>24,C[B+28|0]=i,C[B+29|0]=i>>>8,C[B+30|0]=i>>>16,C[B+31|0]=i>>>24,C[B+16|0]=o,C[B+17|0]=o>>>8,C[B+18|0]=o>>>16,C[B+19|0]=o>>>24,C[B+20|0]=e,C[B+21|0]=e>>>8,C[B+22|0]=e>>>16,C[B+23|0]=e>>>24,C[B+8|0]=r,C[B+9|0]=r>>>8,C[B+10|0]=r>>>16,C[B+11|0]=r>>>24,C[B+12|0]=a,C[B+13|0]=a>>>8,C[B+14|0]=a>>>16,C[B+15|0]=a>>>24,C[0|B]=t,C[B+1|0]=t>>>8,C[B+2|0]=t>>>16,C[B+3|0]=t>>>24,C[B+4|0]=g,C[B+5|0]=g>>>8,C[B+6|0]=g>>>16,C[B+7|0]=g>>>24,o=n[(a=A)+8|0]|n[a+9|0]<<8|n[a+10|0]<<16|n[a+11|0]<<24,e=n[a+12|0]|n[a+13|0]<<8|n[a+14|0]<<16|n[a+15|0]<<24,t=n[a+16|0]|n[a+17|0]<<8|n[a+18|0]<<16|n[a+19|0]<<24,g=n[a+20|0]|n[a+21|0]<<8|n[a+22|0]<<16|n[a+23|0]<<24,I=n[0|a]|n[a+1|0]<<8|n[a+2|0]<<16|n[a+3|0]<<24,A=n[a+4|0]|n[a+5|0]<<8|n[a+6|0]<<16|n[a+7|0]<<24,r=n[a+28|0]|n[a+29|0]<<8|n[a+30|0]<<16|n[a+31|0]<<24,a=n[a+24|0]|n[a+25|0]<<8|n[a+26|0]<<16|n[a+27|0]<<24,C[B+56|0]=a,C[B+57|0]=a>>>8,C[B+58|0]=a>>>16,C[B+59|0]=a>>>24,C[B+60|0]=r,C[B+61|0]=r>>>8,C[B+62|0]=r>>>16,C[B+63|0]=r>>>24,C[B+48|0]=t,C[B+49|0]=t>>>8,C[B+50|0]=t>>>16,C[B+51|0]=t>>>24,C[B+52|0]=g,C[B+53|0]=g>>>8,C[B+54|0]=g>>>16,C[B+55|0]=g>>>24,C[B+40|0]=o,C[B+41|0]=o>>>8,C[B+42|0]=o>>>16,C[B+43|0]=o>>>24,C[B+44|0]=e,C[B+45|0]=e>>>8,C[B+46|0]=e>>>16,C[B+47|0]=e>>>24,C[B+32|0]=I,C[B+33|0]=I>>>8,C[B+34|0]=I>>>16,C[B+35|0]=I>>>24,C[B+36|0]=A,C[B+37|0]=A>>>8,C[B+38|0]=A>>>16,C[B+39|0]=A>>>24,h=E+160|0,0}function M(A,I,g){var B,Q=0,E=0,i=0;h=B=h+-64|0;A:{if(!(!g|g>>>0>=65)){if(Q=-1,!(n[A+80|0]|n[A+81|0]<<8|n[A+82|0]<<16|n[A+83|0]<<24|n[A+84|0]|n[A+85|0]<<8|n[A+86|0]<<16|n[A+87|0]<<24)){if(E=A,(Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)>>>0>=129){if(iA(A,128),l(A,i=A+96|0),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)-128|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,Q>>>0>=129)break A;X(i,A+224|0,Q),Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24;}iA(E,Q),n[A+356|0]&&(C[A+88|0]=255,C[A+89|0]=255,C[A+90|0]=255,C[A+91|0]=255,C[A+92|0]=255,C[A+93|0]=255,C[A+94|0]=255,C[A+95|0]=255),C[A+80|0]=255,C[A+81|0]=255,C[A+82|0]=255,C[A+83|0]=255,C[A+84|0]=255,C[A+85|0]=255,C[A+86|0]=255,C[A+87|0]=255,EA((Q=A+96|0)+(E=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)|0,0,256-E|0),l(A,Q),tI(B,n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24),tI(8|B,n[A+8|0]|n[A+9|0]<<8|n[A+10|0]<<16|n[A+11|0]<<24,n[A+12|0]|n[A+13|0]<<8|n[A+14|0]<<16|n[A+15|0]<<24),tI(B+16|0,n[A+16|0]|n[A+17|0]<<8|n[A+18|0]<<16|n[A+19|0]<<24,n[A+20|0]|n[A+21|0]<<8|n[A+22|0]<<16|n[A+23|0]<<24),tI(B+24|0,n[A+24|0]|n[A+25|0]<<8|n[A+26|0]<<16|n[A+27|0]<<24,n[A+28|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24),tI(B+32|0,n[A+32|0]|n[A+33|0]<<8|n[A+34|0]<<16|n[A+35|0]<<24,n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24),tI(B+40|0,n[A+40|0]|n[A+41|0]<<8|n[A+42|0]<<16|n[A+43|0]<<24,n[A+44|0]|n[A+45|0]<<8|n[A+46|0]<<16|n[A+47|0]<<24),tI(B+48|0,n[A+48|0]|n[A+49|0]<<8|n[A+50|0]<<16|n[A+51|0]<<24,n[A+52|0]|n[A+53|0]<<8|n[A+54|0]<<16|n[A+55|0]<<24),tI(B+56|0,n[A+56|0]|n[A+57|0]<<8|n[A+58|0]<<16|n[A+59|0]<<24,n[A+60|0]|n[A+61|0]<<8|n[A+62|0]<<16|n[A+63|0]<<24),X(I,B,g),fI(A,64),fI(Q,256),Q=0;}return h=B- -64|0,Q}OI(),e();}t(1854,1886,306,1931),e();}function d(A,I){var g,B,Q,C,E,a,r,o,e,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0;g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,u=HI(I+4|0),t=p,h=HI(I+7|0),c=p,D=HI(I+10|0),f=p,B=HI(I+13|0),s=p,y=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,Q=HI(I+20|0),l=p,C=HI(I+23|0),E=p,a=HI(I+26|0),r=p,o=HI(I+29|0),I=f<<3|D>>>29,F=f=D<<3,D=f=f+16777216|0,f=I=f>>>0<16777216?I+1|0:I,c=I=c<<5|h>>>27,e=w=h<<5,t=I=t<<6|(h=u)>>>26,u=I=16777216+(h<<=6)|0,w=I,I=(I=(t=I>>>0<16777216?t+1|0:t)>>25)+c|0,I=(t=e+(w=(33554431&t)<<7|w>>>25)|0)>>>0<w>>>0?I+1|0:I,(c=t+33554432|0)>>>0<33554432&&(I=I+1|0),I=(F-(-33554432&D)|0)+((67108863&I)<<6|c>>>26)|0,i[A+12>>2]=I,I=-67108864&c,i[A+8>>2]=t-I,I=0,w=y=(c=y)+16777216|0,y=I=y>>>0<16777216?1:I,F=c-(-33554432&w)|0,I=s<<2|(c=B)>>>30,s=c<<2,c=I,I=(I=f>>25)+c|0,t=I=(f=(t=s)+(s=(33554431&f)<<7|D>>>25)|0)>>>0<s>>>0?I+1|0:I,c=I=f+33554432|0,I=((67108863&(t=I>>>0<33554432?t+1|0:t))<<6|I>>>26)+F|0,i[A+20>>2]=I,I=-67108864&c,i[A+16>>2]=f-I,s=(t=Q)<<7,I=(I=l<<7|t>>>25)+(t=y>>25)|0,I=(y=s+(c=(33554431&y)<<7|w>>>25)|0)>>>0<c>>>0?I+1|0:I,y=t=y,c=t=t+33554432|0,t=I=t>>>0<33554432?I+1|0:I,I=-67108864&c,i[(f=A)+24>>2]=y-I,y=f,I=E<<5|(f=C)>>>27,l=f<<=5,s=f=f+16777216|0,f=I=f>>>0<16777216?I+1|0:I,I=(l-(-33554432&s)|0)+((67108863&t)<<6|c>>>26)|0,i[y+28>>2]=I,c=(t=a)<<4,t=I=r<<4|t>>>28,I=(I=f>>25)+t|0,I=(f=(w=c)+(c=(33554431&f)<<7|s>>>25)|0)>>>0<c>>>0?I+1|0:I,f=t=f,c=t=t+33554432|0,t=I=t>>>0<33554432?I+1|0:I,I=-67108864&c,i[y+32>>2]=f-I,I=0,f=y=(y=o)<<2&33554428,I=(y=y+16777216|0)>>>0<16777216?I+1|0:I,t=(f-(33554432&y)|0)+((67108863&t)<<6|c>>>26)|0,i[A+36>>2]=t,y=eg((33554431&I)<<7|y>>>25,I>>>25|0,19,0),I=p,I=(t=y+g|0)>>>0<y>>>0?I+1|0:I,(f=t+33554432|0)>>>0<33554432&&(I=I+1|0),I=(h-(-33554432&u)|0)+((67108863&I)<<6|f>>>26)|0,i[A+4>>2]=I,I=A,A=-67108864&f,i[I>>2]=t-A;}function P(A,I){var g,B,Q,C,E,n,a,r,o,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0;l=t=i[(e=I)+4>>2],D=t>>31,F=t=i[e+8>>2],B=t>>31,w=t=i[e+12>>2],u=t>>31,G=t=i[e+16>>2],Q=t>>31,h=t=i[e+20>>2],s=t>>31,k=t=i[e+24>>2],C=t>>31,E=t=i[e>>2],n=t>>31,c=t=eg(e=i[e+36>>2],e>>31,121666,0),e=p,g=t=t+16777216|0,t=e=t>>>0<16777216?e+1|0:e,a=c-(-33554432&g)|0,f=eg(e=i[I+32>>2],e>>31,121666,0),r=p,c=eg(I=i[I+28>>2],I>>31,121666,0),e=p,y=f,o=I=c+16777216|0,f=I,I=(I=(e=I>>>0<16777216?e+1|0:e)>>25)+r|0,I=(e=y+(f=(33554431&e)<<7|f>>>25)|0)>>>0<f>>>0?I+1|0:I,f=e,e=I,y=I=f+33554432|0,I=((67108863&(e=I>>>0<33554432?e+1|0:e))<<6|I>>>26)+a|0,i[A+36>>2]=I,I=-67108864&y,i[A+32>>2]=f-I,y=c-(-33554432&o)|0,e=eg(k,C,121666,0),k=p,c=eg(h,s,121666,0),I=p,f=e,h=e=c+16777216|0,s=e,e=(e=(I=e>>>0<16777216?I+1|0:I)>>25)+k|0,e=(I=f+(s=(33554431&I)<<7|s>>>25)|0)>>>0<s>>>0?e+1|0:e,(f=I+33554432|0)>>>0<33554432&&(e=e+1|0),e=y+((67108863&e)<<6|f>>>26)|0,i[A+28>>2]=e,e=-67108864&f,i[A+24>>2]=I-e,h=c-(-33554432&h)|0,I=eg(G,Q,121666,0),G=p,c=eg(w,u,121666,0),e=p,y=I,w=I=c+16777216|0,u=(33554431&(e=I>>>0<16777216?e+1|0:e))<<7|I>>>25,e=(e>>25)+G|0,I=e=(f=y+u|0)>>>0<u>>>0?e+1|0:e,I=((67108863&(I=(e=f+33554432|0)>>>0<33554432?I+1|0:I))<<6|e>>>26)+h|0,i[A+20>>2]=I,I=-67108864&e,i[A+16>>2]=f-I,w=c-(-33554432&w)|0,e=eg(F,B,121666,0),F=p,c=eg(l,D,121666,0),I=p,y=e,l=e=c+16777216|0,D=(33554431&(I=e>>>0<16777216?I+1|0:I))<<7|e>>>25,I=(I>>25)+F|0,e=I=(f=y+D|0)>>>0<D>>>0?I+1|0:I,y=I=f+33554432|0,I=((67108863&(e=I>>>0<33554432?e+1|0:e))<<6|I>>>26)+w|0,i[A+12>>2]=I,I=-67108864&y,i[A+8>>2]=f-I,I=eg((33554431&t)<<7|g>>>25,t>>25,19,0),e=p,y=c-(-33554432&l)|0,t=eg(E,n,121666,0),e=p+e|0,e=(I=t+I|0)>>>0<t>>>0?e+1|0:e,(t=I+33554432|0)>>>0<33554432&&(e=e+1|0),e=y+((67108863&e)<<6|t>>>26)|0,i[A+4>>2]=e,e=A,A=-67108864&t,i[e>>2]=I-A;}function R(A,I,g,B){var Q,E=0,a=0;h=Q=h-16|0,E=-31;A:{I:{g:{B:switch(B-1|0){case 1:if(I>>>0<13)break I;B=n[35660]|n[35661]<<8|n[35662]<<16|n[35663]<<24,E=n[35656]|n[35657]<<8|n[35658]<<16|n[35659]<<24,C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,B=n[35665]|n[35666]<<8|n[35667]<<16|n[35668]<<24,E=n[35661]|n[35662]<<8|n[35663]<<16|n[35664]<<24,C[A+5|0]=E,C[A+6|0]=E>>>8,C[A+7|0]=E>>>16,C[A+8|0]=E>>>24,C[A+9|0]=B,C[A+10|0]=B>>>8,C[A+11|0]=B>>>16,C[A+12|0]=B>>>24,a=-12,B=12;break g;case 0:break B;default:break A}if(I>>>0<12)break I;B=n[35673]|n[35674]<<8|n[35675]<<16|n[35676]<<24,E=n[35669]|n[35670]<<8|n[35671]<<16|n[35672]<<24,C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,B=n[35677]|n[35678]<<8|n[35679]<<16|n[35680]<<24,C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,a=-11,B=11;}if(E=oA(g))break A;if(qA(Q+5|0,19),!((E=I+a|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+B|0,Q+5|0,I+1|0),!((B=E-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=36,C[A+1|0]=109,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+44>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=44,C[A+1|0]=116,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+40>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=44,C[A+1|0]=112,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+48>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<2)&&(C[0|(A=A+I|0)]=36,C[A+1|0]=0,O(A=A+1|0,I=B-1|0,i[g+16>>2],i[g+20>>2],3)))))))))){if(E=-31,(B=(B=I)-(I=YA(A))|0)>>>0<2)break A;return C[0|(A=A+I|0)]=36,C[A+1|0]=0,A=O(A+1|0,B-1|0,i[g>>2],i[g+4>>2],3),h=Q+16|0,A?0:-31}}E=-31;}return h=Q+16|0,E}function J(A,I,g,B){var Q,E=0;Q=E=h,h=E=E-576&-64,i[E+188>>2]=0,xI(E+188|0,I);A:if(I>>>0<=64){if((0|iI(E+192|0,0,0,I))<0)break A;if((0|hg(E+192|0,E+188|0,4,0))<0);if((0|hg(E+192|0,g,B,0))<0);dI(E+192|0,A,I);}else if(!((0|iI(E+192|0,0,0,64))<0||(0|hg(E+192|0,E+188|0,4,0))<0||(0|hg(E+192|0,g,B,0))<0||(0|dI(E+192|0,E+112|0,64))<0)){if(g=i[E+116>>2],B=i[E+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[E+124>>2],B=i[E+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[E+140>>2],B=i[E+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[E+132>>2],B=i[E+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,(I=I-32|0)>>>0>=65)for(;;){if(X(E+48|0,E+112|0,64),(0|GI(E+112|0,64,E+48|0,64,0,0,0))<0)break A;if(g=i[E+116>>2],B=i[E+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[E+124>>2],B=i[E+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[E+140>>2],B=i[E+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[E+132>>2],B=i[E+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,!((I=I-32|0)>>>0>64))break}X(E+48|0,E+112|0,64),(0|GI(E+112|0,I,E+48|0,64,0,0,0))<0||X(A,E+112|0,I);}fI(E+192|0,384),h=Q;}function x(A,I,g){var B=0,Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0;for(C=2036477234,e=857760878,t=1634760805,E=1797285236,o=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,B=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,Q=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,a=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,c=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,y=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,w=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,h=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,f=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,I=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24;r=o,t=Hg((s=g)^(g=o+t|0),16),r=c=Hg(r^(o=t+c|0),12),c=Hg((s=t)^(t=g+c|0),8),o=Hg(r^(D=c+o|0),7),r=B,e=Hg((g=B+e|0)^f,16),r=f=Hg(r^(B=e+y|0),12),f=Hg((s=e)^(e=g+f|0),8),g=Hg(r^(y=f+B|0),7),r=Q,B=Hg((C=C+Q|0)^i,16),r=i=Hg(r^(Q=B+w|0),12),s=Hg(B^(i=C+i|0),8),C=Hg(r^(B=s+Q|0),7),E=Hg((Q=I)^(I=E+a|0),16),a=Hg((Q=E+h|0)^a,12),I=Hg(E^(u=I+a|0),8),E=Hg(a^(Q=I+Q|0),7),r=B,B=Hg((B=I)^(I=g+t|0),16),g=Hg((a=r+B|0)^g,12),I=Hg(B^(t=I+g|0),8),B=Hg(g^(w=a+I|0),7),r=Q,Q=Hg((g=C+e|0)^c,16),C=Hg((a=r+Q|0)^C,12),g=Hg(Q^(e=g+C|0),8),Q=Hg(C^(h=a+g|0),7),a=Hg((C=E+i|0)^f,16),E=Hg((i=a+D|0)^E,12),f=Hg(a^(C=C+E|0),8),a=Hg(E^(c=i+f|0),7),i=Hg((E=o+u|0)^s,16),o=Hg((y=i+y|0)^o,12),i=Hg(i^(E=E+o|0),8),o=Hg(o^(y=y+i|0),7),10!=(0|(p=p+1|0)););xI(A,t),xI(A+4|0,e),xI(A+8|0,C),xI(A+12|0,E),xI(A+16|0,g),xI(A+20|0,f),xI(A+24|0,i),xI(A+28|0,I);}function L(A){var I,g=0,B=0;h=I=h-48|0,g=n[28+(A|=0)|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24,i[I+24>>2]=n[A+24|0]|n[A+25|0]<<8|n[A+26|0]<<16|n[A+27|0]<<24,i[I+28>>2]=g,g=n[A+20|0]|n[A+21|0]<<8|n[A+22|0]<<16|n[A+23|0]<<24,i[I+16>>2]=n[A+16|0]|n[A+17|0]<<8|n[A+18|0]<<16|n[A+19|0]<<24,i[I+20>>2]=g,g=n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24,i[I>>2]=n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,i[I+4>>2]=g,g=n[A+12|0]|n[A+13|0]<<8|n[A+14|0]<<16|n[A+15|0]<<24,i[I+8>>2]=n[A+8|0]|n[A+9|0]<<8|n[A+10|0]<<16|n[A+11|0]<<24,i[I+12>>2]=g,g=n[A+40|0]|n[A+41|0]<<8|n[A+42|0]<<16|n[A+43|0]<<24,i[I+32>>2]=n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24,i[I+36>>2]=g,Vg[i[8957]](I,I,40,0,A+32|0,0,A),g=i[I+28>>2],B=i[I+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[I+20>>2],B=i[I+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,g=i[I+12>>2],B=i[I+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[I+4>>2],B=i[I>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[I+36>>2],B=i[I+32>>2],C[A+36|0]=B,C[A+37|0]=B>>>8,C[A+38|0]=B>>>16,C[A+39|0]=B>>>24,C[A+40|0]=g,C[A+41|0]=g>>>8,C[A+42|0]=g>>>16,C[A+43|0]=g>>>24,XI(A),h=I+48|0;}function K(A,I,g){var B=0,Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;for(Q=2036477234,C=857760878,E=1634760805,i=1797285236,w=20,o=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,s=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,h=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,c=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,e=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,a=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,t=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,f=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,r=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,B=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,I=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24;D=B,B=Hg(E+a|0,7)^c,y=D^Hg(B+E|0,9),u=Hg(B+y|0,13)^a,c=Hg(y+u|0,18),I=Hg(C+o|0,7)^I,t=Hg(I+C|0,9)^t,o=Hg(I+t|0,13)^o,l=Hg(t+o|0,18),f=Hg(g+Q|0,7)^f,a=Hg(f+Q|0,9)^s,p=Hg(a+f|0,13)^g,F=Hg(a+p|0,18),g=Hg(i+e|0,7)^h,r=Hg(g+i|0,9)^r,e=Hg(g+r|0,13)^e,D=Hg(r+e|0,18),o=Hg((E^=c)+g|0,7)^o,s=Hg(o+E|0,9)^a,h=Hg(o+s|0,13)^g,E=Hg(s+h|0,18)^E,g=Hg((C^=l)+B|0,7)^p,r=Hg(g+C|0,9)^r,c=Hg(g+r|0,13)^B,C=Hg(r+c|0,18)^C,e=Hg((Q^=F)+I|0,7)^e,B=Hg(e+Q|0,9)^y,I=Hg(B+e|0,13)^I,Q=Hg(I+B|0,18)^Q,a=Hg((i^=D)+f|0,7)^u,t=Hg(a+i|0,9)^t,f=Hg(a+t|0,13)^f,i=Hg(t+f|0,18)^i,y=w>>>0>2,w=w-2|0,y;);return xI(A,E),xI(A+4|0,C),xI(A+8|0,Q),xI(A+12|0,i),xI(A+16|0,g),xI(A+20|0,r),xI(A+24|0,B),xI(A+28|0,I),0}function q(A,I,g,B,Q,E,a){var r,o,e,t,f,c,y,s=0;return h=r=h-560|0,ig(r+352|0,a),mI(r+288|0,E,32,0),V(r+352|0,r+320|0,32,0),V(r+352|0,g,B,Q),UI(r+352|0,r+224|0),o=n[(s=E)+32|0]|n[s+33|0]<<8|n[s+34|0]<<16|n[s+35|0]<<24,e=n[s+36|0]|n[s+37|0]<<8|n[s+38|0]<<16|n[s+39|0]<<24,t=n[s+40|0]|n[s+41|0]<<8|n[s+42|0]<<16|n[s+43|0]<<24,f=n[s+44|0]|n[s+45|0]<<8|n[s+46|0]<<16|n[s+47|0]<<24,c=n[s+48|0]|n[s+49|0]<<8|n[s+50|0]<<16|n[s+51|0]<<24,E=n[s+52|0]|n[s+53|0]<<8|n[s+54|0]<<16|n[s+55|0]<<24,y=n[s+60|0]|n[s+61|0]<<8|n[s+62|0]<<16|n[s+63|0]<<24,s=n[s+56|0]|n[s+57|0]<<8|n[s+58|0]<<16|n[s+59|0]<<24,C[A+56|0]=s,C[A+57|0]=s>>>8,C[A+58|0]=s>>>16,C[A+59|0]=s>>>24,C[A+60|0]=y,C[A+61|0]=y>>>8,C[A+62|0]=y>>>16,C[A+63|0]=y>>>24,C[A+48|0]=c,C[A+49|0]=c>>>8,C[A+50|0]=c>>>16,C[A+51|0]=c>>>24,C[A+52|0]=E,C[A+53|0]=E>>>8,C[A+54|0]=E>>>16,C[A+55|0]=E>>>24,C[A+40|0]=t,C[A+41|0]=t>>>8,C[A+42|0]=t>>>16,C[A+43|0]=t>>>24,C[A+44|0]=f,C[A+45|0]=f>>>8,C[A+46|0]=f>>>16,C[A+47|0]=f>>>24,C[0|(E=A+32|0)]=o,C[E+1|0]=o>>>8,C[E+2|0]=o>>>16,C[E+3|0]=o>>>24,C[E+4|0]=e,C[E+5|0]=e>>>8,C[E+6|0]=e>>>16,C[E+7|0]=e>>>24,G(r+224|0),CA(r,r+224|0),nI(A,r),ig(r+352|0,a),V(r+352|0,A,64,0),V(r+352|0,g,B,Q),UI(r+352|0,r+160|0),G(r+160|0),C[r+288|0]=248&n[r+288|0],C[r+319|0]=63&n[r+319|0]|64,function(A,I,g,B){var Q,E,i,a,r,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K,q,X,V,W,T,j,Z,O,z,$,AA,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0,mA=0,vA=0,UA=0,SA=0,NA=0,MA=0,dA=0,PA=0,RA=0,JA=0,xA=0,LA=0,KA=0,qA=0,XA=0,VA=0,WA=0,TA=0,jA=0,ZA=0,OA=0;RA=HI(I),sA=n[I+2|0]|n[I+3|0]<<8|n[I+4|0]<<16|n[I+5|0]<<24,WA=HI(I+5|0),YA=p,wA=n[I+7|0]|n[I+8|0]<<8|n[I+9|0]<<16|n[I+10|0]<<24,hA=n[I+10|0]|n[I+11|0]<<8|n[I+12|0]<<16|n[I+13|0]<<24,mA=HI(I+13|0),oA=p,tA=n[I+15|0]|n[I+16|0]<<8|n[I+17|0]<<16|n[I+18|0]<<24,KA=HI(I+18|0),fA=p,bA=HI(I+21|0),iA=n[I+23|0]|n[I+24|0]<<8|n[I+25|0]<<16|n[I+26|0]<<24,aA=HI(I+26|0),QA=p,BA=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,NA=HI(g),pA=n[(I=g)+2|0]|n[I+3|0]<<8|n[I+4|0]<<16|n[I+5|0]<<24,XA=HI(I+5|0),rA=p,cA=n[I+7|0]|n[I+8|0]<<8|n[I+9|0]<<16|n[I+10|0]<<24,yA=n[I+10|0]|n[I+11|0]<<8|n[I+12|0]<<16|n[I+13|0]<<24,VA=HI(I+13|0),eA=p,CA=n[I+15|0]|n[I+16|0]<<8|n[I+17|0]<<16|n[I+18|0]<<24,qA=HI(I+18|0),gA=p,JA=HI(I+21|0),IA=n[I+23|0]|n[I+24|0]<<8|n[I+25|0]<<16|n[I+26|0]<<24,nA=HI(I+26|0),g=p,I=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,Z=HI(B),O=n[B+2|0]|n[B+3|0]<<8|n[B+4|0]<<16|n[B+5|0]<<24,z=HI(B+5|0),$=p,MA=n[B+7|0]|n[B+8|0]<<8|n[B+9|0]<<16|n[B+10|0]<<24,xA=n[B+10|0]|n[B+11|0]<<8|n[B+12|0]<<16|n[B+13|0]<<24,LA=HI(B+13|0),SA=p,vA=n[B+15|0]|n[B+16|0]<<8|n[B+17|0]<<16|n[B+18|0]<<24,TA=HI(B+18|0),_A=p,FA=HI(B+21|0),I=eg(Q=I>>>7|0,0,E=2097151&((3&QA)<<30|aA>>>2),0),EA=p,QA=I,I=eg(i=2097151&((3&g)<<30|nA>>>2),0,a=BA>>>7|0,0),g=p+EA|0,EA=BA=QA+I|0,BA=I>>>0>BA>>>0?g+1|0:g,I=eg(E,0,i,0),QA=p,IA=(g=eg(r=IA>>>5&2097151,0,a,0))+I|0,I=p+QA|0,g=I=g>>>0>IA>>>0?I+1|0:I,I=eg(Q,0,o=iA>>>5&2097151,0),g=p+g|0,iA=IA=I+IA|0,lA=g=I>>>0>IA>>>0?g+1|0:g,DA=(I=IA)- -1048576|0,uA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+BA|0,aA=I=(g=(2097151&g)<<11|DA>>>21)>>>0>(BA=QA=g+EA|0)>>>0?I+1|0:I,GA=(I=BA)- -1048576|0,nA=EA=aA-((I>>>0<4293918720)-1|0)|0,QA=eg(Q,0,a,0),g=HA=(PA=p)-(((I=QA)>>>0<4293918720)-1|0)|0,IA=EA>>21,HA=(2097151&EA)<<11|GA>>>21,QA=I-(EA=-2097152&(dA=I- -1048576|0))|0,I=(PA-((I>>>0<EA>>>0)+g|0)|0)+IA|0,P=I=QA>>>0>(v=HA+QA|0)>>>0?I+1|0:I,EA=eg(v,I,-683901,-1),QA=p,R=I=g>>21,I=eg(S=(2097151&g)<<11|dA>>>21,I,136657,0),IA=p+QA|0,HA=g=I+EA|0,EA=I>>>0>g>>>0?IA+1|0:IA,I=eg(e=2097151&((1&eA)<<31|VA>>>1),0,E,0),g=p,IA=I,I=eg(t=yA>>>4&2097151,0,a,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(f=CA>>>6&2097151,0,o,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,m=I=0,QA=IA,IA=eg(c=2097151&JA,I,y=2097151&((7&fA)<<29|KA>>>3),0),I=p+g|0,I=IA>>>0>(QA=QA+IA|0)>>>0?I+1|0:I,IA=eg(s=2097151&((7&gA)<<29|qA>>>3),0,w=2097151&bA,0),g=p+I|0,g=IA>>>0>(QA=IA+QA|0)>>>0?g+1|0:g,I=eg(r,0,h=tA>>>6&2097151,0),IA=p+g|0,IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,g=eg(i,0,D=2097151&((1&oA)<<31|mA>>>1),0),I=p+IA|0,g=g>>>0>(IA=QA=g+QA|0)>>>0?I+1|0:I,I=eg(Q,0,u=hA>>>4&2097151,0),g=p+g|0,fA=IA=I+IA|0,QA=I>>>0>IA>>>0?g+1|0:g,I=eg(E,0,t,0),g=p,gA=(IA=I)+(I=eg(l=cA>>>7&2097151,0,a,0))|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(o,0,e,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,IA=eg(f,0,w,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=eg(c,m,h,0),g=p+g|0,g=I>>>0>(IA=I+gA|0)>>>0?g+1|0:g,gA=(I=IA)+(IA=eg(y,0,s,0))|0,I=p+g|0,I=IA>>>0>gA>>>0?I+1|0:I,g=eg(r,0,D,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,g=eg(i,0,u,0),I=p+IA|0,g=g>>>0>(IA=gA=g+gA|0)>>>0?I+1|0:I,I=eg(Q,0,F=wA>>>7&2097151,0),g=p+g|0,yA=IA=I+IA|0,CA=g=I>>>0>IA>>>0?g+1|0:g,eA=(I=IA)- -1048576|0,gA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+QA|0,g=I=(g=(2097151&g)<<11|eA>>>21)>>>0>(cA=g+fA|0)>>>0?I+1|0:I,I=I+EA|0,I=(IA=QA=cA)>>>0>(cA=IA+HA|0)>>>0?I+1|0:I,EA=(EA=g)-(((g=QA)>>>0<4293918720)-1|0)|0,oA=g- -1048576|0,tA=(g=IA=cA)-(IA=-2097152&oA)|0,fA=I-((QA=EA)+(g>>>0<IA>>>0)|0)|0,N=BA-(I=-2097152&GA)|0,J=g=aA-((I>>>0>BA>>>0)+nA|0)|0,I=eg(S,R,-997805,-1),IA=p+CA|0,IA=I>>>0>(BA=I+yA|0)>>>0?IA+1|0:IA,CA=(I=BA)+(BA=eg(v,P,136657,0))|0,I=p+IA|0,g=eg(N,g,-683901,-1),I=p+(BA>>>0>CA>>>0?I+1|0:I)|0,I=g>>>0>(IA=g+CA|0)>>>0?I+1|0:I,EA=IA-(g=-2097152&eA)|0,CA=I-((g>>>0>IA>>>0)+gA|0)|0,I=eg(E,0,l,0),IA=p,BA=(g=eg(G=2097151&((3&rA)<<30|XA>>>2),0,a,0))+I|0,I=p+IA|0,I=g>>>0>BA>>>0?I+1|0:I,IA=eg(o,0,t,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(e,0,w,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(f,0,y,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(c,m,D,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(s,0,h,0),I=p+g|0,I=IA>>>0>(BA=IA+BA|0)>>>0?I+1|0:I,IA=eg(r,0,u,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(i,0,F,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(Q,0,k=2097151&((3&YA)<<30|WA>>>2),0),I=p+IA|0,BA=g>>>0>(gA=BA=g+BA|0)>>>0?I+1|0:I,I=eg(E,0,G,0),g=p,IA=I,I=eg(_=pA>>>5&2097151,0,a,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,nA=(I=eg(o,0,l,0))+IA|0,IA=p+g|0,IA=I>>>0>nA>>>0?IA+1|0:IA,g=eg(t,0,w,0),I=p+IA|0,I=g>>>0>(nA=g+nA|0)>>>0?I+1|0:I,g=eg(e,0,y,0),I=p+I|0,I=g>>>0>(IA=g+nA|0)>>>0?I+1|0:I,nA=(g=IA)+(IA=eg(f,0,h,0))|0,g=p+I|0,g=IA>>>0>nA>>>0?g+1|0:g,I=eg(c,m,u,0),g=p+g|0,g=I>>>0>(IA=I+nA|0)>>>0?g+1|0:g,nA=(I=eg(s,0,D,0))+IA|0,IA=p+g|0,IA=I>>>0>nA>>>0?IA+1|0:IA,g=eg(r,0,F,0),I=p+IA|0,I=g>>>0>(nA=g+nA|0)>>>0?I+1|0:I,g=eg(i,0,k,0),I=p+I|0,g=I=g>>>0>(IA=g+nA|0)>>>0?I+1|0:I,I=eg(Q,0,H=sA>>>5&2097151,0),g=p+g|0,cA=IA=I+IA|0,XA=g=I>>>0>IA>>>0?g+1|0:g,AA=(I=IA)- -1048576|0,VA=IA=g-((I>>>0<4293918720)-1|0)|0,I=(I=IA>>21)+BA|0,yA=IA=(g=(2097151&IA)<<11|AA>>>21)+gA|0,qA=I=g>>>0>IA>>>0?I+1|0:I,WA=(I=IA)- -1048576|0,JA=IA=qA-((I>>>0<4293918720)-1|0)|0,g=(I=IA>>21)+CA|0,eA=BA=(IA=(2097151&IA)<<11|WA>>>21)+EA|0,PA=g=IA>>>0>BA>>>0?g+1|0:g,mA=(I=BA)- -1048576|0,HA=IA=g-((I>>>0<4293918720)-1|0)|0,I=(I=IA>>21)+fA|0,CA=IA=(g=(2097151&IA)<<11|mA>>>21)+tA|0,sA=IA=(GA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,aA=(2097151&IA)<<11|(bA=I- -1048576|0)>>>21,gA=IA>>21,I=eg(E,0,f,0),g=p,IA=I,I=eg(a,0,e,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(c,m,w,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,BA=(I=IA)+(IA=eg(o,0,s,0))|0,I=p+g|0,I=IA>>>0>BA>>>0?I+1|0:I,g=eg(r,0,y,0),IA=p+I|0,IA=g>>>0>(BA=g+BA|0)>>>0?IA+1|0:IA,g=eg(i,0,h,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(Q,0,D,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(S,R,-683901,-1),g=(I=g)+p|0,g=IA>>>0>(EA=BA+IA|0)>>>0?g+1|0:g,IA=EA,EA=(EA=I)-(((I=BA)>>>0<4293918720)-1|0)|0,pA=I- -1048576|0,nA=(I=IA)-(IA=-2097152&pA)|0,IA=g-((BA=EA)+(I>>>0<IA>>>0)|0)|0,I=(I=QA>>21)+IA|0,I=(g=(2097151&QA)<<11|oA>>>21)>>>0>(QA=g+nA|0)>>>0?I+1|0:I,EA=(g=QA)-(IA=-2097152&(rA=g- -1048576|0))|0,IA=(I-((g>>>0<IA>>>0)+(QA=nA=I-((g>>>0<4293918720)-1|0)|0)|0)|0)+gA|0,x=aA=EA+aA|0,L=IA=EA>>>0>aA>>>0?IA+1|0:IA,nA=eg(aA,IA,-683901,-1),EA=p,g=eg(o,0,c,m),I=p,IA=g,g=eg(a,0,f,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(E,0,s,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,IA=eg(r,0,w,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(i,0,y,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=eg(Q,0,h,0),IA=p+g|0,IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,I=(I=BA>>21)+IA|0,wA=gA=(I=(g=(2097151&BA)<<11|pA>>>21)>>>0>(BA=g+gA|0)>>>0?I+1|0:I)-(((g=BA)>>>0<4293918720)-1|0)|0,BA=g-(IA=-2097152&(UA=g- -1048576|0))|0,IA=(I-((g>>>0<IA>>>0)+gA|0)|0)+(QA>>21)|0,K=BA=(I=(2097151&QA)<<11|rA>>>21)+BA|0,q=IA=I>>>0>BA>>>0?IA+1|0:IA,g=eg(BA,IA,136657,0),I=p+EA|0,KA=IA=g+nA|0,hA=g>>>0>IA>>>0?I+1|0:I,g=eg(w,0,_,0),I=p,IA=g,g=eg(Y=2097151&NA,0,o,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,BA=(g=IA)+(IA=eg(y,0,G,0))|0,g=p+I|0,g=IA>>>0>BA>>>0?g+1|0:g,I=eg(h,0,l,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(t,0,D,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(e,0,u,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(f,0,F,0),I=p+g|0,I=IA>>>0>(BA=IA+BA|0)>>>0?I+1|0:I,IA=eg(c,m,H,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(s,0,k,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(r,0,b=2097151&RA,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,QA=BA=(IA=(n[B+23|0]|n[B+24|0]<<8|n[B+25|0]<<16|n[B+26|0]<<24)>>>5&2097151)+BA|0,BA=IA>>>0>BA>>>0?I+1|0:I,I=eg(y,0,_,0),g=p,IA=I,I=eg(w,0,Y,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,gA=(I=eg(h,0,G,0))+IA|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(D,0,l,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,g=eg(t,0,u,0),I=p+I|0,I=g>>>0>(IA=g+gA|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(e,0,F,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,I=eg(f,0,k,0),g=p+g|0,g=I>>>0>(IA=I+gA|0)>>>0?g+1|0:g,gA=(I=eg(c,m,b,0))+IA|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(s,0,H,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,gA=IA=(g=2097151&FA)+gA|0,tA=IA=(oA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(YA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+BA|0,rA=IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,NA=iA-(I=-2097152&DA)|0,FA=lA-((I>>>0>iA>>>0)+uA|0)|0,g=eg(E,0,r,0),I=p,IA=g,g=eg(a,0,c,m),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,BA=(g=IA)+(IA=eg(i,0,o,0))|0,g=p+I|0,g=IA>>>0>BA>>>0?g+1|0:g,I=eg(Q,0,w,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,EA=BA,I=eg(a,0,s,0),g=p,BA=I,I=eg(E,0,c,m),g=p+g|0,g=I>>>0>(BA=BA+I|0)>>>0?g+1|0:g,iA=(I=BA)+(BA=eg(o,0,r,0))|0,I=p+g|0,I=BA>>>0>iA>>>0?I+1|0:I,g=eg(i,0,w,0),I=p+I|0,I=g>>>0>(BA=g+iA|0)>>>0?I+1|0:I,iA=(g=BA)+(BA=eg(Q,0,y,0))|0,g=p+I|0,aA=g=BA>>>0>iA>>>0?g+1|0:g,lA=(I=BA=iA)- -1048576|0,nA=iA=g-((I>>>0<4293918720)-1|0)|0,g=(I=iA>>21)+IA|0,EA=g=(IA=EA=(iA=(2097151&iA)<<11|lA>>>21)+EA|0)>>>0<iA>>>0?g+1|0:g,uA=(I=IA)- -1048576|0,g=(I=(iA=DA=g-((I>>>0<4293918720)-1|0)|0)>>21)+FA|0,X=g=(DA=(2097151&iA)<<11|uA>>>21)>>>0>(U=NA=DA+NA|0)>>>0?g+1|0:g,FA=eg(U,g,470296,0),DA=p,M=IA-(g=-2097152&uA)|0,dA=I=EA-((g>>>0>IA>>>0)+iA|0)|0,g=eg(N,J,666643,0),IA=p+DA|0,IA=g>>>0>(iA=g+FA|0)>>>0?IA+1|0:IA,g=eg(M,I,654183,0),I=p+IA|0,g=g>>>0>(EA=iA=g+iA|0)>>>0?I+1|0:I,I=BA-(IA=-2097152&lA)|0,IA=(wA>>21)+(iA=aA-((IA>>>0>BA>>>0)+nA|0)|0)|0,V=nA=(BA=(2097151&wA)<<11|UA>>>21)+I|0,RA=IA=BA>>>0>nA>>>0?IA+1|0:IA,jA=QA- -1048576|0,BA=iA=rA-((QA>>>0<4293918720)-1|0)|0,I=eg(nA,IA,-997805,-1),g=p+g|0,I=(g=I>>>0>(IA=I+EA|0)>>>0?g+1|0:g)+rA|0,I=IA>>>0>(QA=IA+QA|0)>>>0?I+1|0:I,FA=(IA=QA)-(g=-2097152&jA)|0,DA=I-((g>>>0>IA>>>0)+BA|0)|0,I=eg(M,dA,470296,0),g=p,QA=(IA=I)+(I=eg(U,X,666643,0))|0,IA=p+g|0,IA=I>>>0>QA>>>0?IA+1|0:IA,g=eg(nA,RA,654183,0),I=p+IA|0,g=oA+(g>>>0>(QA=g+QA|0)>>>0?I+1|0:I)|0,rA=(IA=gA+QA|0)-(I=-2097152&YA)|0,iA=(g=IA>>>0<gA>>>0?g+1|0:g)-((I>>>0>IA>>>0)+tA|0)|0,g=eg(h,0,_,0),I=p,IA=g,g=eg(y,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,g=eg(D,0,G,0),I=p+I|0,I=g>>>0>(IA=g+IA|0)>>>0?I+1|0:I,QA=(g=IA)+(IA=eg(u,0,l,0))|0,g=p+I|0,g=IA>>>0>QA>>>0?g+1|0:g,I=eg(t,0,F,0),IA=p+g|0,IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,I=eg(e,0,k,0),g=p+IA|0,g=I>>>0>(QA=I+QA|0)>>>0?g+1|0:g,IA=eg(f,0,H,0),I=p+g|0,I=IA>>>0>(QA=IA+QA|0)>>>0?I+1|0:I,g=eg(s,0,b,0),I=p+I|0,I=g>>>0>(IA=g+QA|0)>>>0?I+1|0:I,g=IA,QA=(IA=2097151&((7&_A)<<29|TA>>>3))>>>0>(gA=QA=g+IA|0)>>>0?I+1|0:I,I=eg(D,0,_,0),g=p,EA=(IA=I)+(I=eg(h,0,Y,0))|0,IA=p+g|0,IA=I>>>0>EA>>>0?IA+1|0:IA,g=eg(u,0,G,0),I=p+IA|0,I=g>>>0>(EA=g+EA|0)>>>0?I+1|0:I,IA=eg(F,0,l,0),g=p+I|0,g=IA>>>0>(EA=IA+EA|0)>>>0?g+1|0:g,IA=eg(t,0,k,0),I=p+g|0,I=IA>>>0>(EA=IA+EA|0)>>>0?I+1|0:I,IA=eg(e,0,H,0),g=p+I|0,g=IA>>>0>(EA=IA+EA|0)>>>0?g+1|0:g,I=eg(f,0,b,0),IA=p+g|0,I=I>>>0>(g=EA=I+EA|0)>>>0?IA+1|0:IA,lA=IA=EA+(g=vA>>>6&2097151)|0,fA=IA=(aA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(uA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+QA|0,nA=IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,wA=(I=gA)- -1048576|0,EA=IA=IA-((I>>>0<4293918720)-1|0)|0,I=(g=IA>>>21|0)+iA|0,oA=QA=(IA=(2097151&IA)<<11|wA>>>21)+rA|0,pA=IA=(iA=I=IA>>>0>QA>>>0?I+1|0:I)-(((I=QA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(tA=I- -1048576|0)>>>21,IA=(IA>>21)+DA|0,I=(g=IA=I>>>0>(QA=I+FA|0)>>>0?IA+1|0:IA)+hA|0,rA=(rA=g)-(((g=QA)>>>0<4293918720)-1|0)|0,ZA=g- -1048576|0,OA=(g=IA=_A=QA+KA|0)-(IA=-2097152&ZA)|0,kA=(I=QA>>>0>_A>>>0?I+1|0:I)-((QA=rA)+(g>>>0<IA>>>0)|0)|0,I=eg(K,q,-997805,-1),g=p+iA|0,UA=IA=I+oA|0,rA=I>>>0>IA>>>0?g+1|0:g,g=eg(V,RA,470296,0),I=p,IA=g,g=eg(M,dA,666643,0),I=p+I|0,I=(I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I)+nA|0,I=(g=IA+gA|0)>>>0<gA>>>0?I+1|0:I,wA=(IA=g)-(g=-2097152&wA)|0,hA=I-((g>>>0>IA>>>0)+EA|0)|0,I=eg(V,RA,666643,0),g=p+aA|0,oA=IA=I+lA|0,iA=I>>>0>IA>>>0?g+1|0:g,g=eg(u,0,_,0),I=p,IA=g,g=eg(D,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,g=eg(F,0,G,0),I=p+I|0,I=g>>>0>(IA=g+IA|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(k,0,l,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,I=eg(t,0,H,0),IA=p+g|0,IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,I=eg(e,0,b,0),g=p+IA|0,I=g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,EA=gA=(IA=2097151&((1&SA)<<31|LA>>>1))+gA|0,gA=IA>>>0>gA>>>0?I+1|0:I,g=eg(F,0,_,0),I=p,IA=g,g=eg(u,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,nA=(g=IA)+(IA=eg(k,0,G,0))|0,g=p+I|0,g=IA>>>0>nA>>>0?g+1|0:g,I=eg(H,0,l,0),g=p+g|0,g=I>>>0>(IA=I+nA|0)>>>0?g+1|0:g,nA=(I=eg(t,0,b,0))+IA|0,IA=p+g|0,I=I>>>0>(g=nA)>>>0?IA+1|0:IA,aA=IA=nA+(g=xA>>>4&2097151)|0,xA=IA=(YA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(TA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+gA|0,nA=EA=I+EA|0,SA=IA=I>>>0>EA>>>0?IA+1|0:IA,KA=(I=EA)- -1048576|0,vA=IA=IA-((I>>>0<4293918720)-1|0)|0,I=(g=IA>>>21|0)+iA|0,lA=IA=(_A=(IA=(IA=(2097151&IA)<<11|KA>>>21)>>>0>(g=gA=IA+oA|0)>>>0?I+1|0:I)-(((I=-2097152&uA)>>>0>g>>>0)+fA|0)|0)-(((I=EA=g-I|0)>>>0<4293918720)-1|0)|0,g=(g=IA>>21)+hA|0,FA=IA=(I=(2097151&IA)<<11|(NA=I- -1048576|0)>>>21)+wA|0,uA=g=I>>>0>IA>>>0?g+1|0:g,DA=(I=IA)- -1048576|0,wA=gA=g-((I>>>0<4293918720)-1|0)|0,d=CA-(I=-2097152&bA)|0,LA=IA=GA-((I>>>0>CA>>>0)+sA|0)|0,I=(g=gA>>21)+rA|0,I=(gA=(2097151&gA)<<11|DA>>>21)>>>0>(CA=gA+UA|0)>>>0?I+1|0:I,iA=(gA=eg(x,L,136657,0))+(CA-(g=-2097152&tA)|0)|0,g=p+(I-((g>>>0>CA>>>0)+pA|0)|0)|0,g=gA>>>0>iA>>>0?g+1|0:g,IA=eg(d,IA,-683901,-1),I=p+g|0,iA=gA=IA+iA|0,oA=IA=(hA=I=IA>>>0>gA>>>0?I+1|0:I)-(((I=gA)>>>0<4293918720)-1|0)|0,g=(g=IA>>21)+kA|0,CA=IA=(I=(2097151&IA)<<11|(bA=I- -1048576|0)>>>21)+OA|0,tA=g=I>>>0>IA>>>0?g+1|0:g,fA=IA=g-(((I=IA)>>>0<4293918720)-1|0)|0,UA=(2097151&IA)<<11|(GA=I- -1048576|0)>>>21,pA=IA>>21,g=eg(o,0,_,0),I=p,IA=g,g=eg(E,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=eg(w,0,G,0))+IA|0,IA=p+I|0,IA=g>>>0>gA>>>0?IA+1|0:IA,I=eg(y,0,l,0),g=p+IA|0,g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,IA=eg(t,0,h,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(e,0,D,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,IA=eg(f,0,u,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,g=eg(c,m,k,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,I=eg(s,0,F,0),g=p+IA|0,g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,IA=eg(r,0,H,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(i,0,b,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=HI(B+26|0),IA=2097151&((3&(IA=p))<<30|I>>>2),I=g,sA=gA=IA+gA|0,gA=I=IA>>>0>gA>>>0?I+1|0:I,I=eg(N,J,470296,0),g=p,kA=(IA=I)+(I=eg(v,P,666643,0))|0,IA=p+g|0,IA=I>>>0>kA>>>0?IA+1|0:IA,I=eg(U,X,654183,0),g=p+IA|0,g=I>>>0>(kA=I+kA|0)>>>0?g+1|0:g,I=eg(M,dA,-997805,-1),g=p+g|0,g=I>>>0>(IA=I+kA|0)>>>0?g+1|0:g,kA=(I=IA)+(IA=eg(V,RA,136657,0))|0,I=p+g|0,I=(I=IA>>>0>kA>>>0?I+1|0:I)+gA|0,I=(g=kA)>>>0>(IA=g+sA|0)>>>0?I+1|0:I,g=IA,IA=I,W=(I=sA)- -1048576|0,gA=rA=gA-((I>>>0<4293918720)-1|0)|0,rA=g,IA=(g=BA>>21)+IA|0,IA=(I=(2097151&BA)<<11|jA>>>21)>>>0>(BA=rA+I|0)>>>0?IA+1|0:IA,g=BA-(I=-2097152&W)|0,sA=eg(K,q,-683901,-1),I=(BA=IA-((I>>>0>BA>>>0)+gA|0)|0)+p|0,IA=I=sA>>>0>(kA=g+sA|0)>>>0?I+1|0:I,rA=BA-(((I=g)>>>0<4293918720)-1|0)|0,T=I- -1048576|0,IA=(g=QA>>21)+IA|0,IA=(I=(2097151&QA)<<11|ZA>>>21)>>>0>(QA=I+(sA=kA)|0)>>>0?IA+1|0:IA,sA=g=QA-(I=-2097152&T)|0,I=(QA=IA-((I>>>0>QA>>>0)+(BA=rA)|0)|0)+pA|0,j=g- -1048576|0,rA=QA-((g>>>0<4293918720)-1|0)|0,jA=(g=IA=UA=g+UA|0)-(IA=-2097152&j)|0,ZA=(sA>>>0>g>>>0?I+1|0:I)-((g>>>0<IA>>>0)+(QA=rA)|0)|0,OA=CA-(I=-2097152&GA)|0,kA=tA-((I>>>0>CA>>>0)+fA|0)|0,UA=iA-(I=-2097152&bA)|0,bA=hA-((I>>>0>iA>>>0)+oA|0)|0,g=eg(K,q,654183,0),I=p+uA|0,I=g>>>0>(IA=g+FA|0)>>>0?I+1|0:I,iA=((CA=IA)-(g=-2097152&DA)|0)+(IA=eg(x,L,-997805,-1))|0,g=p+(I-((g>>>0>CA>>>0)+wA|0)|0)|0,g=IA>>>0>iA>>>0?g+1|0:g,IA=eg(d,LA,136657,0),I=p+g|0,GA=CA=IA+iA|0,iA=IA>>>0>CA>>>0?I+1|0:I,sA=eA-(I=-2097152&mA)|0,hA=PA-((I>>>0>eA>>>0)+HA|0)|0,I=eg(v,P,-997805,-1),g=p,IA=I,I=eg(S,R,654183,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(N,J,136657,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,CA=(I=IA)+(IA=eg(U,X,-683901,-1))|0,I=p+g|0,IA=qA+(IA>>>0>CA>>>0?I+1|0:I)|0,oA=(g=CA+yA|0)-(I=-2097152&WA)|0,tA=(IA=g>>>0<yA>>>0?IA+1|0:IA)-((I>>>0>g>>>0)+JA|0)|0,I=eg(v,P,654183,0),g=p,IA=I,I=eg(S,R,470296,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,CA=(I=IA)+(IA=eg(N,J,-997805,-1))|0,I=p+g|0,g=CA+cA|0,IA=XA+(IA>>>0>CA>>>0?I+1|0:I)|0,CA=(I=eg(U,X,136657,0))+g|0,g=p+(g>>>0<cA>>>0?IA+1|0:IA)|0,g=I>>>0>CA>>>0?g+1|0:g,IA=eg(M,dA,-683901,-1),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,yA=(IA=CA)-(g=-2097152&AA)|0,eA=I-((g>>>0>IA>>>0)+VA|0)|0,g=eg(E,0,_,0),I=p,IA=g,g=eg(a,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,CA=(g=IA)+(IA=eg(o,0,G,0))|0,g=p+I|0,g=IA>>>0>CA>>>0?g+1|0:g,IA=eg(w,0,l,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=eg(t,0,y,0),IA=p+I|0,IA=g>>>0>(CA=g+CA|0)>>>0?IA+1|0:IA,I=eg(e,0,h,0),g=p+IA|0,g=I>>>0>(CA=I+CA|0)>>>0?g+1|0:g,IA=eg(f,0,D,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,IA=eg(c,m,F,0),g=p+I|0,g=IA>>>0>(CA=IA+CA|0)>>>0?g+1|0:g,IA=eg(s,0,u,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=eg(r,0,k,0),IA=p+I|0,IA=g>>>0>(CA=g+CA|0)>>>0?IA+1|0:IA,I=eg(Q,0,b,0),g=p+IA|0,g=I>>>0>(CA=I+CA|0)>>>0?g+1|0:g,IA=eg(i,0,H,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=(B=(n[B+28|0]|n[B+29|0]<<8|n[B+30|0]<<16|n[B+31|0]<<24)>>>7|0)>>>0>(IA=B+CA|0)>>>0?I+1|0:I,I=IA,IA=gA>>21,gA=I+(B=(2097151&gA)<<11|W>>>21)|0,I=g+IA|0,CA=gA,fA=I=B>>>0>gA>>>0?I+1|0:I,uA=(I=gA)- -1048576|0,pA=g=fA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+eA|0,gA=B=(g=(2097151&g)<<11|uA>>>21)+yA|0,rA=I=g>>>0>B>>>0?I+1|0:I,wA=(I=B)- -1048576|0,cA=g=rA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+tA|0,yA=I=(g=(2097151&g)<<11|wA>>>21)>>>0>(B=g+oA|0)>>>0?I+1|0:I,tA=(I=B)- -1048576|0,eA=g=yA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+hA|0,mA=oA=(g=(2097151&g)<<11|tA>>>21)+sA|0,HA=I=g>>>0>oA>>>0?I+1|0:I,I=eg(oA,I,-683901,-1),g=p+iA|0,oA=IA=I+GA|0,iA=I>>>0>IA>>>0?g+1|0:g,FA=B-(I=-2097152&tA)|0,GA=eA=yA-((I>>>0>B>>>0)+eA|0)|0,g=eg(K,q,470296,0)+EA|0,I=_A+p|0,I=g>>>0<EA>>>0?I+1|0:I,EA=((IA=g)-(B=-2097152&NA)|0)+(g=eg(x,L,654183,0))|0,IA=p+(I-((B>>>0>IA>>>0)+lA|0)|0)|0,I=eg(d,LA,-997805,-1),g=p+(g>>>0>EA>>>0?IA+1|0:IA)|0,g=I>>>0>(B=I+EA|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(mA,HA,136657,0))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,B=eg(FA,eA,-683901,-1),g=p+I|0,yA=g=B>>>0>(IA=B+IA|0)>>>0?g+1|0:g,hA=(I=IA)- -1048576|0,eA=B=g-((I>>>0<4293918720)-1|0)|0,I=(I=B>>21)+iA|0,EA=I=(g=(2097151&B)<<11|hA>>>21)>>>0>(B=g+oA|0)>>>0?I+1|0:I,tA=(I=B)- -1048576|0,g=(I=(iA=oA=EA-((I>>>0<4293918720)-1|0)|0)>>21)+bA|0,bA=lA=(oA=(2097151&iA)<<11|tA>>>21)+UA|0,oA=oA>>>0>lA>>>0?g+1|0:g,XA=B-(I=-2097152&tA)|0,VA=EA-((I>>>0>B>>>0)+iA|0)|0,JA=IA-(I=-2097152&hA)|0,PA=yA-((I>>>0>IA>>>0)+eA|0)|0,I=eg(K,q,666643,0),IA=p+(SA-(((g=-2097152&KA)>>>0>nA>>>0)+vA|0)|0)|0,IA=I>>>0>(B=I+(nA-g|0)|0)>>>0?IA+1|0:IA,I=eg(x,L,470296,0),g=p+IA|0,g=I>>>0>(B=I+B|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(d,LA,654183,0))|0,I=p+g|0,eA=IA,B=B>>>0>IA>>>0?I+1|0:I,nA=gA-(I=-2097152&wA)|0,iA=rA-((I>>>0>gA>>>0)+cA|0)|0,g=eg(v,P,470296,0),I=p,IA=g,g=eg(S,R,666643,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(N,J,654183,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,IA=eg(U,X,-997805,-1),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,g=eg(M,dA,136657,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,I=eg(V,RA,-683901,-1),g=p+IA|0,I=fA+(I>>>0>(gA=I+gA|0)>>>0?g+1|0:g)|0,I=(IA=gA+CA|0)>>>0<CA>>>0?I+1|0:I,g=(gA=IA)-(IA=-2097152&uA)|0,IA=I-((IA>>>0>gA>>>0)+pA|0)|0,I=(I=BA>>21)+IA|0,EA=BA=(gA=g)+(g=(2097151&BA)<<11|T>>>21)|0,cA=IA=(rA=I=g>>>0>BA>>>0?I+1|0:I)-(((I=BA)>>>0<4293918720)-1|0)|0,g=(2097151&IA)<<11|(_A=I- -1048576|0)>>>21,IA=(IA>>21)+iA|0,DA=BA=g+nA|0,sA=IA=g>>>0>BA>>>0?IA+1|0:IA,I=eg(BA,IA,-683901,-1),g=p+B|0,g=I>>>0>(IA=I+eA|0)>>>0?g+1|0:g,B=eg(mA,HA,-997805,-1),I=p+g|0,I=B>>>0>(IA=B+IA|0)>>>0?I+1|0:I,B=eg(FA,GA,136657,0),g=p+I|0,nA=IA=B+IA|0,gA=B>>>0>IA>>>0?g+1|0:g,g=eg(k,0,_,0),I=p,B=g,g=eg(F,0,Y,0),I=p+I|0,I=g>>>0>(B=B+g|0)>>>0?I+1|0:I,g=eg(H,0,G,0),IA=p+I|0,IA=g>>>0>(B=g+B|0)>>>0?IA+1|0:IA,I=eg(b,0,l,0),g=p+IA|0,I=g=I>>>0>(B=I+B|0)>>>0?g+1|0:g,CA=B=(g=MA>>>7&2097151)+B|0,B=g>>>0>B>>>0?I+1|0:I,I=eg(H,0,_,0),g=p,IA=I,I=eg(k,0,Y,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(b,0,G,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,BA=(I=IA)+(IA=2097151&((3&$)<<30|z>>>2))|0,I=g,iA=BA,tA=IA=(BA=I=IA>>>0>BA>>>0?I+1|0:I)-(((I=iA)>>>0<4293918720)-1|0)|0,g=(g=IA>>>21|0)+B|0,CA=IA=(I=(2097151&IA)<<11|(vA=I- -1048576|0)>>>21)+CA|0,fA=g=I>>>0>IA>>>0?g+1|0:g,lA=(I=IA)- -1048576|0,yA=B=g-((I>>>0<4293918720)-1|0)|0,I=(g=B>>>21|0)+YA|0,I=(B=aA+((2097151&B)<<11|lA>>>21)|0)>>>0<aA>>>0?I+1|0:I,aA=((IA=B)-(g=-2097152&TA)|0)+(B=eg(x,L,666643,0))|0,g=p+(I-((g>>>0>IA>>>0)+xA|0)|0)|0,g=B>>>0>aA>>>0?g+1|0:g,I=eg(d,LA,470296,0),g=p+g|0,g=I>>>0>(B=I+aA|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(DA,sA,136657,0))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,g=eg(mA,HA,654183,0),I=p+I|0,I=g>>>0>(B=g+IA|0)>>>0?I+1|0:I,g=eg(FA,GA,-997805,-1),IA=p+I|0,uA=B=g+B|0,eA=IA=g>>>0>B>>>0?IA+1|0:IA,wA=(I=B)- -1048576|0,aA=B=IA-((I>>>0<4293918720)-1|0)|0,g=(I=B>>21)+gA|0,gA=IA=(B=(2097151&B)<<11|wA>>>21)+nA|0,B=g=B>>>0>IA>>>0?g+1|0:g,nA=IA=g-(((I=IA)>>>0<4293918720)-1|0)|0,g=(2097151&IA)<<11|(hA=I- -1048576|0)>>>21,IA=(IA>>21)+PA|0,qA=pA=g+JA|0,pA=g>>>0>pA>>>0?IA+1|0:IA,IA=QA>>21,QA=(I=(2097151&QA)<<11|j>>>21)+(EA-(g=-2097152&_A)|0)|0,g=IA+(rA-((g>>>0>EA>>>0)+cA|0)|0)|0,rA=g=I>>>0>QA>>>0?g+1|0:g,cA=g=g-(((I=QA)>>>0<4293918720)-1|0)|0,SA=IA=g>>21,g=eg(MA=(2097151&g)<<11|(_A=I- -1048576|0)>>>21,IA,-683901,-1),I=p+B|0,I=g>>>0>(IA=g+gA|0)>>>0?I+1|0:I,JA=IA-(g=-2097152&hA)|0,PA=I-((g>>>0>IA>>>0)+nA|0)|0,I=eg(MA,SA,136657,0),g=p+eA|0,g=I>>>0>(B=I+uA|0)>>>0?g+1|0:g,YA=B-(I=-2097152&wA)|0,xA=g-((I>>>0>B>>>0)+aA|0)|0,B=(I=eg(d,LA,666643,0))+(CA-(g=-2097152&lA)|0)|0,g=p+(fA-((g>>>0>CA>>>0)+yA|0)|0)|0,g=I>>>0>B>>>0?g+1|0:g,IA=(I=B)+(B=eg(DA,sA,-997805,-1))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,B=(g=eg(mA,HA,470296,0))+IA|0,IA=p+I|0,IA=g>>>0>B>>>0?IA+1|0:IA,I=eg(FA,GA,654183,0),g=p+IA|0,fA=B=I+B|0,EA=I>>>0>B>>>0?g+1|0:g,gA=BA,g=eg(b,0,_,0),I=p,B=g,g=eg(H,0,Y,0),I=p+I|0,I=g>>>0>(B=B+g|0)>>>0?I+1|0:I,g=B,g=(B=O>>>5&2097151)>>>0>(IA=g+B|0)>>>0?I+1|0:I,B=2097151&Z,BA=eg(b,0,Y,0)+B|0,I=p,eA=B=(yA=I=B>>>0>BA>>>0?I+1|0:I)-(((I=BA)>>>0<4293918720)-1|0)|0,CA=IA,g=g+(IA=B>>>21|0)|0,aA=g=(I=(2097151&B)<<11|(lA=I- -1048576|0)>>>21)>>>0>(B=CA+I|0)>>>0?g+1|0:g,uA=(I=B)- -1048576|0,nA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>>21|0)+gA|0,I=(g=(2097151&g)<<11|uA>>>21)>>>0>(CA=g+iA|0)>>>0?I+1|0:I,CA=(IA=eg(DA,sA,654183,0))+((gA=CA)-(g=-2097152&vA)|0)|0,g=p+(I-((16383&tA)+(g>>>0>gA>>>0)|0)|0)|0,I=eg(mA,HA,666643,0),IA=p+(IA>>>0>CA>>>0?g+1|0:g)|0,IA=I>>>0>(gA=I+CA|0)>>>0?IA+1|0:IA,g=eg(FA,GA,470296,0),I=p+IA|0,wA=gA=g+gA|0,iA=I=g>>>0>gA>>>0?I+1|0:I,hA=(I=gA)- -1048576|0,CA=g=iA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+EA|0,tA=gA=(g=(2097151&g)<<11|hA>>>21)+fA|0,g=I=g>>>0>gA>>>0?I+1|0:I,fA=(I=gA)- -1048576|0,I=(IA=(gA=EA=g-((I>>>0<4293918720)-1|0)|0)>>21)+xA|0,EA=(EA=(2097151&gA)<<11|fA>>>21)>>>0>(YA=vA=EA+YA|0)>>>0?I+1|0:I,I=eg(MA,SA,-997805,-1);g=p+g|0,g=I>>>0>(IA=I+tA|0)>>>0?g+1|0:g,xA=IA-(I=-2097152&fA)|0,vA=g-((I>>>0>IA>>>0)+gA|0)|0,I=eg(MA,SA,654183,0),g=p+iA|0,g=I>>>0>(IA=I+wA|0)>>>0?g+1|0:g,tA=IA-(I=-2097152&hA)|0,fA=g-((I>>>0>IA>>>0)+CA|0)|0,IA=(g=eg(DA,sA,470296,0))+(B-(I=-2097152&uA)|0)|0,I=p+(aA-((16383&nA)+(I>>>0>B>>>0)|0)|0)|0,I=g>>>0>IA>>>0?I+1|0:I,B=(g=eg(FA,GA,666643,0))+IA|0,IA=p+I|0,IA=g>>>0>B>>>0?IA+1|0:IA,gA=B,B=(I=eg(DA,sA,666643,0))+(BA-(g=-2097152&lA)|0)|0,g=p+(yA-((4095&eA)+(g>>>0>BA>>>0)|0)|0)|0,iA=g=I>>>0>B>>>0?g+1|0:g,eA=(I=B)- -1048576|0,CA=BA=g-((I>>>0<4293918720)-1|0)|0,IA=(I=BA>>21)+IA|0,aA=BA=(g=(2097151&BA)<<11|eA>>>21)+gA|0,gA=IA=g>>>0>BA>>>0?IA+1|0:IA,nA=(I=BA)- -1048576|0,BA=IA=IA-((I>>>0<4293918720)-1|0)|0,g=(I=IA>>21)+fA|0,IA=g=(IA=(2097151&IA)<<11|nA>>>21)>>>0>(yA=IA+tA|0)>>>0?g+1|0:g,g=eg(MA,SA,470296,0),I=p+gA|0,I=g>>>0>(aA=g+aA|0)>>>0?I+1|0:I,g=aA-(gA=-2097152&nA)|0,gA=I-((gA>>>0>aA>>>0)+BA|0)|0,nA=g,BA=(I=eg(MA,SA,666643,0))+(B-(g=-2097152&eA)|0)|0,g=p+(iA-((g>>>0>B>>>0)+CA|0)|0)|0,I=(I=(g=I>>>0>BA>>>0?g+1|0:g)>>21)+gA|0,CA=B=nA+(g=(2097151&g)<<11|(B=BA)>>>21)|0,IA=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+IA|0,gA=B=(I=(2097151&I)<<11|B>>>21)+yA|0,B=(2097151&(IA=I>>>0>(g=B)>>>0?IA+1|0:IA))<<11|g>>>21,g=(I=IA>>21)+vA|0,aA=IA=B+xA|0,IA=(g=B>>>0>(I=IA)>>>0?g+1|0:g)>>21,g=(2097151&g)<<11|I>>>21,I=IA+EA|0,uA=B=g+YA|0,g=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+PA|0,wA=B=(I=(2097151&I)<<11|B>>>21)+JA|0,I=(I=(g=I>>>0>B>>>0?g+1|0:g)>>21)+pA|0,hA=B=(g=(2097151&g)<<11|B>>>21)+qA|0,IA=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+VA|0,tA=B=(I=(2097151&I)<<11|B>>>21)+XA|0,B=(2097151&(IA=I>>>0>(g=B)>>>0?IA+1|0:IA))<<11|g>>>21,g=(I=IA>>21)+oA|0,fA=IA=B+bA|0,IA=(g=B>>>0>(I=IA)>>>0?g+1|0:g)>>21,g=(2097151&g)<<11|I>>>21,I=IA+kA|0,pA=B=g+OA|0,g=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+ZA|0,yA=B=(I=(2097151&I)<<11|B>>>21)+jA|0,I=(g=I>>>0>B>>>0?g+1|0:g)>>21,iA=(IA=(2097151&g)<<11|B>>>21)+(g=QA-(B=-2097152&_A)|0)|0,IA=(rA-((B>>>0>QA>>>0)+cA|0)|0)+I|0,eA=iA,cA=(2097151&(IA=g>>>0>(I=iA)>>>0?IA+1|0:IA))<<11|I>>>21,EA=g=IA>>21,I=2097151&BA,B=eg(cA,g,666643,0)+I|0,g=p,iA=B,B=g=I>>>0>B>>>0?g+1|0:g,C[0|A]=iA,C[A+1|0]=(255&g)<<24|iA>>>8,BA=A,g=2097151&CA,IA=eg(cA,EA,470296,0)+g|0,I=p,I=g>>>0>IA>>>0?I+1|0:I,CA=IA,QA=(2097151&(IA=B))<<11|iA>>>21,IA=I+(g=IA>>21)|0,IA=QA>>>0>(CA=CA+QA|0)>>>0?IA+1|0:IA,QA=CA,C[BA+4|0]=(2047&IA)<<21|QA>>>11,I=IA,IA=QA,C[BA+3|0]=(7&I)<<29|IA>>>3,IA=2097151&gA,gA=eg(cA,EA,654183,0)+IA|0,g=p,g=IA>>>0>gA>>>0?g+1|0:g,IA=gA,gA=(2097151&I)<<11|QA>>>21,I=(I>>21)+g|0,g=I=gA>>>0>(CA=IA+gA|0)>>>0?I+1|0:I,C[BA+6|0]=(63&I)<<26|CA>>>6,gA=0,I=nA=2097151&QA,C[BA+2|0]=31&((65535&B)<<16|iA>>>16)|I<<5,B=2097151&aA,IA=eg(cA,EA,-997805,-1)+B|0,I=p,B=I=B>>>0>IA>>>0?I+1|0:I,I=g>>21,QA=(g=(2097151&g)<<11|CA>>>21)+IA|0,IA=I+B|0,iA=QA,IA=g>>>0>QA>>>0?IA+1|0:IA,C[BA+9|0]=(511&IA)<<23|QA>>>9,I=IA,C[BA+8|0]=(1&I)<<31|QA>>>1,QA=0,B=aA=2097151&CA,C[BA+5|0]=(524287&gA)<<13|nA>>>19|B<<2,B=2097151&uA,IA=eg(cA,EA,136657,0)+B|0,g=p,g=B>>>0>IA>>>0?g+1|0:g,B=IA,g=g+(IA=I>>21)|0,CA=B=B+(I=(2097151&I)<<11|iA>>>21)|0,g=I>>>0>B>>>0?g+1|0:g,C[BA+12|0]=(4095&g)<<20|B>>>12,B=g,I=g,g=CA,C[BA+11|0]=(15&I)<<28|g>>>4,BA=0,g=nA=2097151&iA,C[A+7|0]=(16383&QA)<<18|aA>>>14|g<<7,IA=A,g=2097151&wA,QA=eg(cA,EA,-683901,-1)+g|0,I=p,I=(I=g>>>0>QA>>>0?I+1|0:I)+(g=B>>21)|0,g=I=(B=(2097151&B)<<11|CA>>>21)>>>0>(gA=QA=B+QA|0)>>>0?I+1|0:I,C[IA+14|0]=(127&I)<<25|gA>>>7,QA=0,B=iA=2097151&CA,C[IA+10|0]=(131071&BA)<<15|nA>>>17|B<<4,B=IA,I>>=21,IA=(g=(2097151&g)<<11|gA>>>21)>>>0>(CA=g+(2097151&hA)|0)>>>0?I+1|0:I,C[B+17|0]=(1023&IA)<<22|CA>>>10,I=IA,C[B+16|0]=(3&I)<<30|CA>>>2,B=EA=2097151&gA,C[A+13|0]=(1048575&QA)<<12|iA>>>20|B<<1,g=I,I>>=21,g=(IA=(2097151&g)<<11|CA>>>21)>>>0>(gA=IA+(2097151&tA)|0)>>>0?I+1|0:I,C[(B=A)+20|0]=(8191&g)<<19|gA>>>13,I=g,g=gA,C[B+19|0]=(31&I)<<27|g>>>5,g=iA=2097151&CA,C[B+15|0]=(32767&BA)<<17|EA>>>15|g<<6,g=I,I>>=21,g=(B=(2097151&g)<<11|gA>>>21)>>>0>(EA=B+(2097151&fA)|0)>>>0?I+1|0:I,C[A+21|0]=EA,I=gA,C[A+18|0]=(262143&QA)<<14|iA>>>18|I<<3,B=g,I=g,g=EA,C[A+22|0]=(255&I)<<24|g>>>8,g=I>>21,IA=(I=(2097151&I)<<11|EA>>>21)>>>0>(gA=I+(2097151&pA)|0)>>>0?g+1|0:g,C[A+25|0]=(2047&IA)<<21|gA>>>11,I=IA,IA=gA,C[A+24|0]=(7&I)<<29|IA>>>3,g=I>>21,g=(BA=(2097151&I)<<11|gA>>>21)>>>0>(CA=BA+(2097151&yA)|0)>>>0?g+1|0:g,BA=CA,I=g,C[(IA=A)+27|0]=(63&I)<<26|BA>>>6,IA=0,g=CA=2097151&gA,C[A+23|0]=31&((65535&B)<<16|EA>>>16)|g<<5,g=I,I>>=21,I=(g=(2097151&g)<<11|BA>>>21)>>>0>(QA=g+(2097151&eA)|0)>>>0?I+1|0:I,B=QA,C[A+31|0]=(131071&I)<<15|B>>>17,C[A+30|0]=(511&I)<<23|B>>>9,C[A+29|0]=(1&I)<<31|B>>>1,I=0,gA=BA&=2097151,C[A+26|0]=(524287&IA)<<13|CA>>>19|gA<<2,C[A+28|0]=(16383&I)<<18|gA>>>14|B<<7;}(E,r+160|0,r+288|0,r+224|0),fI(r+288|0,64),fI(r+224|0,64),I&&(i[I>>2]=64,i[I+4>>2]=0),h=r+560|0,0}function X(A,I,g){var B,Q=0,E=0;if(g>>>0>=512)return s(0|A,0|I,0|g),A;B=A+g|0;A:if(3&(A^I))if(B>>>0<4)g=A;else if((Q=B-4|0)>>>0<A>>>0)g=A;else for(g=A;C[0|g]=n[0|I],C[g+1|0]=n[I+1|0],C[g+2|0]=n[I+2|0],C[g+3|0]=n[I+3|0],I=I+4|0,Q>>>0>=(g=g+4|0)>>>0;);else {I:if((0|g)<1)g=A;else if(3&A)for(g=A;;){if(C[0|g]=n[0|I],I=I+1|0,B>>>0<=(g=g+1|0)>>>0)break I;if(!(3&g))break}else g=A;if(!((Q=-4&B)>>>0<64||(E=Q+-64|0)>>>0<g>>>0))for(;i[g>>2]=i[I>>2],i[g+4>>2]=i[I+4>>2],i[g+8>>2]=i[I+8>>2],i[g+12>>2]=i[I+12>>2],i[g+16>>2]=i[I+16>>2],i[g+20>>2]=i[I+20>>2],i[g+24>>2]=i[I+24>>2],i[g+28>>2]=i[I+28>>2],i[g+32>>2]=i[I+32>>2],i[g+36>>2]=i[I+36>>2],i[g+40>>2]=i[I+40>>2],i[g+44>>2]=i[I+44>>2],i[g+48>>2]=i[I+48>>2],i[g+52>>2]=i[I+52>>2],i[g+56>>2]=i[I+56>>2],i[g+60>>2]=i[I+60>>2],I=I- -64|0,E>>>0>=(g=g- -64|0)>>>0;);if(g>>>0>=Q>>>0)break A;for(;i[g>>2]=i[I>>2],I=I+4|0,Q>>>0>(g=g+4|0)>>>0;);}if(g>>>0<B>>>0)for(;C[0|g]=n[0|I],I=I+1|0,(0|B)!=(0|(g=g+1|0)););return A}function V(A,I,g,B){var Q,E=0,a=0,r=0,o=0,e=0,t=0,f=0;if(h=Q=h-704|0,g|B)if(E=B<<3|g>>>29,r=(f=i[(a=A)+72>>2])+(e=g<<3)|0,E=E+(o=i[a+76>>2])|0,t=r,i[a+72>>2]=r,E=r>>>0<e>>>0?E+1|0:E,i[a+76>>2]=E,t=(e=(0|E)==(0|o)&f>>>0>t>>>0|E>>>0<o>>>0)+i[(a=r=a- -64|0)>>2]|0,E=i[a+4>>2],E=e>>>0>t>>>0?E+1|0:E,r=(e=B>>>29|0)+t|0,i[a>>2]=r,i[a+4>>2]=r>>>0<e>>>0?E+1|0:E,(0|(E=B))==(0|(t=0-((o=127&((7&o)<<29|f>>>3))>>>0>128)|0))&g>>>0>=(r=128-o|0)>>>0|E>>>0>t>>>0){for(a=0,E=0;C[80+(A+(e=a+o|0)|0)|0]=n[I+a|0],(0|r)!=(0|(a=a+1|0))|(0|(E=a>>>0<1?E+1|0:E))!=(0|t););if(F(A,A+80|0,Q,E=Q+640|0),I=I+r|0,!(B=B-((g>>>0<r>>>0)+t|0)|0)&(g=g-r|0)>>>0>127|B)for(;F(A,I,Q,E),I=I+128|0,!(B=B-(g>>>0<128)|0)&(g=g-128|0)>>>0>127|B;);if(g|B)for(a=0,E=0;C[80+(A+a|0)|0]=n[I+a|0],(0|g)!=(0|(a=o=a+1|0))|(0|B)!=(0|(E=o>>>0<1?E+1|0:E)););fI(Q,704);}else for(a=g,r=(g=!B&g>>>0>1|0!=(0|B))?a:1,f=g?B:0,a=0,E=0;C[80+(A+(B=a+o|0)|0)|0]=n[I+a|0],(0|r)!=(0|(a=g=a+1|0))|(0|(E=g>>>0<1?E+1|0:E))!=(0|f););return h=Q+704|0,0}function W(A,I,g,B,Q,E,n,a){A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,n|=0,a|=0;var r,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0;h=r=h-16|0,i[r+12>>2]=0,pg(a);A:{if(B){w=4&a;I:{g:{B:{for(;;){o=f;Q:{C:{for(;;){if(y=C[g+o|0],255!=(0|(t=w?LA(y):KA(y))))break C;if(!Q)break Q;if(!gg(Q,y))break B;if(!((o=o+1|0)>>>0<B>>>0))break}A=f+1|0,i[r+12>>2]=A>>>0<B>>>0?B:A;break g}if(s=(s<<6)+t|0,(t=e+6|0)>>>0<8)e=t;else {if(e=e-2|0,I>>>0<=c>>>0){i[r+12>>2]=o,i[8960]=68,o=1;break I}C[A+c|0]=s>>>e,c=c+1|0;}if((f=o+1|0)>>>0<B>>>0)continue}break}i[r+12>>2]=f;break g}i[r+12>>2]=o;}o=0;}if(!(e>>>0<=4)){A=-1;break A}}if(A=-1,!((-1<<e^-1)&s|o)&&(2&a||!(A=function(A,I,g,B,Q){var E=0,n=0,a=0;I:if(Q)for(E=i[g>>2];;){g:{if(I>>>0<=E>>>0)i[8960]=68;else {if(61==(0|(n=C[A+E|0]))){Q=Q-1|0;break g}if(B&&gg(B,n))break g;i[8960]=28;}a=-1;break I}if(E=E+1|0,i[g>>2]=E,!Q)break}return a}(g,B,r+12|0,Q,e>>>1|0)))){A=0;I:if(Q&&!((o=i[r+12>>2])>>>0>=B>>>0)){g:{for(;;){if(!gg(Q,C[g+o|0]))break g;if((0|(o=o+1|0))==(0|B))break}i[r+12>>2]=B;break I}i[r+12>>2]=o;}D=c;}}return I=i[r+12>>2],n?i[n>>2]=I+g:(0|I)!=(0|B)&&(i[8960]=28,A=-1),E&&(i[E>>2]=D),h=r+16|0,0|A}function T(A,I,g){var B,Q,C,E=0;h=B=h-16|0,Q=i[A+20>>2],i[A+20>>2]=0,C=i[A+4>>2],i[A+4>>2]=0,E=-26;A:{I:{g:switch(g-1|0){case 1:if(E=-32,XA(I,35621,9))break A;I=I+9|0;break I;case 0:break g;default:break A}if(E=-32,XA(I,35631,8))break A;I=I+8|0;}if(!XA(I,35640,3)&&(I=bA(I+3|0,B+12|0))){if(E=-26,19!=i[B+12>>2])break A;if(!XA(I,35644,3)&&(I=bA(I+3|0,B+12|0))&&(i[A+44>>2]=i[B+12>>2],!XA(I,35648,3)&&(I=bA(I+3|0,B+12|0))&&(i[A+40>>2]=i[B+12>>2],!XA(I,35652,3)&&(I=bA(I+3|0,B+12|0))&&(g=i[B+12>>2],i[A+48>>2]=g,i[A+52>>2]=g,36==(0|(g=n[0|I]))&&(i[B+12>>2]=Q,I=36==(0|g)?I+1|0:I,!W(i[A+16>>2],Q,I,YA(I),0,B+12|0,B+8|0,3)&&(i[A+20>>2]=i[B+12>>2],I=i[B+8>>2],36==(0|(g=n[0|I]))&&(i[B+12>>2]=C,I=36==(0|g)?I+1|0:I,!W(i[A>>2],C,I,YA(I),0,B+12|0,B+8|0,3)))))))){if(i[A+4>>2]=i[B+12>>2],I=i[B+8>>2],E=oA(A))break A;return h=B+16|0,n[0|I]?-32:0}}E=-32;}return h=B+16|0,E}function j(A,I){var g;for(h=g=h-192|0,H(g+144|0,I),H(g+96|0,g+144|0),H(g+96|0,g+96|0),_(g+96|0,I,g+96|0),_(g+144|0,g+144|0,g+96|0),H(g+48|0,g+144|0),_(g+96|0,g+96|0,g+48|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),5!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),10!=(0|(I=I+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),I=1;H(g,g),20!=(0|(I=I+1|0)););for(_(g+48|0,g,g+48|0),I=1;H(g+48|0,g+48|0),11!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),50!=(0|(I=I+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),I=1;H(g,g),100!=(0|(I=I+1|0)););for(_(g+48|0,g,g+48|0),I=1;H(g+48|0,g+48|0),51!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),I=1;H(g+96|0,g+96|0),6!=(0|(I=I+1|0)););_(A,g+96|0,g+144|0),h=g+192|0;}function Z(A,I){var g,B,Q,E,n,a,o,e,t,f,c=0,y=0,s=0,w=0,h=0,D=0,u=0;(y=s=i[A+60>>2])|(c=i[A+56>>2])&&(s=c,C[(w=c+A|0)- -64|0]=1,!(y=(c=c+1|0)>>>0<1?y+1|0:y)&c>>>0<=15&&EA(w+65|0,0,15-s|0),C[A+80|0]=1,S(A,A- -64|0,16,0)),t=i[A+52>>2],f=i[A+48>>2],s=i[A+44>>2],u=i[A+24>>2],h=i[A+28>>2]+(u>>>26|0)|0,c=i[A+32>>2]+(h>>>26|0)|0,e=(g=(E=(-67108864|(Q=i[A+36>>2]+(c>>>26|0)|0))+((o=(a=67108863&c)+((h=(D=67108863&h)+((y=(c=(67108863&u)+((y=i[A+20>>2]+r(Q>>>26|0,5)|0)>>>26|0)|0)+((n=5+(w=67108863&y)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>31)&c|(B=67108863&(u=(E>>>31|0)-1|0))&y,y=0,y=(c=w&g|B&n|e<<26)>>>0>(w=c+i[A+40>>2]|0)>>>0?1:y,xI(I,w),h=(c=(D=D&g|h&B)<<20|e>>>6)+s|0,s=0,s=c>>>0>h>>>0?1:s,c=y,y=s,y=c>>>0>(h=c+h|0)>>>0?y+1|0:y,xI(I+4|0,h),s=0,s=(c=(w=g&a|B&o)<<14|D>>>12)>>>0>(D=c+f|0)>>>0?1:s,c=y,y=s,y=c>>>0>(D=c+D|0)>>>0?y+1|0:y,xI(I+8|0,D),xI(s=I+12|0,y=y+(w=(I=(u&E|g&Q)<<8|w>>>18)+t|0)|0),fI(A,88);}function O(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0;var E=0,i=0,a=0,o=0,f=0,c=0,y=0,s=0,w=0;pg(Q|=0),i=(E=(B>>>0)/3|0)<<2,(E=r(E,-3)+B|0)&&(i=2&Q?(2|i)+(E>>>1|0)|0:i+4|0);A:{I:{g:{B:{if(I>>>0>i>>>0){if(!(4&Q)){if(a=0,!B)break g;Q=0,E=0;break B}if(a=0,!B)break g;for(Q=0,E=0;;){for(f=n[g+o|0]|f<<8,Q=Q+8|0;c=E,y=Q,s=A+E|0,w=CI(f>>>(Q=Q-6|0)&63),C[0|s]=w,E=E+1|0,Q>>>0>5;);if((0|(o=o+1|0))==(0|B))break}if(a=E,!Q)break g;s=A+E|0,w=CI(f<<12-y&63),C[0|s]=w,a=c+2|0;break g}OI(),e();}for(;;){for(f=n[g+o|0]|f<<8,Q=Q+8|0;c=E,y=Q,s=A+E|0,w=EI(f>>>(Q=Q-6|0)&63),C[0|s]=w,E=E+1|0,Q>>>0>5;);if((0|(o=o+1|0))==(0|B))break}a=E,Q&&(s=A+E|0,w=EI(f<<12-y&63),C[0|s]=w,a=c+2|0);}if((E=a)>>>0<=i>>>0){if(E>>>0<i>>>0)break I;i=E;break A}t(35568,35587,230,35603),e();}EA(A+E|0,61,i-E|0);}return EA(A+i|0,0,(I>>>0>(g=i+1|0)>>>0?I:g)-i|0),0|A}function z(A,I,g,B){var Q=0,E=0,a=0,r=0,o=0,e=0;A:{if((Q=i[A+56>>2])|(E=i[A+60>>2])){if(e=A,o=a=16-Q|0,o=(a=(0|(r=0-((Q>>>0>16)+E|0)|0))==(0|B)&g>>>0<a>>>0|B>>>0<r>>>0)?g:o,(a=r=a?B:r)|o){if(C[(A+Q|0)- -64|0]=n[0|I],E=1,Q=0,1!=(0|o)|a)for(;r=E+i[A+56>>2]|0,C[(A+r|0)- -64|0]=n[I+E|0],(0|o)!=(0|(E=E+1|0))|(0|(Q=E>>>0<1?Q+1|0:Q))!=(0|a););Q=i[A+56>>2],E=i[A+60>>2];}if(r=Q+o|0,Q=E+a|0,E=r,i[e+56>>2]=E,Q=E>>>0<o>>>0?Q+1|0:Q,i[e+60>>2]=Q,!Q&E>>>0<16)break A;S(A,A- -64|0,16,0),i[A+56>>2]=0,i[A+60>>2]=0,g=(Q=g)-(E=o)|0,B=B-((Q>>>0<E>>>0)+a|0)|0,I=I+E|0;}if(!B&g>>>0>=16|B&&(S(A,I,Q=-16&g,B),g&=15,B=0,I=I+Q|0),g|B){for(E=0,Q=0;e=E+i[A+56>>2]|0,C[(A+e|0)- -64|0]=n[I+E|0],(0|g)!=(0|(E=E+1|0))|(0|B)!=(0|(Q=E>>>0<1?Q+1|0:Q)););I=A,Q=g+i[A+56>>2]|0,A=B+i[A+60>>2]|0,i[I+56>>2]=Q,i[I+60>>2]=g>>>0>Q>>>0?A+1|0:A;}}}function $(A,I){var g=0,B=0,Q=0,C=0,E=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0;A:if(A&&(2!=i[A+36>>2]||(Q=i[I>>2],n[I+8|0]<2&&!Q)?(function(A,I,g){var B,Q=0,C=0,E=0;if(h=B=h-4096|0,vg(B+3072|0),vg(B+2048|0),!(!A|!I)&&(i[B+2048>>2]=i[I>>2],i[B+2052>>2]=0,i[B+2056>>2]=i[I+4>>2],i[B+2060>>2]=0,i[B+2064>>2]=n[I+8|0],i[B+2068>>2]=0,i[B+2072>>2]=i[A+16>>2],i[B+2076>>2]=0,i[B+2080>>2]=i[A+8>>2],i[B+2084>>2]=0,i[B+2088>>2]=i[A+36>>2],i[B+2092>>2]=0,i[A+20>>2]))for(I=0;(E=127&I)||(Q=i[B+2100>>2],Q=(C=i[B+2096>>2]+1|0)>>>0<1?Q+1|0:Q,i[B+2096>>2]=C,i[B+2100>>2]=Q,vg(B),vg(B+1024|0),Y(B+3072|0,B+2048|0,B),Y(B+3072|0,B,B+1024|0)),E=i[4+(C=(B+1024|0)+(E<<3)|0)>>2],i[(Q=(I<<3)+g|0)>>2]=i[C>>2],i[Q+4>>2]=E,(I=I+1|0)>>>0<a[A+20>>2];);h=B+4096|0;}(A,I,t=i[A+4>>2]),Q=i[I>>2],B=0):(t=i[A+4>>2],B=1),c=B,!((E=!((B=n[I+8|0])|Q)<<1)>>>0>=(g=i[A+20>>2])>>>0)))for(C=i[A+24>>2],g=(Q=(r(C,i[I+4>>2])+E|0)+r(g,B)|0)+((Q>>>0)%(C>>>0)|0?-1:C-1|0)|0;;){if(f=1==((Q>>>0)%(C>>>0)|0)?Q-1|0:g,c?(o=i[A>>2],g=i[o+4>>2]+(f<<10)|0):(o=i[A>>2],g=(E<<3)+t|0),B=i[g+4>>2],y=i[g>>2],g=i[A+28>>2],i[I+12>>2]=E,B=(B>>>0)%(g>>>0)|0,e=i[I+4>>2],g=n[I+8|0]?B:e,o=i[o+4>>2],s=C,w=B,C=i[I>>2],e=(o+(r(s,g=(B=C)?w:g)<<10)|0)+(FA(A,I,y,!0&(0|g)==(0|e))<<10)|0,B=o+(f<<10)|0,g=o+(Q<<10)|0,C?Y(B,e,g):b(B,e,g),(E=E+1|0)>>>0>=a[A+20>>2])break A;Q=Q+1|0,g=f+1|0,C=i[A+24>>2];}}function AA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;B=i[I+4>>2],Q=i[A+4>>2],C=i[I+8>>2],s=i[A+8>>2],E=i[I+12>>2],w=i[A+12>>2],n=i[I+16>>2],h=i[A+16>>2],a=i[I+20>>2],D=i[A+20>>2],r=i[I+24>>2],u=i[A+24>>2],o=i[I+28>>2],p=i[A+28>>2],e=i[I+32>>2],l=i[A+32>>2],t=i[I+36>>2],F=i[A+36>>2],c=(g=0-g|0)&((f=i[I>>2])^(y=i[A>>2])),i[A>>2]=c^y,y=F,F=g&(F^t),i[A+36>>2]=y^F,y=l,l=g&(l^e),i[A+32>>2]=y^l,y=p,p=g&(p^o),i[A+28>>2]=y^p,y=u,u=g&(u^r),i[A+24>>2]=y^u,y=D,D=g&(D^a),i[A+20>>2]=y^D,y=h,h=g&(h^n),i[A+16>>2]=y^h,y=w,w=g&(w^E),i[A+12>>2]=y^w,y=s,s=g&(s^C),i[A+8>>2]=y^s,y=A,A=g&(B^Q),i[y+4>>2]=A^Q,i[I+36>>2]=F^t,i[I+32>>2]=l^e,i[I+28>>2]=p^o,i[I+24>>2]=u^r,i[I+20>>2]=D^a,i[I+16>>2]=h^n,i[I+12>>2]=w^E,i[I+8>>2]=s^C,i[I+4>>2]=A^B,i[I>>2]=f^c;}function IA(A,I){var g;i[A>>2]=67108863&(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24),i[A+4>>2]=(n[I+3|0]|n[I+4|0]<<8|n[I+5|0]<<16|n[I+6|0]<<24)>>>2&67108611,i[A+8>>2]=(n[I+6|0]|n[I+7|0]<<8|n[I+8|0]<<16|n[I+9|0]<<24)>>>4&67092735,i[A+12>>2]=(n[I+9|0]|n[I+10|0]<<8|n[I+11|0]<<16|n[I+12|0]<<24)>>>6&66076671,g=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+36>>2]=0,i[A+16>>2]=g>>>8&1048575,i[A+40>>2]=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,i[A+44>>2]=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,i[A+48>>2]=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,I=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,C[A+80|0]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+52>>2]=I;}function gA(A,I,g){var B=0;A:if((0|A)!=(0|I)){if((I-A|0)-g>>>0<=0-(g<<1)>>>0)return X(A,I,g);if(B=3&(A^I),A>>>0<I>>>0){if(B)B=A;else {if(3&A)for(B=A;;){if(!g)break A;if(C[0|B]=n[0|I],I=I+1|0,g=g-1|0,!(3&(B=B+1|0)))break}else B=A;if(!(g>>>0<=3))for(;i[B>>2]=i[I>>2],I=I+4|0,B=B+4|0,(g=g-4|0)>>>0>3;);}if(g)for(;C[0|B]=n[0|I],B=B+1|0,I=I+1|0,g=g-1|0;);}else {if(!B){if(A+g&3)for(;;){if(!g)break A;if(C[0|(B=(g=g-1|0)+A|0)]=n[I+g|0],!(3&B))break}if(!(g>>>0<=3))for(;i[(g=g-4|0)+A>>2]=i[I+g>>2],g>>>0>3;);}if(!g)break A;for(;C[(g=g-1|0)+A|0]=n[I+g|0],g;);}}return A}function BA(A,I){var g,B=0;h=g=h-48|0,function(A,I){var g,B,Q,C,E,n,a,o,e=0;B=i[I+28>>2],Q=i[I+24>>2],C=i[I+20>>2],E=i[I+16>>2],n=i[I+12>>2],a=i[I+8>>2],o=i[I+4>>2],e=i[I>>2],g=i[I+36>>2],I=i[I+32>>2],e=r(((B+(Q+(C+(E+(n+(a+(o+(e+(r(g,19)+16777216>>>25|0)>>26)>>25)>>26)>>25)>>26)>>25)>>26)>>25)+I>>26)+g>>25,19)+e|0,i[A>>2]=67108863&e,e=o+(e>>26)|0,i[A+4>>2]=33554431&e,e=a+(e>>25)|0,i[A+8>>2]=67108863&e,e=n+(e>>26)|0,i[A+12>>2]=33554431&e,e=E+(e>>25)|0,i[A+16>>2]=67108863&e,e=C+(e>>26)|0,i[A+20>>2]=33554431&e,e=Q+(e>>25)|0,i[A+24>>2]=67108863&e,e=B+(e>>26)|0,i[A+28>>2]=33554431&e,I=I+(e>>25)|0,i[A+32>>2]=67108863&I,i[A+36>>2]=g+(I>>26)&33554431;}(g,I),I=i[g>>2],C[0|A]=I,C[A+2|0]=I>>>16,C[A+1|0]=I>>>8,B=i[g+4>>2],C[A+5|0]=B>>>14,C[A+4|0]=B>>>6,C[A+3|0]=B<<2|I>>>24,I=i[g+8>>2],C[A+8|0]=I>>>13,C[A+7|0]=I>>>5,C[A+6|0]=I<<3|B>>>22,B=i[g+12>>2],C[A+11|0]=B>>>11,C[A+10|0]=B>>>3,C[A+9|0]=B<<5|I>>>21,I=i[g+16>>2],C[A+15|0]=I>>>18,C[A+14|0]=I>>>10,C[A+13|0]=I>>>2,C[A+12|0]=I<<6|B>>>19,I=i[g+20>>2],C[A+16|0]=I,C[A+18|0]=I>>>16,C[A+17|0]=I>>>8,B=i[g+24>>2],C[A+21|0]=B>>>15,C[A+20|0]=B>>>7,C[A+19|0]=B<<1|I>>>24,I=i[g+28>>2],C[A+24|0]=I>>>13,C[A+23|0]=I>>>5,C[A+22|0]=I<<3|B>>>23,B=i[g+32>>2],C[A+27|0]=B>>>12,C[A+26|0]=B>>>4,C[A+25|0]=B<<4|I>>>21,I=i[g+36>>2],C[A+31|0]=I>>>18,C[A+30|0]=I>>>10,C[A+29|0]=I>>>2,C[A+28|0]=I<<6|B>>>20,h=g+48|0;}function QA(A,I,g,B){var Q=0,E=0,i=0,a=0,r=0,o=0;A:if(g|B)for(o=A+224|0,i=A+96|0,Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24;;){if(a=96+(A+Q|0)|0,r=E=256-Q|0,!B&g>>>0<=E>>>0){X(a,I,g),I=g+(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)|0,C[A+352|0]=I,C[A+353|0]=I>>>8,C[A+354|0]=I>>>16,C[A+355|0]=I>>>24;break A}if(X(a,I,E),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)+E|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,iA(A,128),l(A,i),X(i,o,128),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)-128|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,I=I+E|0,!((g=(E=g)-r|0)|(B=B-(E>>>0<r>>>0)|0)))break}return 0}function CA(A,I){var g,B=0,Q=0,E=0,i=0;for(h=g=h-464|0;Q=B<<1,i=n[I+B|0],C[Q+(g+400|0)|0]=15&i,C[(g+400|0)+(1|Q)|0]=i>>>4,32!=(0|(B=B+1|0)););for(B=0;I=((Q=(I=B)+n[0|(B=(g+400|0)+E|0)]|0)<<24)- -134217728|0,C[0|B]=Q-(I>>24&240),B=I>>28,63!=(0|(E=E+1|0)););for(C[g+463|0]=n[g+463|0]+B,zI(A),B=1;fg(g,B>>>1|0,C[(g+400|0)+B|0]),OA(g+240|0,A,g),DI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);for(JI(g+240|0,A),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),DI(A,g+240|0),B=0;fg(g,B>>>1|0,C[(g+400|0)+B|0]),OA(g+240|0,A,g),DI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);h=g+464|0;}function EA(A,I,g){var B=0,Q=0,E=0,n=0;if(g&&(C[(B=A+g|0)-1|0]=I,C[0|A]=I,!(g>>>0<3||(C[B-2|0]=I,C[A+1|0]=I,C[B-3|0]=I,C[A+2|0]=I,g>>>0<7||(C[B-4|0]=I,C[A+3|0]=I,g>>>0<9||(Q=(B=0-A&3)+A|0,I=r(255&I,16843009),i[Q>>2]=I,i[(B=(g=g-B&-4)+Q|0)-4>>2]=I,g>>>0<9||(i[Q+8>>2]=I,i[Q+4>>2]=I,i[B-8>>2]=I,i[B-12>>2]=I,g>>>0<25||(i[Q+24>>2]=I,i[Q+20>>2]=I,i[Q+16>>2]=I,i[Q+12>>2]=I,i[B-16>>2]=I,i[B-20>>2]=I,i[B-24>>2]=I,i[B-28>>2]=I,(g=g-(n=4&Q|24)|0)>>>0<32))))))))for(B=I,E=I,I=Q+n|0;i[I+24>>2]=E,i[I+28>>2]=B,i[I+16>>2]=E,i[I+20>>2]=B,i[I+8>>2]=E,i[I+12>>2]=B,i[I>>2]=E,i[I+4>>2]=B,I=I+32|0,(g=g-32|0)>>>0>31;);return A}function iA(A,I){var g,B,Q,E=0,i=0;i=E=A- -64|0,B=1+(g=n[E+4|0]|n[E+5|0]<<8|n[E+6|0]<<16|n[E+7|0]<<24)|0,E=(I=I+(E=Q=n[0|E]|n[E+1|0]<<8|n[E+2|0]<<16|n[E+3|0]<<24)|0)>>>0<E>>>0?B:g,C[0|i]=I,C[i+1|0]=I>>>8,C[i+2|0]=I>>>16,C[i+3|0]=I>>>24,C[i+4|0]=E,C[i+5|0]=E>>>8,C[i+6|0]=E>>>16,C[i+7|0]=E>>>24,I=(E=(0|E)==(0|g)&I>>>0<Q>>>0|E>>>0<g>>>0)+(n[A+72|0]|n[A+73|0]<<8|n[A+74|0]<<16|n[A+75|0]<<24)|0,i=n[A+76|0]|n[A+77|0]<<8|n[A+78|0]<<16|n[A+79|0]<<24,E=I>>>0<E>>>0?i+1|0:i,C[A+72|0]=I,C[A+73|0]=I>>>8,C[A+74|0]=I>>>16,C[A+75|0]=I>>>24,C[A+76|0]=E,C[A+77|0]=E>>>8,C[A+78|0]=E>>>16,C[A+79|0]=E>>>24;}function nA(A,I,g,B,Q,C,E){var n,a,r,o,e=0;return h=n=h-352|0,K(n,C,E),!Q&B>>>0<=g-A>>>0|A>>>0>=g>>>0&&!(!Q&B>>>0>A-g>>>0|Q&&A>>>0>g>>>0)||(g=gA(A,g,B)),i[n+56>>2]=0,i[n+60>>2]=0,i[n+48>>2]=0,i[n+52>>2]=0,i[n+40>>2]=0,i[n+44>>2]=0,i[n+32>>2]=0,i[n+36>>2]=0,(a=!((E=(e=!Q&B>>>0>32|0!=(0|Q))?32:B)|(e=e?0:Q)))||X(n- -64|0,g,E),o=C+16|0,$I(n+32|0,n+32|0,r=E+32|0,C=r>>>0<32?e+1|0:e,o,n),lg(n+96|0,n+32|0),a||X(A,n- -64|0,E),fI(n+32|0,64),!Q&B>>>0>=33|Q&&Ag(A+E|0,C=g+E|0,(g=B)-E|0,Q-(e+(g>>>0<E>>>0)|0)|0,o,n),fI(n,32),yg(n+96|0,A,B,Q),Fg(n+96|0,I),fI(n+96|0,256),h=n+352|0,0}function aA(A,I){i[A>>2]=1634760805,i[A+4>>2]=857760878,i[A+8>>2]=2036477234,i[A+12>>2]=1797285236,i[A+16>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+20>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i[A+24>>2]=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,i[A+28>>2]=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,i[A+32>>2]=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,i[A+36>>2]=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,i[A+40>>2]=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,i[A+44>>2]=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24;}function rA(A,I,g,B,Q,C,E){var n,a,r=0,o=0;h=n=h-96|0,K(n,C,E),a=C+16|0,Vg[i[8952]](n+32|0,32,0,a,n),C=-1;A:{if(!(0|Vg[i[8946]](g,I,B,Q,n+32|0))){if(C=0,!A)break A;!Q&B>>>0<=A-I>>>0|A>>>0<=I>>>0&&!(!Q&B>>>0>I-A>>>0|Q&&A>>>0<I>>>0)||(I=gA(A,I,B)),g=(C=!Q&B>>>0>32|0!=(0|Q))?32:B,E=C=C?0:Q,g|C?(o=X(n- -64|0,I,g),C=E,$I(n+32|0,n+32|0,r=g+32|0,C=r>>>0<32?C+1|0:C,a,n),X(A,o,g)):(C=E,$I(n+32|0,n+32|0,r=g+32|0,C=r>>>0<32?C+1|0:C,a,n)),C=0,!Q&B>>>0<33||Ag((r=A)+(A=g)|0,A+I|0,B-A|0,Q-(E+(A>>>0>B>>>0)|0)|0,a,n);}fI(n,32);}return h=n+96|0,C}function oA(A){var I=0,g=0,B=0;if(!A)return -25;if(!i[A>>2])return -1;A:{I:{if(I=-2,!(a[A+4>>2]<16)&&(i[A+8>>2]||(I=-18,!i[A+12>>2]))){if(g=i[A+20>>2],!i[A+16>>2])break I;if(I=-6,!(g>>>0<8)&&(i[A+24>>2]||(I=-20,!i[A+28>>2]))&&(i[A+32>>2]||(I=-21,!i[A+36>>2]))){if(!(g=i[A+48>>2]))return -16;if(I=-17,!(g>>>0>16777215||(I=-14,(B=i[A+44>>2])>>>0<8||(I=-15,B>>>0>2097152||(I=-14,g<<3>>>0>B>>>0))))){if(!i[A+40>>2])return -12;if(A=i[A+52>>2])break A;I=-28;}}}return I}return g?-19:-6}return A>>>0>16777215?-29:0}function eA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u,p,l;f=i[I+4>>2],B=i[A+4>>2],c=i[I+8>>2],Q=i[A+8>>2],y=i[I+12>>2],C=i[A+12>>2],s=i[I+16>>2],E=i[A+16>>2],w=i[I+20>>2],n=i[A+20>>2],h=i[I+24>>2],a=i[A+24>>2],D=i[I+28>>2],r=i[A+28>>2],u=i[I+32>>2],o=i[A+32>>2],p=i[I+36>>2],e=i[A+36>>2],t=i[A>>2],l=i[I>>2]^t,I=0-g|0,i[A>>2]=t^l&I,i[A+36>>2]=I&(e^p)^e,i[A+32>>2]=I&(o^u)^o,i[A+28>>2]=I&(r^D)^r,i[A+24>>2]=I&(a^h)^a,i[A+20>>2]=I&(n^w)^n,i[A+16>>2]=I&(E^s)^E,i[A+12>>2]=I&(C^y)^C,i[A+8>>2]=I&(Q^c)^Q,i[A+4>>2]=I&(B^f)^B;}function tA(A,I){for(var g=0,B=0,Q=0,E=0,i=0,a=0,r=0,o=0;C[A+g|0]=n[(g>>>3|0)+I|0]>>>(7&g)&1,256!=(0|(g=g+1|0)););for(;;){a=(I=a)+1|0;A:if(n[0|(i=A+I|0)]&&(g=a,Q=1,!(I>>>0>254)))for(;;){I:if(E=C[0|(B=A+g|0)])if((0|(o=(r=C[0|i])+(E<<=Q)|0))<=15)C[0|i]=o,C[0|B]=0;else {if((0|(B=r-E|0))<-15)break A;for(C[0|i]=B;;){if(!n[0|(B=A+g|0)]){C[0|B]=1;break I}if(C[0|B]=0,B=g>>>0<255,g=g+1|0,!B)break}}if(Q>>>0>5)break A;if(!((g=I+(Q=Q+1|0)|0)>>>0<256))break}if(256==(0|a))break}}function fA(A,I,g,B){var Q,C,E,n,a=0;h=Q=h+-64|0,EA(Q+8|0,0,52),a=YA(A),i[Q+20>>2]=a,i[Q+36>>2]=a,i[Q+4>>2]=a,C=k(a),i[Q+32>>2]=C,E=k(a),i[Q+16>>2]=E,n=k(a),i[Q>>2]=n;A:if(!n|!C|!E||!(a=k(a)))m(C),m(E),m(n),A=-22;else {if(A=T(Q,A,B)){m(i[Q+32>>2]),m(i[Q+16>>2]),m(i[Q>>2]),m(a);break A}A=0,I=pA(i[Q+40>>2],i[Q+44>>2],i[Q+52>>2],I,g,i[Q+16>>2],i[Q+20>>2],a,i[Q+4>>2],0,0,B),m(i[Q+32>>2]),m(i[Q+16>>2]),(I||zA(a,i[Q>>2],i[Q+4>>2]))&&(A=-35),m(a),m(i[Q>>2]);}return h=Q- -64|0,A}function cA(A,I){var g,B,Q=0;h=g=h-288|0,d(B=A+40|0,I),wg(Q=A+80|0),H(g+240|0,B),_(g+192|0,g+240|0,2128),yA(g+240|0,g+240|0,Q),sA(g+192|0,g+192|0,Q),H(g+144|0,g+192|0),_(g+144|0,g+144|0,g+192|0),H(A,g+144|0),_(A,A,g+192|0),_(A,A,g+240|0),function(A,I){var g,B=0;for(h=g=h-144|0,H(g+96|0,I),H(g+48|0,g+96|0),H(g+48|0,g+48|0),_(g+48|0,I,g+48|0),_(g+96|0,g+96|0,g+48|0),H(g+96|0,g+96|0),_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),5!=(0|(B=B+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),10!=(0|(B=B+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),B=1;H(g,g),20!=(0|(B=B+1|0)););for(_(g+48|0,g,g+48|0),B=1;H(g+48|0,g+48|0),11!=(0|(B=B+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),50!=(0|(B=B+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),B=1;H(g,g),100!=(0|(B=B+1|0)););for(_(g+48|0,g,g+48|0),B=1;H(g+48|0,g+48|0),51!=(0|(B=B+1|0)););_(g+96|0,g+48|0,g+96|0),H(g+96|0,g+96|0),H(g+96|0,g+96|0),_(A,g+96|0,I),h=g+144|0;}(A,A),_(A,A,g+144|0),_(A,A,g+240|0),H(g+96|0,A),_(g+96|0,g+96|0,g+192|0),yA(g+48|0,g+96|0,g+240|0);A:{if(!RI(g+48|0)){if(sA(g,g+96|0,g+240|0),Q=-1,!RI(g))break A;_(A,A,2176);}(0|KI(A))==(n[I+31|0]>>>7|0)&&mA(A,A),_(A+120|0,A,B),Q=0;}return h=g+288|0,Q}function yA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u;B=i[g+4>>2],Q=i[I+4>>2],C=i[g+8>>2],E=i[I+8>>2],n=i[g+12>>2],a=i[I+12>>2],r=i[g+16>>2],o=i[I+16>>2],e=i[g+20>>2],t=i[I+20>>2],f=i[g+24>>2],c=i[I+24>>2],y=i[g+28>>2],s=i[I+28>>2],w=i[g+32>>2],h=i[I+32>>2],D=i[g+36>>2],u=i[I+36>>2],i[A>>2]=i[I>>2]-i[g>>2],i[A+36>>2]=u-D,i[A+32>>2]=h-w,i[A+28>>2]=s-y,i[A+24>>2]=c-f,i[A+20>>2]=t-e,i[A+16>>2]=o-r,i[A+12>>2]=a-n,i[A+8>>2]=E-C,i[A+4>>2]=Q-B;}function sA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u;B=i[g+4>>2],Q=i[I+4>>2],C=i[g+8>>2],E=i[I+8>>2],n=i[g+12>>2],a=i[I+12>>2],r=i[g+16>>2],o=i[I+16>>2],e=i[g+20>>2],t=i[I+20>>2],f=i[g+24>>2],c=i[I+24>>2],y=i[g+28>>2],s=i[I+28>>2],w=i[g+32>>2],h=i[I+32>>2],D=i[g+36>>2],u=i[I+36>>2],i[A>>2]=i[g>>2]+i[I>>2],i[A+36>>2]=D+u,i[A+32>>2]=w+h,i[A+28>>2]=y+s,i[A+24>>2]=f+c,i[A+20>>2]=e+t,i[A+16>>2]=r+o,i[A+12>>2]=n+a,i[A+8>>2]=C+E,i[A+4>>2]=B+Q;}function wA(A){var I,g=0,B=0,Q=0,E=0;for(C[11+(I=h-16|0)|0]=0,C[I+12|0]=0,C[I+13|0]=0,C[I+14|0]=0,i[I+8>>2]=0;;){for(Q=n[A+B|0],g=0;C[0|(E=(I+8|0)+g|0)]=n[0|E]|Q^n[(3232+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&n[A+31|0],A=0,g=0;C[0|(Q=(I+8|0)+g|0)]=n[0|Q]|B^n[3263+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=n[(I+8|0)+A|0]-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}function hA(A,I){var g=0,B=0,Q=0,E=0,i=0;for(EA(X(A,1952,64)- -64|0,0,293);Q=B=(g=E<<3)+A|0,g=I+g|0,i=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24,B=(n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24)^(n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24),g=(n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24)^i,C[0|Q]=g,C[Q+1|0]=g>>>8,C[Q+2|0]=g>>>16,C[Q+3|0]=g>>>24,C[Q+4|0]=B,C[Q+5|0]=B>>>8,C[Q+6|0]=B>>>16,C[Q+7|0]=B>>>24,8!=(0|(E=E+1|0)););}function DA(A,I,g,B,Q){var C,E=0;h=C=h+-64|0;A:{I:{if(E=!g,(g=YA(A))>>>0<128&&E){if(i[C+56>>2]=0,i[C+48>>2]=0,i[C+52>>2]=0,i[C+40>>2]=0,i[C+44>>2]=0,E=function(A){var I=0,g=0;return I=0,A&&(g=A,I=A,(1|A)>>>0<65536||(I=g)),g=I,!(A=k(I))|!(3&n[A-4|0])||EA(A,0,g),A}(g))break I}else i[8960]=28;A=-1;break A}i[C+32>>2]=0,i[C+36>>2]=0,i[C+8>>2]=E,i[C+16>>2]=E,i[C+20>>2]=g,i[C>>2]=E,i[C+12>>2]=g,i[C+24>>2]=0,i[C+28>>2]=0,i[C+4>>2]=g,T(C,A,Q)?(i[8960]=28,A=-1):(A=1,(0|I)==i[C+40>>2]&&(A=i[C+44>>2]!=(B>>>10|0))),m(E);}return h=C- -64|0,A}function uA(A,I){var g,B=0,Q=0,E=0,o=0;if(h=g=h-48|0,!((B=oA(A))||(B=-26,I-1>>>0>1||(E=i[A+44>>2],B=i[A+48>>2],i[g>>2]=0,Q=i[A+40>>2],i[g+28>>2]=B,i[g+12>>2]=-1,i[g+8>>2]=Q,B=((Q=E>>>0<(Q=B<<3)>>>0?Q:E)>>>0)/((E=B<<2)>>>0)|0,i[g+20>>2]=B,i[g+24>>2]=B<<2,i[g+16>>2]=r(B,E),B=i[A+52>>2],i[g+36>>2]=I,i[g+32>>2]=B,B=function(A,I){var g,B=0;return h=g=h-80|0,B=-25,!A|!I||(B=k(i[A+20>>2]<<3),i[A+4>>2]=B,B?(B=function(A,I){var g,B=0,Q=0;h=g=h-16|0,Q=-22;A:if(!(!A|!I)&&1024==(((B=I<<10)>>>0)/(I>>>0)|0)&&(I=k(12),i[A>>2]=I,I)){i[I>>2]=0,i[I+4>>2]=0,I=function(A,I){if(I>>>0>4294967168)A=48;else {if(!(I=function(A){var I=0,g=0,B=0,Q=0,C=0,E=0;return A>>>0>=4294967168?(i[8960]=48,0):(A=k(76+(B=A>>>0<11?16:A+11&-8)|0))?(I=A-8|0,63&A?(Q=(-8&(E=i[(C=A-4|0)>>2]))-(g=(A=(A=(A+63&-64)-8|0)-I>>>0>15?A:A- -64|0)-I|0)|0,3&E?(i[A+4>>2]=Q|1&i[A+4>>2]|2,i[4+(Q=A+Q|0)>>2]=1|i[Q+4>>2],i[C>>2]=g|1&i[C>>2]|2,i[A+4>>2]=1|i[A+4>>2],v(I,g)):(I=i[I>>2],i[A+4>>2]=Q,i[A>>2]=I+g)):A=I,3&(I=i[A+4>>2])&&((g=-8&I)>>>0<=B+16>>>0||(i[A+4>>2]=B|1&I|2,I=A+B|0,B=g-B|0,i[I+4>>2]=3|B,i[4+(g=A+g|0)>>2]=1|i[g+4>>2],v(I,B))),A+8|0):0}(I)))return 48;i[A>>2]=I,A=0;}return A}(g+12|0,B),i[8960]=I;I:{if(I)i[g+12>>2]=0;else if(I=i[g+12>>2])break I;m(i[A>>2]),i[A>>2]=0;break A}i[i[A>>2]>>2]=I,i[i[A>>2]+4>>2]=I,i[i[A>>2]+8>>2]=B,Q=0;}return h=g+16|0,Q}(A,i[A+16>>2]))?eI(A,i[I+56>>2]):(function(A,I,g){var B,Q=0;B=Q=h,h=Q=Q-448&-64,!A|!I||(iI(Q- -64|0,0,0,64),xI(Q+60|0,i[I+48>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+4>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+44>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+40>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,19),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,g),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+12>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+8>>2])&&(hg(Q- -64|0,g,i[I+12>>2],0),1&C[I+56|0]&&(fI(i[I+8>>2],i[I+12>>2]),i[I+12>>2]=0)),xI(Q+60|0,i[I+20>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+16>>2])&&hg(Q- -64|0,g,i[I+20>>2],0),xI(Q+60|0,i[I+28>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+24>>2])&&(hg(Q- -64|0,g,i[I+28>>2],0),2&n[I+56|0]&&(fI(i[I+24>>2],i[I+28>>2]),i[I+28>>2]=0)),xI(Q+60|0,i[I+36>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+32>>2])&&hg(Q- -64|0,g,i[I+36>>2],0),dI(Q- -64|0,A,64)),h=B;}(g,I,i[A+36>>2]),fI(g- -64|0,8),function(A,I){var g,B=0,Q=0,C=0;if(h=g=h-1024|0,i[I+28>>2])for(C=A+68|0,Q=A- -64|0;xI(Q,0),xI(C,B),J(g,1024,A,72),TA(i[i[I>>2]+4>>2]+(r(i[I+24>>2],B)<<10)|0,g),xI(Q,1),J(g,1024,A,72),TA(1024+(i[i[I>>2]+4>>2]+(r(i[I+24>>2],B)<<10)|0)|0,g),(B=B+1|0)>>>0<a[I+28>>2];);fI(g,1024),h=g+1024|0;}(g,A),fI(g,72),B=0):B=-22),h=g+80|0,B}(g,A))))){if(i[g+8>>2])for(;kA(g,o),(o=o+1|0)>>>0<a[g+8>>2];);!function(A,I){var g,B=0,Q=0;if(h=g=h-2048|0,!(!A|!I)){if(Yg(g+1024|0,(i[i[I>>2]+4>>2]+(i[I+24>>2]<<10)|0)-1024|0),a[I+28>>2]>=2)for(B=1;Q=i[I+24>>2],QI(g+1024|0,(i[i[I>>2]+4>>2]+(Q+r(B,Q)<<10)|0)-1024|0),(B=B+1|0)>>>0<a[I+28>>2];);!function(A,I){for(var g=0,B=0;tI((g=B<<3)+A|0,i[(g=I+g|0)>>2],i[g+4>>2]),128!=(0|(B=B+1|0)););}(g,g+1024|0),J(i[A>>2],i[A+4>>2],g,1024),fI(g+1024|0,1024),fI(g,1024),eI(I,i[A+56>>2]);}h=g+2048|0;}(A,g),B=0;}return h=g+48|0,B}function pA(A,I,g,B,Q,C,E,n,a,r,o,e){var t,f;return h=t=h+-64|0,(f=k(a))?(i[t+32>>2]=0,i[t+36>>2]=0,i[t+24>>2]=0,i[t+28>>2]=0,i[t+20>>2]=E,i[t+16>>2]=C,i[t+12>>2]=Q,i[t+8>>2]=B,i[t+4>>2]=a,i[t>>2]=f,i[t+56>>2]=0,i[t+52>>2]=g,i[t+48>>2]=g,i[t+44>>2]=I,i[t+40>>2]=A,(g=uA(t,e))?fI(f,a):!r|!o||!R(r,o,t,e)?(n&&X(n,f,a),fI(f,a),g=0):(fI(f,a),fI(r,o),g=-31),m(f)):g=-22,h=t- -64|0,g}function lA(A,I,g,B,Q,E){var i,a,o=0,e=0,t=0;return h=i=h-592|0,o=-1,function(A){var I=0,g=0,B=0,Q=0,C=0;for(I=32,g=1;C=(B=n[(I=I-1|0)+A|0])-(Q=n[I+3456|0])>>8&g|255&C,g&=65535+(B^Q)>>>8,I;);return 0!=(0|C)}(a=A+32|0)&&(wA(A)||function(A){var I=0,g=0;for(g=127&(-1^n[A+31|0]),I=30;g=-1^n[A+I|0]|g,I=I-1|0;);return 1&(((255&g)-1&236-n[0|A])>>>8^-1)}(Q)&&(wA(Q)||cA(i+128|0,Q)||(ig(i+384|0,E),V(i+384|0,A,32,0),V(i+384|0,Q,32,0),V(i+384|0,I,g,B),UI(i+384|0,i+320|0),G(i+320|0),function(A,I,g,B){var Q;h=Q=h-2272|0,tA(Q+2016|0,I),tA(Q+1760|0,B),FI(Q+480|0,g),JI(Q+320|0,g),DI(Q,Q+320|0),VA(Q+320|0,Q,Q+480|0),DI(Q+160|0,Q+320|0),FI(I=Q+640|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+800|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+960|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1120|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1280|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1440|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(Q+1600|0,Q+160|0),Ug(A),wg(A+40|0),wg(A+80|0),B=255;A:{for(;;){if(!(n[(g=B)+(Q+2016|0)|0]|n[(Q+1760|0)+g|0])){if(B=g-1|0,g)continue;break A}break}if(!((0|g)<0))for(;AI(Q+320|0,A),(0|(g=C[(I=g)+(Q+2016|0)|0]))>=1?(DI(Q+160|0,Q+320|0),VA(Q+320|0,Q+160|0,(Q+480|0)+r((254&g)>>>1|0,160)|0)):(0|g)>-1||(DI(Q+160|0,Q+320|0),WA(Q+320|0,Q+160|0,(Q+480|0)+r((0-g&254)>>>1|0,160)|0)),(0|(g=C[I+(Q+1760|0)|0]))>=1?(DI(Q+160|0,Q+320|0),OA(Q+320|0,Q+160|0,r((254&g)>>>1|0,120)+2272|0)):(0|g)>-1||(DI(Q+160|0,Q+320|0),ZA(Q+320|0,Q+160|0,r((0-g&254)>>>1|0,120)+2272|0)),_I(A,Q+320|0),g=I-1|0,(0|I)>0;);}h=Q+2272|0;}(i+8|0,i+320|0,i+128|0,a),nI(i+288|0,i+8|0),e=-1,t=Gg(i+288|0,A),o=((i+288|0)==(0|A)?e:t)|zA(A,i+288|0,32)))),h=i+592|0,o}function FA(A,I,g,B){var Q=0,C=0;A:if(i[I>>2])C=i[A+24>>2],Q=i[A+20>>2],B=B?i[I+12>>2]+(C+(-1^Q)|0)|0:(C-Q|0)-!i[I+12>>2]|0,C=0,3!=(0|(I=n[I+8|0]))&&(C=r(Q,I+1|0));else {if(!(Q=n[I+8|0])){B=i[I+12>>2]-1|0,C=0;break A}if(Q=r(Q,i[A+20>>2]),I=i[I+12>>2],B){B=(I+Q|0)-1|0,C=0;break A}B=Q-!I|0,C=0;}return I=C+(Q=B-1|0)|0,eg(g,0,g,0),eg(B,0,p,0),function(A,I,g){var B=0,Q=0,C=0,E=0,i=0,n=0,a=0,e=0,t=0;A:{I:{g:{B:{Q:{C:{E:{i:{n:{if(Q=I){if(!(B=g))break n;break i}return D=A-r((A>>>0)/(g>>>0)|0,g)|0,u=0,void(p=0)}if(!A)break E;break C}if(!((E=B-1|0)&B))break Q;i=0-(E=(o(B)+33|0)-o(Q)|0)|0;break g}return D=0,u=Q,void(p=0)}if((B=32-o(Q)|0)>>>0<31)break B;break I}if(D=A&E,u=0,1==(0|B))break A;return g=31&(A=B?31-o(B-1^B)|0:32),void(p=(63&A)>>>0>=32?0:I>>>g|0)}E=B+1|0,i=63-B|0;}if(B=I,C=31&(Q=63&E),Q>>>0>=32?(Q=0,C=B>>>C|0):(Q=B>>>C|0,C=((1<<C)-1&B)<<32-C|A>>>C),B=31&(i&=63),i>>>0>=32?(I=A<<B,A=0):(I=(1<<B)-1&A>>>32-B|I<<B,A<<=B),E)for(i=-1!=(0|(B=g-1|0))?0:-1;C=(a=n=C<<1|I>>>31)-(e=g&(n=i-((Q=Q<<1|C>>>31)+(B>>>0<n>>>0)|0)>>31))|0,Q=Q-(a>>>0<e>>>0)|0,I=I<<1|A>>>31,A=t|A<<1,t=1&n,E=E-1|0;);return D=C,u=Q,void(p=I<<1|A>>>31)}D=A,u=I,I=0;}p=I;}(I-(g=p)|0,(I>>>0<Q>>>0)-(I>>>0<g>>>0)|0,i[A+24>>2]),p=u,D}function GA(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,_g(r+32|0,64,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),yg(r+96|0,34688,0-E&15,0),yg(r+96|0,I,g,B),yg(r+96|0,34688,0-g&15,0),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(BI(A,I,g,B,n,1,a),Q=0)),h=r+352|0,Q}function kA(A,I){var g,B=0,Q=0,E=0;if(h=g=h-32|0,!(!A|!i[A+28>>2]))for(i[g+16>>2]=I,B=1;;){if(C[g+24|0]=Q,I=0,E=0,B)for(;i[g+28>>2]=0,B=i[g+28>>2],i[g+8>>2]=i[g+24>>2],i[g+12>>2]=B,i[g+20>>2]=I,B=i[g+20>>2],i[g>>2]=i[g+16>>2],i[g+4>>2]=B,$(A,g),(I=I+1|0)>>>0<(E=i[A+28>>2])>>>0;);if(B=E,4==(0|(Q=Q+1|0)))break}h=g+32|0;}function _A(A,I,g,B,Q,C,E,n,a,r,o){var e;return h=e=h-336|0,_g(e+16|0,64,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),yg(e+80|0,34688,0-n&15,0),BI(A,B,Q,C,r,1,o),yg(e+80|0,A,Q,C),yg(e+80|0,34688,0-Q&15,0),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0,0}function HA(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,og(r+32|0,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),yg(r+96|0,I,g,B),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(NI(A,I,g,B,n,a),Q=0)),h=r+352|0,Q}function YA(A){var I=0,g=0,B=0;A:{I:if(3&(I=A)){if(!n[0|A])return 0;for(;;){if(!(3&(I=I+1|0)))break I;if(!n[0|I])break}break A}for(;g=I,I=I+4|0,!((-1^(B=i[g>>2]))&B-16843009&-2139062144););if(!(255&B))return g-A|0;for(;B=n[g+1|0],g=I=g+1|0,B;);}return I-A|0}function bA(A,I){var g,B=0,Q=0,C=0,E=0,a=0;A:if(!(((g=n[0|A])-48&255)>>>0>9)){for(Q=g,B=A;;){if(E=B,C>>>0>429496729)break A;if((Q=(255&Q)-48|0)>>>0>(-1^(B=r(C,10)))>>>0)break A;if(C=B+Q|0,!(((Q=n[0|(B=E+1|0)])-48&255)>>>0<10))break}(0|A)==(0|B)|(48==(0|g)?(0|A)!=(0|E):0)||(i[I>>2]=C,a=B);}return a}function mA(A,I){var g,B,Q,C,E,n,a,r,o;g=i[I+4>>2],B=i[I+8>>2],Q=i[I+12>>2],C=i[I+16>>2],E=i[I+20>>2],n=i[I+24>>2],a=i[I+28>>2],r=i[I+32>>2],o=i[I+36>>2],i[A>>2]=0-i[I>>2],i[A+36>>2]=0-o,i[A+32>>2]=0-r,i[A+28>>2]=0-a,i[A+24>>2]=0-n,i[A+20>>2]=0-E,i[A+16>>2]=0-C,i[A+12>>2]=0-Q,i[A+8>>2]=0-B,i[A+4>>2]=0-g;}function vA(A,I,g){var B=0;B=I<<8&16711680|I<<24,B|=255&(g<<8|I>>>24)|65280&(g<<24|I>>>8),I=-16777216&((255&g)<<24|I>>>8)|16711680&((16777215&g)<<8|I>>>24)|g>>>8&65280|g>>>24|0,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,I=B,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24;}function UA(A,I,g){var B;B=A,g?(i[A+48>>2]=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,g=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24):(i[A+48>>2]=0,g=0),i[B+52>>2]=g,i[A+56>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+60>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24;}function SA(A,I){var g,B,Q,C,E,n,a,r,o;g=i[I+8>>2],B=i[I+12>>2],Q=i[I+16>>2],C=i[I+20>>2],E=i[I+24>>2],n=i[I+28>>2],a=i[I>>2],r=i[I+4>>2],o=i[I+36>>2],i[A+32>>2]=i[I+32>>2],i[A+36>>2]=o,i[A+24>>2]=E,i[A+28>>2]=n,i[A+16>>2]=Q,i[A+20>>2]=C,i[A+8>>2]=g,i[A+12>>2]=B,i[A>>2]=a,i[A+4>>2]=r;}function NA(A,I,g,B,Q,C,E,a,r,o,e){var t;return h=t=h-48|0,i[t+8>>2]=0,i[t>>2]=0,i[t+4>>2]=0,x(t+16|0,o,e),e=n[o+16|0]|n[o+17|0]<<8|n[o+18|0]<<16|n[o+19|0]<<24,o=n[o+20|0]|n[o+21|0]<<8|n[o+22|0]<<16|n[o+23|0]<<24,i[t+4>>2]=e,i[t+8>>2]=o,function(A,I,g,B,Q,C,E,n,a,r,o){var e;h=e=h-336|0,rg(e+16|0,64,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),yg(e+80|0,34704,0-n&15,0),SI(A,B,Q,C,r,1,o),yg(e+80|0,A,Q,C),yg(e+80|0,34704,0-Q&15,0),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0;}(A,I,g,B,Q,C,E,a,r,t,t+16|0),fI(t+16|0,32),h=t+48|0,0}function MA(A,I,g,B,Q,C,E,a,r,o){var e;return h=e=h-48|0,i[e+8>>2]=0,i[e>>2]=0,i[e+4>>2]=0,x(e+16|0,r,o),o=n[r+16|0]|n[r+17|0]<<8|n[r+18|0]<<16|n[r+19|0]<<24,r=n[r+20|0]|n[r+21|0]<<8|n[r+22|0]<<16|n[r+23|0]<<24,i[e+4>>2]=o,i[e+8>>2]=r,A=function(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,rg(r+32|0,64,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),yg(r+96|0,34704,0-E&15,0),yg(r+96|0,I,g,B),yg(r+96|0,34704,0-g&15,0),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(SI(A,I,g,B,n,1,a),Q=0)),h=r+352|0,Q}(A,I,g,B,Q,C,E,a,e,e+16|0),fI(e+16|0,32),h=e+48|0,A}function dA(A){var I;return I=n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,A=n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24,p=65280&(A<<24|I>>>8)|255&(A<<8|I>>>24)|I<<8&16711680|I<<24,-16777216&((255&A)<<24|I>>>8)|16711680&((16777215&A)<<8|I>>>24)|A>>>8&65280|A>>>24|0}function PA(A,I,g,B,Q,C,E,n,a,r,o){var e;return h=e=h-336|0,og(e+16|0,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),NI(A,B,Q,C,r,o),yg(e+80|0,A,Q,C),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0,0}function RA(A,I,g,B){var Q;if(h=Q=h-192|0,!(!g|(I-1&255)>>>0>=64|(B-1&255)>>>0>=64))return E[Q+130>>1]=257,C[Q+129|0]=B,C[Q+128|0]=I,WI(Q+128|4),tI(Q+128|8,0,0),EA(Q+144|0,0,48),hA(A,Q+128|0),EA(B+Q|0,0,128-B|0),QA(I=A,A=X(Q,g,B),128,0),fI(A,128),h=A+192|0,0;OI(),e();}function JA(A,I,g){i[A+48>>2]=g?n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24:0,i[A+52>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+56>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i[A+60>>2]=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24;}function xA(A,I,g,B,Q,C,E){var n;return h=n=h-16|0,A=EA(A,0,128),E>>>0<2147483649&&!(B|C)?E>>>0>8191&&Q|C?(cI(n,16),A=pA(Q,E>>>10|0,1,I,g,n,16,0,32,A,128,2)?-1:0):(i[8960]=28,A=-1):(i[8960]=22,A=-1),h=n+16|0,A}function LA(A){var I=0;return (0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16288^A)>>>8^-1)|62&(1+(16338^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function KA(A){var I=0;return (0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16336^A)>>>8^-1)|62&(1+(16340^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function qA(A,I){var g,B,Q=0,E=0,i=0,n=0;for(h=g=h-16|0,Q=10;n=Q,i=(I>>>0)/10|0,C[0|(E=(Q=Q-1|0)+(g+6|0)|0)]=I-r(i,10)|48,!(I>>>0<10)&&(I=i,Q););B=X(I=A,E,A=11-n|0)+A|0,C[0|B]=0,h=g+16|0;}function XA(A,I,g){var B=0,Q=0,C=0;if(!g)return 0;A:if(B=n[0|A]){for(;;){if((0|(Q=n[0|I]))==(0|B)&&!(!(g=g-1|0)|!Q)){if(I=I+1|0,B=n[A+1|0],A=A+1|0,B)continue;break A}break}C=B;}return (255&C)-n[0|I]|0}function VA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g),_(B,B,g+40|0),_(C=A+120|0,g+120|0,I+120|0),_(A,I+80|0,g+80|0),sA(Q,A,A),yA(A,E,B),sA(B,E,B),sA(E,Q,C),yA(C,Q,C),h=Q+48|0;}function WA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g+40|0),_(B,B,g),_(C=A+120|0,g+120|0,I+120|0),_(A,I+80|0,g+80|0),sA(Q,A,A),yA(A,E,B),sA(B,E,B),yA(E,Q,C),sA(C,Q,C),h=Q+48|0;}function TA(A,I){for(var g=0,B=0,Q=0,C=0;Q=(g=B<<3)+A|0,C=n[0|(g=I+g|0)]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,g=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,i[Q>>2]=C,i[Q+4>>2]=g,128!=(0|(B=B+1|0)););}function jA(A,I,g){var B;if(i[12+(B=h-16|0)>>2]=A,i[B+8>>2]=I,I=0,i[B+4>>2]=0,(0|g)>=1)for(;i[B+4>>2]=i[B+4>>2]|n[i[B+8>>2]+I|0]^n[i[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return (i[B+4>>2]-1>>>8&1)-1|0}function ZA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g+40|0),_(B,B,g),_(C=A+120|0,g+80|0,I+120|0),sA(Q,I=I+80|0,I),yA(A,E,B),sA(B,E,B),yA(E,Q,C),sA(C,Q,C),h=Q+48|0;}function OA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g),_(B,B,g+40|0),_(C=A+120|0,g+80|0,I+120|0),sA(Q,I=I+80|0,I),yA(A,E,B),sA(B,E,B),sA(E,Q,C),yA(C,Q,C),h=Q+48|0;}function zA(A,I,g){var B;if(i[12+(B=h-16|0)>>2]=A,i[B+8>>2]=I,I=0,C[B+7|0]=0,g)for(;C[B+7|0]=n[B+7|0]|n[i[B+8>>2]+I|0]^n[i[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return (n[B+7|0]-1>>>8&1)-1|0}function $A(A,I,g){var B,Q=0,E=0;if(h=B=h-16|0,C[B+15|0]=0,E=-1,!(0|Vg[i[8950]](A,I,g))){for(;C[B+15|0]=n[A+Q|0]|n[B+15|0],32!=(0|(Q=Q+1|0)););E=0-(n[B+15|0]-1>>>8&1)|0;}return h=B+16|0,E}function AI(A,I){var g,B,Q,C,E;h=B=h-48|0,H(A,I),H(g=A+80|0,E=I+40|0),function(A,I){var g,B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0;E=K=(W=i[I+12>>2])<<1,n=K>>31,a=K=(O=i[I+4>>2])<<1,K=eg(E,n,K,g=K>>31),X=p,q=K,k=K=gA=i[I+8>>2],V=eg(K,z=K>>31,K,z),K=p+X|0,K=(q=q+V|0)>>>0<V>>>0?K+1|0:K,V=q,B=q=BA=i[I+16>>2],o=q>>31,e=q=(QA=i[I>>2])<<1,X=eg(B,o,q,Q=q>>31),K=p+K|0,K=(q=V+X|0)>>>0<X>>>0?K+1|0:K,j=q,X=i[I+28>>2],l=q=r(X,38),U=X,V=eg(q,h=q>>31,X,_=X>>31),K=p+K|0,K=(q=j+V|0)>>>0<V>>>0?K+1|0:K,T=q,j=i[I+32>>2],Z=eg(f=q=r(j,19),c=q>>31,q=(V=i[I+24>>2])<<1,q>>31),q=p+K|0,q=Z>>>0>($=T+Z|0)>>>0?q+1|0:q,T=$,IA=i[I+36>>2],t=K=r(IA,38),C=K>>31,D=I=($=i[I+20>>2])<<1,Z=eg(K,C,I,s=I>>31),I=p+q|0,H=(K=T+Z|0)<<1,P=K=(K>>>0<Z>>>0?I+1|0:I)<<1|K>>>31,S=I=H+33554432|0,R=K=I>>>0<33554432?K+1|0:K,I=K>>26,K=(67108863&K)<<6|S>>>26,q=eg(a,g,B,o),Z=p,T=K,u=K=gA<<1,CA=W,W=eg(K,w=K>>31,W,Y=W>>31),K=p+Z|0,K=(q=W+q|0)>>>0<W>>>0?K+1|0:K,gA=$,W=(Z=eg($,F=$>>31,e,Q))+q|0,q=p+K|0,q=W>>>0<Z>>>0?q+1|0:q,BA=W,N=K=X<<1,W=eg(f,c,K,b=K>>31),K=p+q|0,K=(X=BA+W|0)>>>0<W>>>0?K+1|0:K,q=X,W=V,X=eg(t,C,V,y=V>>31),K=p+K|0,K=(q=q+X|0)>>>0<X>>>0?K+1|0:K,X=q,I=I+(q=K<<1|q>>>31)|0,EA=K=T+(X<<=1)|0,K=K>>>0<X>>>0?I+1|0:I,J=I=EA+16777216|0,I=(33554431&(K=I>>>0<16777216?K+1|0:K))<<7|I>>>25,X=K>>25,K=eg(E,n,CA,Y),q=p,T=I,I=(Z=eg(B,o,u,w))+K|0,K=p+q|0,K=I>>>0<Z>>>0?K+1|0:K,q=eg(a,g,D,s),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(Z=eg(e,Q,V,y))+I|0,I=p+K|0,I=q>>>0<Z>>>0?I+1|0:I,Z=j,j=eg(f,c,j,G=j>>31),K=p+I|0,K=(q=j+q|0)>>>0<j>>>0?K+1|0:K,I=(j=eg(t,C,N,b))+q|0,q=p+K|0,I=((K=I)>>>0<j>>>0?q+1|0:q)<<1|K>>>31,j=K<<1,K=I+X|0,K=(q=T+j|0)>>>0<j>>>0?K+1|0:K,iA=q=(I=q)+33554432|0,X=K=q>>>0<33554432?K+1|0:K,K=-67108864&q,i[A+24>>2]=I-K,j=A,I=eg(I=r($,38),I>>31,$,F),K=p,T=I,$=eg(I=QA,q=I>>31,I,q),q=p+K|0,q=(I=T+$|0)>>>0<$>>>0?q+1|0:q,K=I,AA=I=r(V,19),m=I>>31,M=I=B<<1,I=K+(V=eg(AA,m,I,v=I>>31))|0,K=p+q|0,K=I>>>0<V>>>0?K+1|0:K,q=eg(E,n,l,h),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(V=eg(f,c,u,w))+I|0,I=p+K|0,I=q>>>0<V>>>0?I+1|0:I,V=eg(a,g,t,C),K=p+I|0,x=K=((I=q=V+q|0)>>>0<V>>>0?K+1|0:K)<<1|I>>>31,QA=I=33554432+($=I<<1)|0,BA=q=I>>>0<33554432?K+1|0:K,I=(67108863&q)<<6|I>>>26,V=q>>26,K=eg(AA,m,D,s),q=p,nA=I,I=(O=eg(e,Q,T=O,d=T>>31))+K|0,K=p+q|0,K=I>>>0<O>>>0?K+1|0:K,q=(O=eg(B,o,l,h))+I|0,I=p+K|0,I=q>>>0<O>>>0?I+1|0:I,O=eg(f,c,E,n),K=p+I|0,K=(q=O+q|0)>>>0<O>>>0?K+1|0:K,I=(O=eg(t,C,k,z))+q|0,q=p+K|0,I=((K=I)>>>0<O>>>0?q+1|0:q)<<1|K>>>31,O=K<<1,K=I+V|0,K=(q=nA+O|0)>>>0<O>>>0?K+1|0:K,O=q,(I=q+16777216|0)>>>0<16777216&&(K=K+1|0),nA=I,q=I,I=K>>25,K=(33554431&K)<<7|q>>>25,V=I,I=eg(e,Q,k,z),q=p,L=K,T=eg(a,g,T,d),K=p+q|0,K=(I=T+I|0)>>>0<T>>>0?K+1|0:K,T=eg(AA,m,W,y),q=p+K|0,q=(I=T+I|0)>>>0<T>>>0?q+1|0:q,T=eg(D,s,l,h),K=p+q|0,K=(I=T+I|0)>>>0<T>>>0?K+1|0:K,q=eg(f,c,M,v),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(T=eg(t,C,E,n))+I|0,I=p+K|0,K=(K=(I=q>>>0<T>>>0?I+1|0:I)<<1|q>>>31)+V|0,q=K=(I=L+(q<<=1)|0)>>>0<q>>>0?K+1|0:K,T=K=I+33554432|0,V=q=K>>>0<33554432?q+1|0:q,K&=-67108864,i[j+8>>2]=I-K,I=eg(u,w,gA,F),q=p,K=(AA=eg(B,o,E,n))+I|0,I=p+q|0,I=K>>>0<AA>>>0?I+1|0:I,q=(AA=eg(a,g,W,y))+K|0,K=p+I|0,K=q>>>0<AA>>>0?K+1|0:K,I=(AA=eg(e,Q,U,_))+q|0,q=p+K|0,q=I>>>0<AA>>>0?q+1|0:q,AA=eg(t,C,Z,G),K=p+q|0,K=(K=(K=(I=AA+I|0)>>>0<AA>>>0?K+1|0:K)<<1|I>>>31)+(q=X>>26)|0,q=I=(X=(67108863&X)<<6|iA>>>26)+(I<<1)|0,I=K=I>>>0<X>>>0?K+1|0:K,iA=K=q+16777216|0,X=I=K>>>0<16777216?I+1|0:I,I=-33554432&K,i[j+28>>2]=q-I,I=eg(e,Q,CA,Y),K=p,q=eg(a,g,k,z),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(W,y,l,h),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(z=eg(f,c,D,s))+I|0,I=p+K|0,I=q>>>0<z>>>0?I+1|0:I,K=(z=eg(t,C,B,o))+q|0,q=p+I|0,I=K,K=(K>>>0<z>>>0?q+1|0:q)<<1|K>>>31,q=I<<1,K=(I=V>>26)+K|0,K=(q=q+(V=(67108863&V)<<6|T>>>26)|0)>>>0<V>>>0?K+1|0:K,CA=q=(I=q)+16777216|0,V=K=q>>>0<16777216?K+1|0:K,K=-33554432&q,i[j+12>>2]=I-K,z=A,I=eg(W,y,u,w),K=p,q=eg(B,o,B,o),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(E,n,D,s),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(a,g,N,b),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(j=eg(e,Q,Z,G))+I|0,I=p+K|0,I=q>>>0<j>>>0?I+1|0:I,K=(IA=eg(t,C,j=IA,T=j>>31))+q|0,q=p+I|0,A=(I=K)<<1,K=(I=X>>25)+(K=(K>>>0<IA>>>0?q+1|0:q)<<1|K>>>31)|0,K=(q=A+(X=(33554431&X)<<7|iA>>>25)|0)>>>0<X>>>0?K+1|0:K,IA=q=(I=q)+33554432|0,X=K=q>>>0<33554432?K+1|0:K,K=-67108864&q,i[z+32>>2]=I-K,K=V>>25,q=(V=(33554431&V)<<7|CA>>>25)+(H-(I=-67108864&S)|0)|0,I=K+(P-((I>>>0>H>>>0)+R|0)|0)|0,K=I=q>>>0<V>>>0?I+1|0:I,V=I=q+33554432|0,I=((67108863&(K=I>>>0<33554432?K+1|0:K))<<6|I>>>26)+(EA=EA-(-33554432&J)|0)|0,i[z+20>>2]=I,I=-67108864&V,i[z+16>>2]=q-I,I=eg(E,n,W,y),q=p,K=(W=eg(gA,F,M,v))+I|0,I=p+q|0,I=K>>>0<W>>>0?I+1|0:I,q=(W=eg(u,w,U,_))+K|0,K=p+I|0,K=q>>>0<W>>>0?K+1|0:K,I=(W=eg(a,g,Z,G))+q|0,q=p+K|0,q=I>>>0<W>>>0?q+1|0:q,W=eg(e,Q,j,T),K=p+q|0,K=(K=(K=(I=W+I|0)>>>0<W>>>0?K+1|0:K)<<1|I>>>31)+(q=X>>26)|0,K=(I=(X=(67108863&X)<<6|IA>>>26)+(I<<1)|0)>>>0<X>>>0?K+1|0:K,q=I,X=I,I=K,I=(K=q+16777216|0)>>>0<16777216?I+1|0:I,q=-33554432&K,i[z+36>>2]=X-q,V=O-(-33554432&nA)|0,I=(K=eg((33554431&I)<<7|K>>>25,I>>25,19,0))+($-(q=-67108864&QA)|0)|0,q=p+(x-((q>>>0>$>>>0)+BA|0)|0)|0,q=I>>>0<K>>>0?q+1|0:q,K=I,I=q,I=((67108863&(I=(q=K+33554432|0)>>>0<33554432?I+1|0:I))<<6|q>>>26)+V|0,i[z+4>>2]=I,A=-67108864&q,i[z>>2]=K-A;}(C=A+120|0,I+80|0),sA(Q=A+40|0,I,E),H(B,Q),sA(Q,g,A),yA(g,g,A),yA(A,B,Q),yA(C,C,g),h=B+48|0;}function II(A){var I,g;return (A=(I=i[8943])+(g=A+3&-4)|0)>>>0<=I>>>0&&(0|g)>=1||A>>>0>Wg()<<16>>>0&&!(0|w(0|A))?(i[8960]=48,-1):(i[8943]=A,I)}function gI(A,I){var g;return h=g=h+-64|0,(I-1&255)>>>0>=64&&(OI(),e()),C[g+3|0]=1,C[g+1|0]=0,C[g+2|0]=1,C[0|g]=I,WI(4|g),tI(8|g,0,0),EA(g+16|0,0,48),hA(A,g),h=g- -64|0,0}function BI(A,I,g,B,Q,C,E){var i=0,n=0;i=B,1==(((i=(n=g+63|0)>>>0<63?i+1|0:i)>>>6|0)+(0!=(0|(i=(63&i)<<26|n>>>6)))|0)&(n=0-i|0)>>>0<C>>>0&&(OI(),e()),SI(A,I,g,B,Q,C,E);}function QI(A,I){for(var g=0,B=0,Q=0,C=0;B=(g=Q<<3)+A|0,C=i[(g=I+g|0)>>2],g=i[B+4>>2]^i[g+4>>2],i[B>>2]=i[B>>2]^C,i[B+4>>2]=g,128!=(0|(Q=Q+1|0)););}function CI(A){var I,g;return 95&(1+(32704^A)>>>8^-1)|45&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function EI(A){var I,g;return 47&(1+(16320^A)>>>8^-1)|43&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function iI(A,I,g,B){var Q=0;Q=-1;A:if(!(g>>>0>64|B-1>>>0>63)){I:{if(!g||!I){if(!gI(A,255&B))break I;}if(RA(A,255&B,I,255&g))break A}Q=0;}return Q}function nI(A,I){var g,B,Q;h=g=h-144|0,j(g+96|0,I+80|0),_(g+48|0,I,g+96|0),_(g,I+40|0,g+96|0),BA(A,g),B=A,Q=KI(g+48|0)<<7^n[A+31|0],C[B+31|0]=Q,h=g+144|0;}function aI(A,I){var g,B=0;if(C[15+(g=h-16|0)|0]=0,I)for(;C[g+15|0]=n[A+B|0]|n[g+15|0],(0|(B=B+1|0))!=(0|I););return n[g+15|0]-1>>>8&1}function rI(A,I,g,B){var Q;return B=I+B|0,B=(Q=A+g|0)>>>0<g>>>0?B+1|0:B,g=eg(A<<1&-2,1&(I=I<<1|A>>>31),g,0),A=p+B|0,p=A=(I=g+Q|0)>>>0<g>>>0?A+1|0:A,I}function oI(A,I,g){var B,Q=0;if(B=g>>>3|0)for(g=0;vA((Q=g<<3)+A|0,i[(Q=I+Q|0)>>2],i[Q+4>>2]),(0|B)!=(0|(g=g+1|0)););}function eI(A,I){var g=0;!function(A,I){I&&((I=i[A>>2])&&fI(i[I+4>>2],i[A+16>>2]<<10),(I=i[A+4>>2])&&fI(I,i[A+20>>2]<<3));}(A,4&I),m(i[A+4>>2]),i[A+4>>2]=0,(I=i[A>>2])&&(g=i[I>>2])&&m(g),m(I),i[A>>2]=0;}function tI(A,I,g){C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24;}function fI(A,I){var g;if(i[12+(g=h-16|0)>>2]=A,I)for(A=0;C[i[g+12>>2]+A|0]=0,(0|I)!=(0|(A=A+1|0)););}function cI(A,I){A|=0;var g=0,B=0,Q=0;if(I|=0)for(;B=A+g|0,Q=YI(),C[0|B]=Q,(0|(g=g+1|0))!=(0|I););}function yI(A,I,g,B,Q){var C,E;return A|=0,I|=0,g|=0,B|=0,h=C=(E=h)-128&-64,IA(C,Q|=0),z(C,I,g,B),Z(C,A),h=E,0}function sI(A){var I=0,g=0,B=0;for(I=1;I=n[0|(B=A+g|0)]+I|0,C[0|B]=I,I=I>>>8|0,4!=(0|(g=g+1|0)););}function wI(A,I,g,B,Q,C,E,i){var n,a=0;return h=n=h-32|0,a=-1,jI(n,E,i)||(a=Qg(A,I,g,B,Q,C,n),fI(n,32)),h=n+32|0,a}function hI(A,I,g,B,Q,C,E,i){var n,a=0;return h=n=h-32|0,a=-1,jI(n,E,i)||(a=Cg(A,I,g,B,Q,C,n),fI(n,32)),h=n+32|0,a}function DI(A,I){var g,B,Q;_(A,I,g=I+120|0),_(A+40|0,B=I+40|0,Q=I+80|0),_(A+80|0,Q,g),_(A+120|0,I,B);}function uI(A,I,g,B,Q,C,E){return !B&g>>>0>=16|B?hI(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C,E):-1}function pI(A,I){for(var g=0,B=0;C[0|(B=A+g|0)]=n[0|B]^n[I+g|0],8!=(0|(g=g+1|0)););}function lI(A,I,g){var B,Q;h=B=(Q=h)-384&-64,qI(B,0,0,24),sg(B,I,32,0),sg(B,g,32,0),TI(B,A,24),h=Q;}function FI(A,I){var g;sA(A,g=I+40|0,I),yA(A+40|0,g,I),SA(A+80|0,I+80|0),_(A+120|0,I+120|0,2224);}function GI(A,I,g,B,Q,C,E){return I-1>>>0>63|E>>>0>64?-1:function(A,I,g,B,Q,C,E){var i,n=0;if(i=n=h,h=n=n-384&-64,!(!A|(B-1&255)>>>0>=64|(Q|C?!I:0)|E>>>0>=65|(E?!g:0)))return E?RA(n,B,g,E):gI(n,B),QA(n,I,Q,C),M(n,A,B),h=i,0;OI(),e();}(A,g,C,255&I,B,Q,255&E)}function kI(A,I,g,B,Q,C,E){return !B&g>>>0>=4294967280|B&&(OI(),e()),wI(A+16|0,A,I,g,B,Q,C,E)}function _I(A,I){var g;_(A,I,g=I+120|0),_(A+40|0,I+40|0,I=I+80|0),_(A+80|0,I,g);}function HI(A){var I;return I=n[0|A]|n[A+1|0]<<8,A=n[A+2|0],p=A>>>16|0,I|A<<16}function YI(){var A,I;return h=A=h-16|0,C[A+15|0]=0,I=0|f(1024,A+15|0,0),h=A+16|0,0|I}function bI(A,I,g,B,Q){var E;return h=E=h-416|0,function(A,I){var g,B=0,Q=0;for(h=g=h-192|0,MI(A),EA(g- -64|0,54,128),C[g+64|0]=54^n[0|I],B=1;C[0|(Q=(g- -64|0)+B|0)]=n[0|Q]^n[I+B|0],32!=(0|(B=B+1|0)););for(V(A,g- -64|0,128,0),MI(A=A+208|0),EA(g- -64|0,92,128),C[g+64|0]=92^n[0|I],B=1;C[0|(Q=(g- -64|0)+B|0)]=n[0|Q]^n[I+B|0],32!=(0|(B=B+1|0)););V(A,g- -64|0,128,0),fI(g- -64|0,128),fI(g,64),h=g+192|0;}(E,Q),V(E,I,g,B),function(A,I){var g,B=0;h=g=h+-64|0,function(A,I){var g;h=g=h+-64|0,UI(A,g),V(A=A+208|0,g,64,0),UI(A,I),fI(g,64),h=g- -64|0;}(A,g),B=i[g+28>>2],A=i[g+24>>2],C[I+24|0]=A,C[I+25|0]=A>>>8,C[I+26|0]=A>>>16,C[I+27|0]=A>>>24,C[I+28|0]=B,C[I+29|0]=B>>>8,C[I+30|0]=B>>>16,C[I+31|0]=B>>>24,B=i[g+20>>2],A=i[g+16>>2],C[I+16|0]=A,C[I+17|0]=A>>>8,C[I+18|0]=A>>>16,C[I+19|0]=A>>>24,C[I+20|0]=B,C[I+21|0]=B>>>8,C[I+22|0]=B>>>16,C[I+23|0]=B>>>24,B=i[g+12>>2],A=i[g+8>>2],C[I+8|0]=A,C[I+9|0]=A>>>8,C[I+10|0]=A>>>16,C[I+11|0]=A>>>24,C[I+12|0]=B,C[I+13|0]=B>>>8,C[I+14|0]=B>>>16,C[I+15|0]=B>>>24,B=i[g+4>>2],A=i[g>>2],C[0|I]=A,C[I+1|0]=A>>>8,C[I+2|0]=A>>>16,C[I+3|0]=A>>>24,C[I+4|0]=B,C[I+5|0]=B>>>8,C[I+6|0]=B>>>16,C[I+7|0]=B>>>24,h=g- -64|0;}(E,A),h=E+416|0,0}function mI(A,I,g,B){var Q;return h=Q=h-208|0,MI(Q),V(Q,I,g,B),UI(Q,A),h=Q+208|0,0}function vI(A,I){var g=0;return (-1>>>(g=31&I)&A)<<g|((g=A)&-1<<(A=0-I&31))>>>A}function UI(A,I){var g;h=g=h-704|0,function(A,I){var g,B=0;(g=i[A+72>>2]>>>3&127)>>>0<=111?X(80+(A+g|0)|0,35424,112-g|0):(X((B=A+80|0)+g|0,35424,128-g|0),F(A,B,I,I+640|0),EA(B,0,112)),oI(A+192|0,A- -64|0,16),F(A,A+80|0,I,I+640|0);}(A,g),oI(I,A,64),fI(g,704),fI(A,208),h=g+704|0;}function SI(A,I,g,B,Q,C,E){1==(0|B)|B>>>0>1&&(OI(),e()),Vg[i[8957]](A,I,g,B,Q,C,E);}function NI(A,I,g,B,Q,C){1==(0|B)|B>>>0>1&&(OI(),e()),Vg[i[8956]](A,I,g,B,Q,1,0,C);}function MI(A){i[A+64>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,X(A,34720,64);}function dI(A,I,g){return g>>>0>=256&&(t(2016,2036,107,2089),e()),M(A,I,255&g)}function PI(){var A;h=A=h-16|0,C[A+15|0]=0,f(1062,A+15|0,0),h=A+16|0;}function RI(A){var I;return h=I=h-32|0,BA(I,A),A=aI(I,32),h=I+32|0,A}function JI(A,I){var g;h=g=h-128|0,function(A,I){SA(A,I),SA(A+40|0,I+40|0),SA(A+80|0,I+80|0);}(g+8|0,I),AI(A,g+8|0),h=g+128|0;}function xI(A,I){C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24;}function LI(A,I,g){eA(A,I,g),eA(A+40|0,I+40|0,g),eA(A+80|0,I+80|0,g);}function KI(A){var I;return h=I=h-32|0,BA(I,A),h=I+32|0,1&C[0|I]}function qI(A,I,g,B){return 0|iI(A|=0,I|=0,g|=0,B|=0)}function XI(A){C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0;}function VI(A){i[A>>2]=0,i[A+4>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0;}function WI(A){C[0|A]=0,C[A+1|0]=0,C[A+2|0]=0,C[A+3|0]=0;}function TI(A,I,g){return 0|dI(A|=0,I|=0,g|=0)}function jI(A,I,g){return 0|function(A,I,g){var B,Q=0;return h=B=h-32|0,Q=-1,$A(B,g,I)||(Q=K(A,35552,B)),h=B+32|0,Q}(A|=0,I|=0,g|=0)}function ZI(A,I,g){return 0|$A(A|=0,I|=0,g|=0)}function OI(){var A;(A=i[9105])&&Vg[0|A](),c(),e();}function zI(A){Ug(A),wg(A+40|0),wg(A+80|0),Ug(A+120|0);}function $I(A,I,g,B,Q,C){Vg[i[8953]](A,I,g,B,Q,0,0,C);}function Ag(A,I,g,B,Q,C){Vg[i[8953]](A,I,g,B,Q,1,0,C);}function Ig(A,I){return A|=0,cI(I|=0,32),0|cg(A,I)}function gg(A,I){return A=function(A,I){var g=0,B=0;A:{if(B=255&I){if(3&A)for(;;){if(!(g=n[0|A])|(0|g)==(255&I))break A;if(!(3&(A=A+1|0)))break}I:if(!((-1^(g=i[A>>2]))&g-16843009&-2139062144))for(B=r(B,16843009);;){if((-1^(g^=B))&g-16843009&-2139062144)break I;if(g=i[A+4>>2],A=A+4|0,g-16843009&(-1^g)&-2139062144)break}for(;(B=n[0|(g=A)])&&(A=g+1|0,(0|B)!=(255&I)););return g}return YA(A)+A|0}return A}(A,I),n[0|A]==(255&I)?A:0}function Bg(A,I,g,B,Q,C){return q(A,I,g,B,Q,C,0),0}function Qg(A,I,g,B,Q,C,E){return nA(A,I,g,B,Q,C,E)}function Cg(A,I,g,B,Q,C,E){return rA(A,I,g,B,Q,C,E)}function Eg(A,I,g,B,Q,C,E){return GI(A,I,g,B,Q,C,E)}function ig(A,I){MI(A),I&&V(A,35728,34,0);}function ng(A,I,g,B,Q){return lA(A,I,g,B,Q,0)}function ag(A,I){return 0|cg(A|=0,I|=0)}function rg(A,I,g,B){Vg[i[8955]](A,I,0,g,B);}function og(A,I,g){Vg[i[8954]](A,64,0,I,g);}function eg(A,I,g,B){return function(A,I,g,B){var Q,C,E,i,n=0,a=0;return i=r(n=g>>>16|0,a=A>>>16|0),n=(65535&(a=((E=r(Q=65535&g,C=65535&A))>>>16|0)+r(a,Q)|0))+r(n,C)|0,A=(r(I,g)+i|0)+r(A,B)+(a>>>16)+(n>>>16)|0,p=A,65535&E|n<<16}(A,I,g,B)}function tg(A,I){return (255&(A^I))-1>>>31|0}function fg(A,I,g){!function(A,I,g){var B,Q;h=B=h-128|0,wg(A),wg(A+40|0),Ug(A+80|0),LI(A,I,tg(g=g-((0-(Q=(128&g)>>>7|0)&g)<<1)<<24>>24,1)),LI(A,I+120|0,tg(g,2)),LI(A,I+240|0,tg(g,3)),LI(A,I+360|0,tg(g,4)),LI(A,I+480|0,tg(g,5)),LI(A,I+600|0,tg(g,6)),LI(A,I+720|0,tg(g,7)),LI(A,I+840|0,tg(g,8)),SA(B+8|0,A+40|0),SA(B+48|0,A),mA(B+88|0,A+80|0),LI(A,B+8|0,Q),h=B+128|0;}(A,r(I,960)+3488|0,g);}function cg(A,I){return 0|Vg[i[8951]](A,I)}function yg(A,I,g,B){Vg[i[8948]](A,I,g,B);}function sg(A,I,g,B){return hg(A,I,g,B)}function wg(A){i[A>>2]=1,EA(A+4|0,0,36);}function hg(A,I,g,B){return QA(A,I,g,B)}function Dg(A,I,g){return function(A,I,g){var B=0,Q=0,C=0,E=0;return B=31&(C=E=63&g),C>>>0>=32?B=-1>>>B|0:(Q=-1>>>B|0,B=(1<<B)-1<<32-B|-1>>>B),C=B&A,B=I&Q,Q=31&E,E>>>0>=32?(B=C<<Q,E=0):(B=(1<<Q)-1&C>>>32-Q|B<<Q,E=C<<Q),C=B,g=31&(B=Q=0-g&63),B>>>0>=32?(B=-1<<g,g=0):(B=(1<<g)-1&-1>>>32-g|-1<<g,g=-1<<g),A&=g,B&=I,I=31&Q,Q>>>0>=32?(g=0,A=B>>>I|0):(g=B>>>I|0,A=((1<<I)-1&B)<<32-I|A>>>I),p=g|C,A|E}(A,I,g)}function ug(A,I,g){return function(A,I,g){var B=0,Q=0,C=0,E=0,i=0;return B=31&(E=63&g),E>>>0>=32?(Q=-1<<B,i=0):(Q=(1<<B)-1&-1>>>32-B|-1<<B,i=-1<<B),i&=A,B=I&Q,C=31&E,E>>>0>=32?(Q=0,E=B>>>C|0):(Q=B>>>C|0,E=((1<<C)-1&B)<<32-C|i>>>C),i=Q,C=31&(B=0-g&63),B>>>0>=32?(Q=0,g=-1>>>C|0):(Q=-1>>>C|0,g=(1<<C)-1<<32-C|-1>>>C),A&=g,I&=Q,Q=31&B,B>>>0>=32?(g=A<<Q,A=0):(g=(1<<Q)-1&A>>>32-Q|I<<Q,A<<=Q),p=g|i,A|E}(A,I,g)}function pg(A){1!=(-7&A)&&(OI(),e());}function lg(A,I){Vg[i[8947]](A,I);}function Fg(A,I){Vg[i[8949]](A,I);}function Gg(A,I){return jA(A,I,32)}function kg(A,I){return jA(A,I,16)}function _g(A,I,g,B){rg(A,I,g,B);}function Hg(A,I){return vI(A,I)}function Yg(A,I){X(A,I,1024);}function bg(A){cI(A|=0,32);}function mg(A,I,g){!function(A,I,g){var B,Q,C,E,i,a,r,o,e,t,f,c,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0;for(B=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,Q=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,C=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,E=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,i=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,a=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,r=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,o=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=1634760805,h=B,D=Q,b=C,u=E,H=857760878,p=e=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,l=t=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,F=f=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,_=c=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=2036477234,s=i,G=1797285236,k=o,w=r,y=a;u=Hg(g+y|0,7)^u,F=Hg(u+g|0,9)^F,m=Hg(F+u|0,13)^y,S=Hg(F+m|0,18),y=Hg(h+H|0,7)^_,Y=Hg(y+H|0,9)^w,h=Hg(y+Y|0,13)^h,_=Hg(Y+h|0,18),k=Hg(I+p|0,7)^k,D=Hg(k+I|0,9)^D,p=Hg(D+k|0,13)^p,N=Hg(D+p|0,18),w=Hg(s+G|0,7)^b,l=Hg(w+G|0,9)^l,v=Hg(l+w|0,13)^s,M=Hg(l+v|0,18),h=Hg((g^=S)+w|0,7)^h,D=Hg(h+g|0,9)^D,b=Hg(h+D|0,13)^w,g=Hg(D+b|0,18)^g,p=Hg((s=H^_)+u|0,7)^p,l=Hg(p+s|0,9)^l,u=Hg(l+p|0,13)^u,H=Hg(l+u|0,18)^s,s=Hg((I^=N)+y|0,7)^v,F=Hg(s+I|0,9)^F,_=Hg(F+s|0,13)^y,I=Hg(F+_|0,18)^I,y=Hg((G^=M)+k|0,7)^m,w=Hg(y+G|0,9)^Y,k=Hg(y+w|0,13)^k,G=Hg(w+k|0,18)^G,Y=U>>>0<18,U=U+2|0,Y;);xI(A,g+1634760805|0),xI(A+4|0,h+B|0),xI(A+8|0,D+Q|0),xI(A+12|0,b+C|0),xI(A+16|0,u+E|0),xI(A+20|0,H+857760878|0),xI(A+24|0,p+e|0),xI(A+28|0,l+t|0),xI(A+32|0,F+f|0),xI(A+36|0,_+c|0),xI(A+40|0,I+2036477234|0),xI(A+44|0,s+i|0),xI(A+48|0,y+a|0),xI(A+52|0,w+r|0),xI(A+56|0,k+o|0),xI(A+60|0,G+1797285236|0);}(A,I,g);}function vg(A){EA(A,0,1024);}function Ug(A){EA(A,0,40);}function Sg(){return 16}function Ng(){return 32}function Mg(){return 24}function dg(){return -17}function Pg(){return 64}function Rg(){return 1}function Jg(){return 2}function xg(){return 8}function Lg(){return 0}function Kg(){return -1}function qg(){return 3}Q(I=n,1024,"InsgcmV0dXJuIE1vZHVsZS5nZXRSYW5kb21WYWx1ZSgpOyB9IgB7IGlmIChNb2R1bGUuZ2V0UmFuZG9tVmFsdWUgPT09IHVuZGVmaW5lZCkgeyB0cnkgeyB2YXIgd2luZG93XyA9ICdvYmplY3QnID09PSB0eXBlb2Ygd2luZG93ID8gd2luZG93IDogc2VsZjsgdmFyIGNyeXB0b18gPSB0eXBlb2Ygd2luZG93Xy5jcnlwdG8gIT09ICd1bmRlZmluZWQnID8gd2luZG93Xy5jcnlwdG8gOiB3aW5kb3dfLm1zQ3J5cHRvOyB2YXIgcmFuZG9tVmFsdWVzU3RhbmRhcmQgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IG5ldyBVaW50MzJBcnJheSgxKTsgY3J5cHRvXy5nZXRSYW5kb21WYWx1ZXMoYnVmKTsgcmV0dXJuIGJ1ZlswXSA+Pj4gMDsgfTsgcmFuZG9tVmFsdWVzU3RhbmRhcmQoKTsgTW9kdWxlLmdldFJhbmRvbVZhbHVlID0gcmFuZG9tVmFsdWVzU3RhbmRhcmQ7IH0gY2F0Y2ggKGUpIHsgdHJ5IHsgdmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpOyB2YXIgcmFuZG9tVmFsdWVOb2RlSlMgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IGNyeXB0b1sncmFuZG9tQnl0ZXMnXSg0KTsgcmV0dXJuIChidWZbMF0gPDwgMjQgfCBidWZbMV0gPDwgMTYgfCBidWZbMl0gPDwgOCB8IGJ1ZlszXSkgPj4+IDA7IH07IHJhbmRvbVZhbHVlTm9kZUpTKCk7IE1vZHVsZS5nZXRSYW5kb21WYWx1ZSA9IHJhbmRvbVZhbHVlTm9kZUpTOyB9IGNhdGNoIChlKSB7IHRocm93ICdObyBzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZm91bmQnOyB9IH0gfSB9AExpYnNvZGl1bURSR2J1Zl9sZW4gPD0gU0laRV9NQVgAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwByYW5kb21ieXRlcwBTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGJsYWtlMmJfZmluYWwAAAAAAAAAAAjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FtvdXRsZW4gPD0gVUlOVDhfTUFYAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAAAAAAAAAtnhZ/4Vy0wC9bhX/DwpqACnAAQCY6Hn/vDyg/5lxzv8At+L+tA1I/wAAAAAAAAAAsKAO/tPJhv+eGI8Af2k1AGAMvQCn1/v/n0yA/mpl4f8e/AQAkgyu"),Q(I,2224,"WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"),Q(I,2272,"hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"),Q(I,3264,"AQ=="),Q(I,3296,"JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="),Q(I,3487,""),Q(I,34460,"AQ=="),Q(I,34496,"AQ=="),Q(I,34528,"4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="),Q(I,34720,"CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"),Q(I,35568,"YjY0X3BvcyA8PSBiNjRfbGVuAHNvZGl1bS9jb2RlY3MuYwBzb2RpdW1fYmluMmJhc2U2NAAkYXJnb24yaWQAJGFyZ29uMmkAJHY9ACRtPQAsdD0ALHA9ACRhcmdvbjJpZCR2PQAkYXJnb24yaSR2PQAkYXJnb24yaWQkACRhcmdvbjJpJA=="),Q(I,35728,"U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMBADEuMC4xOA=="),Q(I,35772,"UI5QAABAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAAN");var Xg,Vg=((Xg=[null,yI,function(A,I,g,B,Q){var C;return A|=0,h=C=h-16|0,yI(C,I|=0,g|=0,B|=0,Q|=0),A=kg(A,C),h=C+16|0,0|A},function(A,I){return IA(A|=0,I|=0),0},function(A,I,g,B){return z(A|=0,I|=0,g|=0,B|=0),0},function(A,I){return Z(A|=0,I|=0),0},function(A,I,g){A|=0,I|=0;var B,Q=0,E=0;if(h=B=h-336|0,Q=-1,!function(A){var I,g=0,B=0,Q=0,E=0;for(C[11+(I=h-16|0)|0]=0,C[I+12|0]=0,C[I+13|0]=0,C[I+14|0]=0,i[I+8>>2]=0;;){for(Q=n[A+B|0],g=0;C[0|(E=(I+8|0)+g|0)]=n[0|E]|Q^n[(34464+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&n[A+31|0],A=0,g=0;C[0|(Q=(I+8|0)+g|0)]=n[0|Q]|B^n[34495+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=n[(I+8|0)+A|0]-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}(g|=0)){for(Q=0;C[A+Q|0]=n[I+Q|0],32!=(0|(Q=Q+1|0)););for(C[0|A]=248&n[0|A],C[A+31|0]=63&n[A+31|0]|64,d(B+288|0,g),wg(B+240|0),Ug(B+192|0),SA(B+144|0,B+288|0),wg(B+96|0),g=254,I=0;Q=I,E=g,AA(B+240|0,B+144|0,Q^=I=n[(g>>>3|0)+A|0]>>>(7&g)&1),AA(B+192|0,B+96|0,Q),g=g-1|0,yA(B+48|0,B+144|0,B+96|0),yA(B,B+240|0,B+192|0),sA(B+240|0,B+240|0,B+192|0),sA(B+192|0,B+144|0,B+96|0),_(B+96|0,B+48|0,B+240|0),_(B+192|0,B+192|0,B),H(B+48|0,B),H(B,B+240|0),sA(B+144|0,B+96|0,B+192|0),yA(B+192|0,B+96|0,B+192|0),_(B+240|0,B,B+48|0),yA(B,B,B+48|0),H(B+192|0,B+192|0),P(B+96|0,B),H(B+144|0,B+144|0),sA(B+48|0,B+48|0,B+96|0),_(B+96|0,B+288|0,B+192|0),_(B+192|0,B,B+48|0),E;);AA(B+240|0,B+144|0,I),AA(B+192|0,B+96|0,I),j(B+192|0,B+192|0),_(B+240|0,B+240|0,B+192|0),BA(A,B+240|0),Q=0;}return h=B+336|0,0|Q},function(A,I){A|=0,I|=0;var g,B=0;for(h=g=h-208|0;C[A+B|0]=n[I+B|0],32!=(0|(B=B+1|0)););return C[0|A]=248&n[0|A],C[A+31|0]=63&n[A+31|0]|64,CA(g+48|0,A),function(A,I,g){var B;h=B=h-96|0,sA(B+48|0,g,I),yA(B,g,I),j(B,B),_(A,B+48|0,B),h=B+96|0;}(g,g+88|0,g+128|0),BA(A,g),h=g+208|0,0},function(A,I,g,B,Q){A|=0,B|=0,Q|=0;var E,a=0;if(h=E=h-112|0,(I|=0)|(g|=0)){a=n[Q+28|0]|n[Q+29|0]<<8|n[Q+30|0]<<16|n[Q+31|0]<<24,i[E+24>>2]=n[Q+24|0]|n[Q+25|0]<<8|n[Q+26|0]<<16|n[Q+27|0]<<24,i[E+28>>2]=a,a=n[Q+20|0]|n[Q+21|0]<<8|n[Q+22|0]<<16|n[Q+23|0]<<24,i[E+16>>2]=n[Q+16|0]|n[Q+17|0]<<8|n[Q+18|0]<<16|n[Q+19|0]<<24,i[E+20>>2]=a,a=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[E>>2]=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,i[E+4>>2]=a,a=n[Q+12|0]|n[Q+13|0]<<8|n[Q+14|0]<<16|n[Q+15|0]<<24,i[E+8>>2]=n[Q+8|0]|n[Q+9|0]<<8|n[Q+10|0]<<16|n[Q+11|0]<<24,i[E+12>>2]=a,Q=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24,B=n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24,i[E+104>>2]=0,i[E+108>>2]=0,i[E+96>>2]=Q,i[E+100>>2]=B;A:{if(!g&I>>>0>=64|g){for(;;){for(mg(A,E+96|0,E),Q=8,B=1;B=n[0|(a=(E+96|0)+Q|0)]+B|0,C[0|a]=B,B=B>>>8|0,16!=(0|(Q=Q+1|0)););if(A=A- -64|0,g=g-1|0,!(!(g=(I=I+-64|0)>>>0<4294967232?g+1|0:g)&I>>>0>63|g))break}if(!(I|g))break A}for(Q=0,mg(E+32|0,E+96|0,E);C[A+Q|0]=n[(E+32|0)+Q|0],(0|I)!=(0|(Q=Q+1|0)););}fI(E+32|0,64),fI(E,32);}return h=E+112|0,0},function(A,I,g,B,Q,E,a,r){A|=0,I|=0,Q|=0,E|=0,a|=0,r|=0;var o,e=0,t=0;if(h=o=h-112|0,(g|=0)|(B|=0)){for(e=n[r+28|0]|n[r+29|0]<<8|n[r+30|0]<<16|n[r+31|0]<<24,i[o+24>>2]=n[r+24|0]|n[r+25|0]<<8|n[r+26|0]<<16|n[r+27|0]<<24,i[o+28>>2]=e,e=n[r+20|0]|n[r+21|0]<<8|n[r+22|0]<<16|n[r+23|0]<<24,i[o+16>>2]=n[r+16|0]|n[r+17|0]<<8|n[r+18|0]<<16|n[r+19|0]<<24,i[o+20>>2]=e,e=n[r+4|0]|n[r+5|0]<<8|n[r+6|0]<<16|n[r+7|0]<<24,i[o>>2]=n[0|r]|n[r+1|0]<<8|n[r+2|0]<<16|n[r+3|0]<<24,i[o+4>>2]=e,e=8,t=n[r+12|0]|n[r+13|0]<<8|n[r+14|0]<<16|n[r+15|0]<<24,i[o+8>>2]=n[r+8|0]|n[r+9|0]<<8|n[r+10|0]<<16|n[r+11|0]<<24,i[o+12>>2]=t,r=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[o+96>>2]=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,i[o+100>>2]=r;C[(o+96|0)+e|0]=E,E=(255&a)<<24|E>>>8,a=a>>>8|0,16!=(0|(e=e+1|0)););if(!B&g>>>0>63|B)for(;;){for(e=0,mg(o+32|0,o+96|0,o);C[A+e|0]=n[(o+32|0)+e|0]^n[I+e|0],r=1,64!=(0|(e=e+1|0)););for(e=8;Q=n[0|(E=(o+96|0)+e|0)]+r|0,C[0|E]=Q,r=Q>>>8|0,16!=(0|(e=e+1|0)););if(I=I- -64|0,A=A- -64|0,B=B-1|0,!(!(B=(g=g+-64|0)>>>0<4294967232?B+1|0:B)&g>>>0>63|B))break}if(g|B)for(e=0,mg(o+32|0,o+96|0,o);C[A+e|0]=n[(o+32|0)+e|0]^n[I+e|0],(0|g)!=(0|(e=e+1|0)););fI(o+32|0,64),fI(o,32);}return h=o+112|0,0},function(A,I,g,B,Q){var C;return A|=0,B|=0,h=C=h+-64|0,(I|=0)|(g|=0)&&(aA(C,Q|=0),UA(C,B,0),U(C,A=EA(A,0,I),A,I,g),fI(C,64)),h=C- -64|0,0},function(A,I,g,B,Q){var C;return A|=0,B|=0,h=C=h+-64|0,(I|=0)|(g|=0)&&(aA(C,Q|=0),JA(C,B,0),U(C,A=EA(A,0,I),A,I,g),fI(C,64)),h=C- -64|0,0},function(A,I,g,B,Q,C,E,i){var n;return A|=0,I|=0,Q|=0,E|=0,i|=0,h=n=h-80|0,(g|=0)|(B|=0)&&(xI(n+8|0,C|=0),xI(n+12|0,E),aA(n+16|0,i),UA(n+16|0,Q,n+8|0),U(n+16|0,I,A,g,B),fI(n+16|0,64)),h=n+80|0,0},function(A,I,g,B,Q,C,E){var i;return A|=0,I|=0,Q|=0,E|=0,h=i=h-80|0,(g|=0)|(B|=0)&&(xI(i+12|0,C|=0),aA(i+16|0,E),JA(i+16|0,Q,i+12|0),U(i+16|0,I,A,g,B),fI(i+16|0,64)),h=i+80|0,0}]).grow=function(A){var I=this.length;return this.length=this.length+A,I},Xg.set=function(A,I){this[A]=I;},Xg.get=function(A){return this[A]},Xg);function Wg(){return B.byteLength/65536|0}return {h:Vg,i:function(){},j:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|PA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},k:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return PA(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e();}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},l:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|_A(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},m:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return _A(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e();}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},n:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|HA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},o:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=HA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},p:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|GA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},q:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=GA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},r:Ng,s:function(){return 12},t:Lg,u:Sg,v:dg,w:bg,x:Ng,y:xg,z:Lg,A:Sg,B:dg,C:bg,D:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|NA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},E:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return NA(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e();}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},F:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|MA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},G:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=MA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},H:Ng,I:Mg,J:Lg,K:Sg,L:dg,M:bg,N:Ng,O:Ng,P:function(A,I,g,B,Q){return 0|bI(A|=0,I|=0,g|=0,B|=0,Q|=0)},Q:function(A,I,g,B,Q){return 0|function(A,I,g,B,Q){var C;return h=C=h-32|0,bI(C,I,g,B,Q),I=Gg(A,C),g=zA(C,A,32),h=C+32|0,g|((0|A)==(0|C)?-1:I)}(A|=0,I|=0,g|=0,B|=0,Q|=0)},R:bg,S:Ng,T:Ng,U:Ng,V:Ng,W:Mg,X:Sg,Y:dg,Z:function(A,I,g){return 0|function(A,I,g){var B,Q=0;return h=B=h+-64|0,mI(B,g,32,0),g=i[B+28>>2],Q=i[B+24>>2],C[I+24|0]=Q,C[I+25|0]=Q>>>8,C[I+26|0]=Q>>>16,C[I+27|0]=Q>>>24,C[I+28|0]=g,C[I+29|0]=g>>>8,C[I+30|0]=g>>>16,C[I+31|0]=g>>>24,g=i[B+20>>2],Q=i[B+16>>2],C[I+16|0]=Q,C[I+17|0]=Q>>>8,C[I+18|0]=Q>>>16,C[I+19|0]=Q>>>24,C[I+20|0]=g,C[I+21|0]=g>>>8,C[I+22|0]=g>>>16,C[I+23|0]=g>>>24,g=i[B+12>>2],Q=i[B+8>>2],C[I+8|0]=Q,C[I+9|0]=Q>>>8,C[I+10|0]=Q>>>16,C[I+11|0]=Q>>>24,C[I+12|0]=g,C[I+13|0]=g>>>8,C[I+14|0]=g>>>16,C[I+15|0]=g>>>24,g=i[B+4>>2],Q=i[B>>2],C[0|I]=Q,C[I+1|0]=Q>>>8,C[I+2|0]=Q>>>16,C[I+3|0]=Q>>>24,C[I+4|0]=g,C[I+5|0]=g>>>8,C[I+6|0]=g>>>16,C[I+7|0]=g>>>24,fI(B,64),A=cg(A,I),h=B- -64|0,A}(A|=0,I|=0,g|=0)},_:Ig,$:jI,aa:function(A,I,g,B,Q,C,E){return 0|Qg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ba:function(A,I,g,B,Q,C,E,i){return 0|wI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0)},ca:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return !B&g>>>0>=4294967280|B&&(OI(),e()),Qg(A+16|0,A,I,g,B,Q,C)}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},da:function(A,I,g,B,Q,C,E){return 0|kI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ea:function(A,I,g,B,Q,C,E){return 0|Cg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},fa:function(A,I,g,B,Q,C,E,i){return 0|hI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0)},ga:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return !B&g>>>0>=16|B?Cg(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C):-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},ha:function(A,I,g,B,Q,C,E){return 0|uI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ia:function(A,I,g,B,Q){return 0|function(A,I,g,B,Q){var E,n=0;return h=E=h-96|0,n=-1,Ig(E+32|0,E)||(lI(E- -64|0,E+32|0,Q),n=kI(A+32|0,I,g,B,E- -64|0,Q,E),I=i[E+60>>2],g=i[E+56>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[E+52>>2],g=i[E+48>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[E+44>>2],g=i[E+40>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[E+36>>2],g=i[E+32>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,fI(E,32),fI(E+32|0,32),fI(E- -64|0,24)),h=E+96|0,n}(A|=0,I|=0,g|=0,B|=0,Q|=0)},ja:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E,i=0;return h=E=h-32|0,i=-1,!B&g>>>0>=48|B&&(lI(E,I,Q),i=uI(A,I+32|0,g-32|0,B-(g>>>0<32)|0,E,I,C)),h=E+32|0,i}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},ka:function(){return 48},la:Sg,ma:Pg,na:Ng,oa:Sg,pa:Pg,qa:Ng,ra:function(){return 384},sa:function(A,I,g,B,Q,C,E){return 0|Eg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ta:qI,ua:function(A,I,g,B){return 0|sg(A|=0,I|=0,g|=0,B|=0)},va:TI,wa:bg,xa:Pg,ya:function(A,I,g,B){return 0|mI(A|=0,I|=0,g|=0,B|=0)},za:Sg,Aa:Pg,Ba:xg,Ca:Ng,Da:function(A,I,g,B,Q,a){return 0|function(A,I,g,B,Q,a){var r,o;return h=r=h-32|0,o=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,Q=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[r+24>>2]=0,i[r+28>>2]=0,i[r+16>>2]=o,i[r+20>>2]=Q,tI(r,g,B),i[r+8>>2]=0,i[r+12>>2]=0,I-16>>>0>=49?(i[8960]=28,A=-1):(g=r+16|0,A=I-1>>>0>63?-1:function(A,I,g,B,Q){var a,r=0;if(a=r=h,h=r=r-384&-64,!(!I|!A|(g-1&255)>>>0>=64))return function(A,I,g,B,Q){var a;if(h=a=h-192|0,!(!g|(I-1&255)>>>0>=64))return E[a+130>>1]=257,C[a+129|0]=32,C[a+128|0]=I,WI(a+128|4),tI(a+128|8,0,0),i[a+152>>2]=0,i[a+156>>2]=0,i[a+144>>2]=0,i[a+148>>2]=0,B?function(A,I){var g,B=0;B=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,C[A+32|0]=g,C[A+33|0]=g>>>8,C[A+34|0]=g>>>16,C[A+35|0]=g>>>24,C[A+36|0]=B,C[A+37|0]=B>>>8,C[A+38|0]=B>>>16,C[A+39|0]=B>>>24,B=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,C[A+44|0]=B,C[A+45|0]=B>>>8,C[A+46|0]=B>>>16,C[A+47|0]=B>>>24;}(a+128|0,B):(i[a+168>>2]=0,i[a+172>>2]=0,i[a+160>>2]=0,i[a+164>>2]=0),Q?function(A,I){var g,B=0;B=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,C[A+48|0]=g,C[A+49|0]=g>>>8,C[A+50|0]=g>>>16,C[A+51|0]=g>>>24,C[A+52|0]=B,C[A+53|0]=B>>>8,C[A+54|0]=B>>>16,C[A+55|0]=B>>>24,B=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,C[A+56|0]=I,C[A+57|0]=I>>>8,C[A+58|0]=I>>>16,C[A+59|0]=I>>>24,C[A+60|0]=B,C[A+61|0]=B>>>8,C[A+62|0]=B>>>16,C[A+63|0]=B>>>24;}(a+128|0,Q):(i[a+184>>2]=0,i[a+188>>2]=0,i[a+176>>2]=0,i[a+180>>2]=0),hA(A,a+128|0),EA(a+32|0,0,96),QA(I=A,A=X(a,g,32),128,0),fI(A,128),void(h=A+192|0);OI(),e();}(r,g,I,B,Q),QA(r,0,0,0),M(r,A,g),h=a,0;OI(),e();}(A,a,255&I,r,g)),h=r+32|0,A}(A|=0,I|=0,g|=0,B|=0,Q|=0,a|=0)},Ea:bg,Fa:function(A,I,g){return A|=0,Eg(I|=0,32,g|=0,32,0,0,0),0|ag(A,I)},Ga:function(A,I){return A|=0,cI(I|=0,32),0|ag(A,I)},Ha:function(A,I,g,B,Q){I|=0,g|=0,Q|=0;var E,i,a=0;if(i=a=h,h=a=a-512&-64,E=(A|=0)||I){if(A=-1,!ZI(a+96|0,B|=0,Q)){for(I=I||E,A=0,qI(a+128|0,0,0,64),sg(a+128|0,a+96|0,32,0),fI(a+96|0,32),sg(a+128|0,g,32,0),sg(a+128|0,Q,32,0),TI(a+128|0,a+32|0,64),fI(a+128|0,384);g=(a+32|0)+A|0,C[A+E|0]=n[0|g],C[A+I|0]=n[g+32|0],32!=(0|(A=A+1|0)););fI(a+32|0,64),A=0;}return h=i,0|A}OI(),e();},Ia:function(A,I,g,B,Q){I|=0,g|=0,Q|=0;var E,i,a=0;if(i=a=h,h=a=a-512&-64,E=(A|=0)||I){if(A=-1,!ZI(a+96|0,B|=0,Q)){for(I=I||E,A=0,qI(a+128|0,0,0,64),sg(a+128|0,a+96|0,32,0),fI(a+96|0,32),sg(a+128|0,Q,32,0),sg(a+128|0,g,32,0),TI(a+128|0,a+32|0,64),fI(a+128|0,384);g=(a+32|0)+A|0,C[A+I|0]=n[0|g],C[A+E|0]=n[g+32|0],32!=(0|(A=A+1|0)););fI(a+32|0,64),A=0;}return h=i,0|A}OI(),e();},Ja:Ng,Ka:Ng,La:Ng,Ma:Ng,Na:Rg,Oa:Jg,Pa:Jg,Qa:Sg,Ra:Kg,Sa:Lg,Ta:Kg,Ua:Sg,Va:function(){return 128},Wa:function(){return 35681},Xa:Rg,Ya:Kg,Za:function(){return 8192},_a:function(){return -2147483648},$a:Jg,ab:function(){return 67108864},bb:qg,cb:function(){return 268435456},db:function(){return 4},eb:function(){return 1073741824},fb:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r,o){switch(o-1|0){case 0:return function(A,I,g,B,Q,C,E,n,a,r){var o,e;e=I,o=EA(A,0,I),A=22;A:if(!g){if(!(!g&I>>>0<16)){if(C|a|r>>>0>2147483648)break A;if(!(!a&n>>>0<3|r>>>0<8192)){if(A=28,(0|B)==(0|o))break A;return pA(n,r>>>10|0,1,B,Q,E,16,o,e,0,0,1)?-1:0}}A=28;}return i[8960]=A,-1}(A,I,g,B,Q,C,E,n,a,r);case 1:return function(A,I,g,B,Q,C,E,n,a,r){var o,e;e=I,o=EA(A,0,I),A=22;A:if(!g){if(!(!g&I>>>0<16)){if(C|a|r>>>0>2147483648)break A;if(!(!(n|a)|r>>>0<8192)){if(A=28,(0|B)==(0|o))break A;return pA(n,r>>>10|0,1,B,Q,E,16,o,e,0,0,2)?-1:0}}A=28;}return i[8960]=A,-1}(A,I,g,B,Q,C,E,n,a,r)}return i[8960]=28,-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},gb:function(A,I,g,B,Q,C,E){return 0|xA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},hb:function(A,I,g,B,Q,C,E,n){return 0|function(A,I,g,B,Q,C,E,n){switch(n-1|0){case 1:return xA(A,I,g,B,Q,C,E);default:OI(),e();case 0:}return function(A,I,g,B,Q,C,E){var n;return h=n=h-16|0,A=EA(A,0,128),E>>>0<2147483649&&!(B|C)?E>>>0>8191&&!C&Q>>>0>=3|0!=(0|C)?(cI(n,16),A=pA(Q,E>>>10|0,1,I,g,n,16,0,32,A,128,1)?-1:0):(i[8960]=28,A=-1):(i[8960]=22,A=-1),h=n+16|0,A}(A,I,g,B,Q,C,E)}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0)},ib:function(A,I,g,B){return 0|function(A,I,g,B){return XA(A,35681,10)?XA(A,35692,9)?(i[8960]=28,-1):function(A,I,g,B){A:{if(1==(0|B)|B>>>0>1)i[8960]=22;else {if(!(A=fA(A,I,g,1)))break A;-35==(0|A)&&(i[8960]=28);}A=-1;}return A}(A,I,g,B):function(A,I,g,B){A:{if(1==(0|B)|B>>>0>1)i[8960]=22;else {if(!(A=fA(A,I,g,2)))break A;-35==(0|A)&&(i[8960]=28);}A=-1;}return A}(A,I,g,B)}(A|=0,I|=0,g|=0,B|=0)},jb:function(A,I,g,B){return 0|function(A,I,g,B){return XA(A,35681,10)?XA(A,35692,9)?(i[8960]=28,-1):DA(A,I,g,B,1):DA(A,I,g,B,2)}(A|=0,I|=0,g|=0,B|=0)},kb:ag,lb:ZI,mb:Ng,nb:Ng,ob:Ng,pb:Mg,qb:Sg,rb:dg,sb:bg,tb:Qg,ub:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return !B&g>>>0>=4294967280|B&&(OI(),e()),nA(A+16|0,A,I,g,B,Q,C),0}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},vb:Cg,wb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return !B&g>>>0>=16|B?rA(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C):-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},xb:bg,yb:function(A,I,g){return A|=0,g|=0,cI(I|=0,24),x(A,I,g),XI(A),g=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,I=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},zb:function(A,I,g){return x(A|=0,I|=0,g|=0),XI(A),g=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,I=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},Ab:L,Bb:function(A,I,g,B,Q,E,a,r,o,t){return 0|function(A,I,g,B,Q,E,a,r,o,t){var f,c=0;if(h=f=h-336|0,g&&(i[g>>2]=0,i[g+4>>2]=0),!E&Q>>>0<4294967279)return _g(f+16|0,64,c=A+32|0,A),lg(f+80|0,f+16|0),fI(f+16|0,64),yg(f+80|0,a,r,o),yg(f+80|0,35712,0-r&15,0),EA(f+16|0,0,64),C[f+16|0]=t,BI(f+16|0,f+16|0,64,0,c,1,A),yg(f+80|0,f+16|0,64,0),C[0|I]=n[f+16|0],BI(a=I+1|0,B,Q,E,c,2,A),yg(f+80|0,a,Q,E),yg(f+80|0,35712,15&Q,0),tI(f+8|0,r,o),yg(f+80|0,f+8|0,8,0),tI(f+8|0,Q- -64|0,E-((Q>>>0<4294967232)-1|0)|0),yg(f+80|0,f+8|0,8,0),Fg(f+80|0,I=Q+a|0),fI(f+80|0,256),pI(A+36|0,I),sI(c),(2&t||aI(c,4))&&L(A),g&&(E=(A=Q+17|0)>>>0<17?E+1|0:E,i[g>>2]=A,i[g+4>>2]=E),h=f+336|0,0;OI(),e();}(A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,a|=0,r|=0,o|=0,t|=0)},Cb:function(A,I,g,B,Q,E,a,r,o,t){return 0|function(A,I,g,B,Q,E,a,r,o,t){var f,c=0,y=0,s=0,w=0,D=0;h=f=h-352|0,g&&(i[g>>2]=0,i[g+4>>2]=0),B&&(C[0|B]=255),w=-1;A:{if(!(!a&E>>>0<17)){if(!(c=a-(E>>>0<17)|0)&(y=E-17|0)>>>0>=4294967279|c)break A;_g(f+32|0,64,s=A+32|0,A),lg(f+96|0,f+32|0),fI(f+32|0,64),yg(f+96|0,r,o,t),yg(f+96|0,35712,0-o&15,0),EA(f+32|0,0,64),C[f+32|0]=n[0|Q],BI(f+32|0,f+32|0,64,0,s,1,A),D=n[f+32|0],C[f+32|0]=n[0|Q],yg(f+96|0,f+32|0,64,0),yg(f+96|0,r=Q+1|0,y,c),yg(f+96|0,35712,E-1&15,0),tI(f+24|0,o,t),yg(f+96|0,f+24|0,8,0),tI(f+24|0,Q=E+47|0,a=Q>>>0<47?a+1|0:a),yg(f+96|0,f+24|0,8,0),Fg(f+96|0,f),fI(f+96|0,256),zA(f,r+y|0,16)?fI(f,16):(BI(I,r,y,c,s,2,A),pI(A+36|0,f),sI(s),(2&D||aI(s,4))&&L(A),g&&(i[g>>2]=y,i[g+4>>2]=c),w=0,B&&(C[0|B]=D));}return h=f+352|0,w}OI(),e();}(A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,a|=0,r|=0,o|=0,t|=0)},Db:function(){return 52},Eb:function(){return 17},Fb:Mg,Gb:Ng,Hb:function(){return -18},Ib:Lg,Jb:Rg,Kb:Jg,Lb:qg,Mb:xg,Nb:Sg,Ob:function(A,I,g,B,Q){return 0|function(A,I,g,B){var Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0;if(Q=1886610805^(E=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24),i=1936682341^(C=n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24),a=1852142177^E,o=1819895653^C,E=1852075885^(t=n[B+8|0]|n[B+9|0]<<8|n[B+10|0]<<16|n[B+11|0]<<24),C=1685025377^(B=n[B+12|0]|n[B+13|0]<<8|n[B+14|0]<<16|n[B+15|0]<<24),t^=2037671283,r=1952801890^B,(0|(B=(I+g|0)-(y=7&g)|0))!=(0|I)){for(;e=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,f=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,c=Dg(E,C,13),s=p,w=1+(C=C+i|0)|0,i=C,h=Dg(C=Q+E|0,i=C>>>0<Q>>>0?w:i,32),w=p,r=Q=r^f,E=Dg(t^=e,Q,16),Q=a+t|0,a=o+r|0,t=o=(a=Q>>>0<t>>>0?a+1|0:a)^p,o=Dg(E^=Q,o,21),r=p,c=Dg(C^=c,i^=s,17),D=p,i=a+i|0,a=Q,i=Dg(Q=Q+C|0,C=a>>>0>Q>>>0?i+1|0:i,32),a=p,s=Dg(c^=Q,C^=D,13),D=p,w=1+(Q=t+w|0)|0,t=Q,E=(Q=E+h|0)>>>0<E>>>0?w:t,c=t=Q+c|0,C=E+C|0,C=Dg(t,h=Q>>>0>t>>>0?C+1|0:C,32),t=p,o=Dg(Q^=o,E^=r,16),E=a+E|0,E=(Q=Q+i|0)>>>0<i>>>0?E+1|0:E,i=C+(a=Q^o)|0,C=(r=t)+(t=E^p)|0,t=Dg(a,t,21)^i,r=(w=i>>>0<a>>>0?C+1|0:C)^p,a=C=h^D,C=Dg(o=c^s,C,17),E=E+a|0,o=(a=Q+o|0)>>>0<Q>>>0?E+1|0:E,E=C^a,C=o^p,Q=i^e,i=f^w,a=Dg(a,o,32),o=p,(0|B)!=(0|(I=I+8|0)););I=B;}switch(B=g<<24,g=0,y-1|0){case 6:B|=n[I+6|0]<<16;case 5:B|=n[I+5|0]<<8;case 4:B|=n[I+4|0];case 3:e=(g=n[I+3|0])>>>8|0,g<<=24,B|=e;case 2:g|=(e=n[I+2|0])<<16,B|=f=e>>>16|0;case 1:g|=(e=n[I+1|0])<<8,B|=f=e>>>24|0;case 0:g=n[0|I]|g;}return e=Dg(E,C,13),f=p,I=C+i|0,y=Dg(E=Q+E|0,C=E>>>0<Q>>>0?I+1|0:I,32),c=p,i=Q=B^r,Q=Dg(I=g^t,Q,16),i=i+o|0,o=a=(i=(r=I)>>>0>(I=I+a|0)>>>0?i+1|0:i)^p,a=Dg(Q^=I,a,21),t=p,e=Dg(E^=e,C^=f,17),f=p,C=i+C|0,r=I,C=Dg(I=I+E|0,E=r>>>0>I>>>0?C+1|0:C,32),i=p,e=Dg(r=I^e,E^=f,13),f=p,s=1+(I=o+c|0)|0,o=I,E=(Q=(I=Q+y|0)>>>0<Q>>>0?s:o)+E|0,E=Dg(r=o=I+r|0,o=I>>>0>o>>>0?E+1|0:E,32),y=p,a=Dg(I^=a,Q^=t,16),Q=i+Q|0,Q=(I=I+C|0)>>>0<C>>>0?Q+1|0:Q,C=I^a,a=i=Q^p,i=Dg(C,i,21),t=p,f=o^=f,o=Dg(r^=e,o,17),e=p,Q=Q+f|0,s=I,r=Dg(I=I+r|0,Q=s>>>0>I>>>0?Q+1|0:Q,32),f=p,e=Dg(I^=o,o=Q^e,13),c=p,s=I,a=1+(I=a+y|0)|0,Q=I,B=o+(B^(Q=(I=E+C|0)>>>0<E>>>0?a:Q))|0,g=Dg(C=E=s+(g^=I)|0,E=g>>>0>E>>>0?B+1|0:B,32),a=p,i=Dg(I^=i,B=Q^t,16),B=B+f|0,B=(Q=I)>>>0>(I=I+(255^r)|0)>>>0?B+1|0:B,Q=I^i,o=i=B^p,i=Dg(Q,i,21),t=p,r=E^=c,E=Dg(C^=e,E,17),e=p,B=B+r|0,r=I,C=Dg(I=I+C|0,B=r>>>0>I>>>0?B+1|0:B,32),r=p,f=Dg(E^=I,e^=B,13),y=p,o=1+(I=a+o|0)|0,B=I,Q=(B=(I=g+Q|0)>>>0<g>>>0?o:B)+e|0,a=Q=I>>>0>(g=I+E|0)>>>0?Q+1|0:Q,Q=Dg(g,Q,32),o=p,i=Dg(I^=i,B^=t,16),B=B+r|0,r=I,E=(I=I+C|0)^i,i=C=(B=r>>>0>I>>>0?B+1|0:B)^p,C=Dg(E,C,21),t=p,r=a^=y,a=Dg(g^=f,a,17),e=p,B=B+r|0,r=I,r=Dg(I=I+g|0,g=r>>>0>I>>>0?B+1|0:B,32),f=p,y=Dg(a^=I,e^=g,13),c=p,B=1+(I=i+o|0)|0,g=I,Q=(B=(I=Q+E|0)>>>0<Q>>>0?B:g)+e|0,i=Q=I>>>0>(g=I+a|0)>>>0?Q+1|0:Q,Q=Dg(g,Q,32),a=p,C=Dg(I^=C,B^=t,16),B=B+f|0,o=I,E=(I=I+r|0)^C,o=C=(B=o>>>0>I>>>0?B+1|0:B)^p,C=Dg(E,C,21),t=p,r=i^=c,i=Dg(g^=y,i,17),e=p,B=B+r|0,r=I,B=Dg(I=I+g|0,g=r>>>0>I>>>0?B+1|0:B,32),r=p,e=g^=e,f=Dg(i^=I,g,13),y=p,o=1+(I=a+o|0)|0,g=I,a=E=t^(Q=(I=Q+E|0)>>>0<Q>>>0?o:g),E=Dg(g=I^C,E,16),C=a+r|0,r=g,E=Dg((g=g+B|0)^E,(B=r>>>0>g>>>0?C+1|0:C)^p,21),C=p,Q=Q+e|0,o=1+(B=B+(Q=((r=I)>>>0>(I=I+i|0)>>>0?Q+1|0:Q)^y)|0)|0,r=B,g=(I=g+(B=I^f)|0)>>>0<g>>>0?o:r,B=Dg(B,Q,17)^I^E,Q=p^g^C,tI(A,Dg(I,g,32)^B,p^Q),0}(A|=0,I|=0,g|=0,Q|=0)},Pb:function(A){cI(A|=0,16);},Qb:function(){return 208},Rb:Pg,Sb:Ng,Tb:Ng,Ub:Pg,Vb:function(){return -65},Wb:function(A,I,g){return 0|N(A|=0,I|=0,g|=0)},Xb:function(A,I){return 0|function(A,I){var g;return h=g=h-32|0,cI(g,32),N(A,I,g),fI(g,32),h=g+32|0,0}(A|=0,I|=0)},Yb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E,n;return h=E=h-16|0,n=g,g=B,Bg(A,E+8|0,gA(A- -64|0,n,B),B,Q,C),64!=i[E+8>>2]|i[E+12>>2]?(I&&(i[I>>2]=0,i[I+4>>2]=0),EA(A,0,g- -64|0),A=-1):(A=0,I&&(i[I>>2]=B- -64,i[I+4>>2]=Q-((B>>>0<4294967232)-1|0))),h=E+16|0,A}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},Zb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E=0;A:{I:{if(!(!Q&B>>>0<64||(Q=Q-1|0,!(Q=(B=B+-64|0)>>>0<4294967232?Q+1|0:Q)&B>>>0>4294967231|Q))){if(!ng(g,E=g- -64|0,B,Q,C))break I;A&&EA(A,0,B);}if(g=-1,!I)break A;return i[I>>2]=0,i[I+4>>2]=0,-1}I&&(i[I>>2]=B,i[I+4>>2]=Q),g=0,A&&gA(A,E,B);}return g}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},_b:function(A,I,g,B,Q,C){return 0|Bg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},$b:function(A,I,g,B,Q){return 0|ng(A|=0,I|=0,g|=0,B|=0,Q|=0)},ac:function(A){return MI(A|=0),0},bc:function(A,I,g,B){return 0|V(A|=0,I|=0,g|=0,B|=0)},cc:function(A,I,g,B){return 0|function(A,I,g,B){var Q;return h=Q=h+-64|0,UI(A,Q),A=q(I,g,Q,64,0,B,1),h=Q- -64|0,A}(A|=0,I|=0,g|=0,B|=0)},dc:function(A,I,g){return 0|function(A,I,g){var B;return h=B=h+-64|0,UI(A,B),A=lA(I,B,64,0,g,1),h=B- -64|0,A}(A|=0,I|=0,g|=0)},ec:function(A,I){A|=0;var g,B=0;return h=g=h-256|0,B=-1,wA(I|=0)||cA(g+96|0,I)||function(A){var I;return h=I=h-160|0,function(A,I){var g,B=0;for(h=g=h-1760|0,FI(g+480|0,I),JI(g+320|0,I),DI(g,g+320|0),VA(g+320|0,g,g+480|0),DI(g+160|0,g+320|0),FI(I=g+640|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+800|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+960|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1120|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1280|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1440|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(g+1600|0,g+160|0),zI(A),I=252;JI(g+320|0,A),B=I,(0|(I=C[I+34208|0]))>=1?(DI(g+160|0,g+320|0),VA(g+320|0,g+160|0,(g+480|0)+r((254&I)>>>1|0,160)|0)):(0|I)>-1||(DI(g+160|0,g+320|0),WA(g+320|0,g+160|0,(g+480|0)+r((0-I&254)>>>1|0,160)|0)),DI(A,g+320|0),I=B-1|0,B;);h=g+1760|0;}(I,A),A=RI(I),h=I+160|0,A}(g+96|0)&&(wg(g),yA(g,g,I=g+136|0),wg(g+48|0),sA(g+48|0,g+48|0,I),j(g,g),_(g+48|0,g+48|0,g),BA(A,g+48|0),B=0),h=g+256|0,0|B},fc:function(A,I){A|=0;var g,B=0;return h=g=h+-64|0,mI(g,I|=0,32,0),C[0|g]=248&n[0|g],C[g+31|0]=63&n[g+31|0]|64,I=i[g+20>>2],B=i[g+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+12>>2],B=i[g+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+4>>2],B=i[g>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=i[g+28>>2],B=i[g+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,fI(g,64),h=g- -64|0,0},gc:YI,hc:PI,ic:function(A){var I=0,g=0;if((A|=0)>>>0>=2){for(g=(0-A>>>0)%(A>>>0)|0;(I=YI())>>>0<g>>>0;);A=(I>>>0)%(A>>>0)|0;}else A=0;return 0|A},jc:cI,kc:function(A,I,g){_g(A|=0,I|=0,1784,g|=0);},lc:Ng,mc:function(){var A=0,I=0;return (A=i[9097])&&(A=i[A+20>>2])&&(I=0|Vg[0|A]()),0|I},nc:function(A,I,g){!function(A,I,g){1==(0|g)|g>>>0>1&&(t(1796,1816,197,1842),e()),cI(A,I);}(A|=0,I|=0,g|=0);},oc:function(A,I,g,B){A|=0,g|=0;var Q=0,E=0,i=0;if(!((B|=0)>>>0>2147483646|B<<1>>>0>=(I|=0)>>>0)){if(I=0,B){for(;Q=I<<1,E=(i=n[I+g|0])>>>4|0,C[Q+A|0]=87+(E+(E+65526>>>8&217)|0),E=(1|Q)+A|0,Q=15&i,C[0|E]=22272+((Q<<8)+(Q+65526&55552)|0)>>>8,(0|B)!=(0|(I=I+1|0)););I=B<<1;}else I=0;return C[I+A|0]=0,0|A}OI(),e();},pc:function(A,I,g,B,Q,E,a){A|=0,I|=0,g|=0,Q|=0,E|=0,a|=0;var r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0;A:if(B|=0){I:{g:{B:for(;;){for(o=r;;){Q:{if(!(255&((w=(65526+(y=(223&(c=n[g+o|0]))-55&255)^y+65520)>>>8|0)|(e=65526+(h=48^c)>>>8|0)))){if(e=1,!Q|255&f)break g;if(gg(Q,c))break Q;r=o;break A}if(I>>>0<=t>>>0){i[8960]=68,e=0;break g}if(r=y&w|e&h,255&f?(C[A+t|0]=r|D,t=t+1|0):D=r<<4,f^=-1,e=1,(r=o+1|0)>>>0<B>>>0)continue B;break I}if(f=0,!((o=o+1|0)>>>0<B>>>0))break}break}r=(A=r+1|0)>>>0<B>>>0?B:A;break A}r=o;}255&f?(i[8960]=28,s=-1,r=r-1|0,t=0):e||(t=0,s=-1);}return a?i[a>>2]=g+r:(0|B)!=(0|r)&&(i[8960]=28,s=-1),E&&(i[E>>2]=t),0|s},qc:function(A,I){var g;return A|=0,pg(I|=0),A=r(g=(A>>>0)/3|0,-3)+A|0,r(4-(3-A&0-(I>>>1&1))|0,1&(A|A>>>1))+(g<<2|1)|0},rc:O,sc:W,tc:function(){var A=0;return i[9104]?A=1:(i[9086]=0,function(){var A;h=A=h-16|0,VI(A),i[A>>2]&&(VI(A),EA(36348,0,40)),h=A+16|0;}(),i[9085]=1,PI(),function(){var A=0;(0|(A=0|y(30)))>=1?i[8944]=A:A=i[8944],A>>>0<=15&&(OI(),e()),cI(36400,16);}(),i[9104]=1,A=0),0|A},uc:function(A,I,g,B,Q){A|=0,I|=0,g|=0,Q|=0;var E,a=0,r=0,o=0;h=E=h-16|0;A:{if(B|=0){if(o=-1,(a=(a=B-1|0)-(r=a&B?(g>>>0)%(B>>>0)|0:g&a)|0)>>>0>=(-1^g)>>>0)break A;if(!((g=g+a|0)>>>0>=Q>>>0))for(A&&(i[A>>2]=g+1),A=I+g|0,o=0,C[E+15|0]=0,I=B>>>0>1?B:1,B=0;Q=g=A-B|0,r=n[0|g]&n[E+15|0],g=(B^a)-1>>>24|0,C[0|Q]=r|128&g,C[E+15|0]=g|n[E+15|0],(0|I)!=(0|(B=B+1|0)););}else o=-1;return h=E+16|0,0|o}OI(),e();},vc:function(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var Q,C=0,E=0,a=0,r=0,o=0;if(i[12+(Q=h-16|0)>>2]=0,B-1>>>0<g>>>0){for(o=(C=g-1|0)+I|0,g=0,I=0;r=((128^(E=n[o-g|0]))-1&i[Q+12>>2]-1&a-1)>>>8&1,i[Q+12>>2]=i[Q+12>>2]|0-r&g,I|=r,a|=E,(0|B)!=(0|(g=g+1|0)););i[A>>2]=C-i[Q+12>>2],A=I-1|0;}else A=-1;return 0|A},wc:function(){return 35762},xc:function(){return 10},yc:qg,zc:Rg,Ac:function(){return 35840},Bc:k,Cc:m}}(A)}(vA);},instantiate:function(A,I){return {then:function(I){var g=new u.Module(A);I({instance:new u.Instance(g)});}}},RuntimeError:Error};function p(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":_[A>>0]=I;break;case"i16":Y[A>>1]=I;break;case"i32":b[A>>2]=I;break;case"i64":nA=[I>>>0,(iA=I,+Math.abs(iA)>=1?iA>0?(0|Math.min(+Math.floor(iA/4294967296),4294967295))>>>0:~~+Math.ceil((iA-+(~~iA>>>0))/4294967296)>>>0:0)],b[A>>2]=nA[0],b[A+4>>2]=nA[1];break;case"float":m[A>>2]=I;break;case"double":v[A>>3]=I;break;default:IA("invalid type for setValue: "+g);}}function l(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return _[A>>0];case"i16":return Y[A>>1];case"i32":case"i64":return b[A>>2];case"float":return m[A>>2];case"double":return v[A>>3];default:IA("invalid type for getValue: "+I);}return null}w=[],"object"!=typeof u&&IA("no native wasm support detected");var F=!1;function G(A,I){A||IA("Assertion failed: "+I);}var k,_,H,Y,b,m,v,U="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function S(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&U)return U.decode(A.subarray(I,Q));for(var C="";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else {var a=E-65536;C+=String.fromCharCode(55296|a>>10,56320|1023&a);}}else C+=String.fromCharCode((31&E)<<6|i);}else C+=String.fromCharCode(E);}return C}function N(A,I){return A?S(H,A,I):""}function M(A,I){return A%I>0&&(A+=I-A%I),A}function d(A){k=A,Q.HEAP8=_=new Int8Array(A),Q.HEAP16=Y=new Int16Array(A),Q.HEAP32=b=new Int32Array(A),Q.HEAPU8=H=new Uint8Array(A),Q.HEAPU16=new Uint16Array(A),Q.HEAPU32=new Uint32Array(A),Q.HEAPF32=m=new Float32Array(A),Q.HEAPF64=v=new Float64Array(A);}var P,R=Q.INITIAL_MEMORY||16777216;(D=Q.wasmMemory?Q.wasmMemory:new u.Memory({initial:R/65536,maximum:32768}))&&(k=D.buffer),R=k.byteLength,d(k);var J=[],x=[],L=[],K=[];function q(){if(Q.preRun)for("function"==typeof Q.preRun&&(Q.preRun=[Q.preRun]);Q.preRun.length;)T(Q.preRun.shift());fA(J);}function X(){fA(x);}function V(){fA(L);}function W(){if(Q.postRun)for("function"==typeof Q.postRun&&(Q.postRun=[Q.postRun]);Q.postRun.length;)j(Q.postRun.shift());fA(K);}function T(A){J.unshift(A);}function j(A){K.unshift(A);}x.push({func:function(){UA();}});var Z=0,z=null;function $(A){Z++,Q.monitorRunDependencies&&Q.monitorRunDependencies(Z);}function AA(A){if(Z--,Q.monitorRunDependencies&&Q.monitorRunDependencies(Z),0==Z&&(z)){var I=z;z=null,I();}}function IA(A){throw Q.onAbort&&Q.onAbort(A),h(A+=""),F=!0,A="abort("+A+"). Build with -s ASSERTIONS=1 for more info.",new u.RuntimeError(A)}function gA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}Q.preloadedImages={},Q.preloadedAudios={};var BA="data:application/octet-stream;base64,";function QA(A){return gA(A,BA)}var CA="file://";function EA(A){return gA(A,CA)}var iA,nA,aA="<<< WASM_BINARY_FILE >>>";function rA(A){try{if(A==aA&&w)return new Uint8Array(w);var I=bA(A);if(I)return I;if(t)return t(A);throw "both async and sync fetching of the wasm failed"}catch(A){IA(A);}}function oA(){if(!w&&(i||n)){if("function"==typeof fetch&&!EA(aA))return fetch(aA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw "failed to load wasm binary file at '"+aA+"'";return A.arrayBuffer()})).catch((function(){return rA(aA)}));if(e)return new Promise((function(A,I){e(aA,(function(I){A(new Uint8Array(I));}),I);}))}return Promise.resolve().then((function(){return rA(aA)}))}function eA(){var A={a:vA};function I(A,I){var g=A.exports;Q.asm=g,P=Q.asm.h,AA();}function g(A){I(A.instance);}function B(I){return oA().then((function(I){return u.instantiate(I,A)})).then(I,(function(A){h("failed to asynchronously prepare wasm: "+A),IA(A);}))}if($(),Q.instantiateWasm)try{return Q.instantiateWasm(A,I)}catch(A){return h("Module.instantiateWasm callback failed with error: "+A),!1}return w||"function"!=typeof u.instantiateStreaming||QA(aA)||EA(aA)||"function"!=typeof fetch?B(g):fetch(aA,{credentials:"same-origin"}).then((function(I){return u.instantiateStreaming(I,A).then(g,(function(A){return h("wasm streaming compile failed: "+A),h("falling back to ArrayBuffer instantiation"),B(g)}))})),{}}QA(aA)||(aA=s(aA));var tA={1024:function(){return Q.getRandomValue()},1062:function(){if(void 0===Q.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),Q.getRandomValue=g;}catch(A){try{var B=crypto__default['default'],C=function(){var A=B.randomBytes(4);return (A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),Q.getRandomValue=C;}catch(A){throw "No secure random number generator found"}}}};function fA(A){for(;A.length>0;){var I=A.shift();if("function"!=typeof I){var g=I.func;"number"==typeof g?void 0===I.arg?P.get(g)():P.get(g)(I.arg):g(void 0===I.arg?null:I.arg);}else I(Q);}}function cA(A,I,g,B){IA("Assertion failed: "+N(A)+", at: "+[I?N(I):"unknown filename",g,B?N(B):"unknown function"]);}function yA(){IA();}function sA(A,I,g){var B=GA(I,g);return tA[A].apply(null,B)}function wA(A,I,g){H.copyWithin(A,I,I+g);}function hA(){return H.length}function DA(A){try{return D.grow(A-k.byteLength+65535>>>16),d(D.buffer),1}catch(A){}}function uA(A){A>>>=0;var I=hA(),g=2147483648;if(A>g)return !1;for(var B=1;B<=4;B*=2){var Q=I*(1+.2/B);if(Q=Math.min(Q,A+100663296),DA(Math.min(g,M(Math.max(16777216,A,Q),65536))))return !0}return !1}function pA(A){return b[SA()>>2]=A,A}function lA(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return -1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return "object"==typeof navigator&&navigator.hardwareConcurrency||1}return pA(28),-1}var FA=[];function GA(A,I){var g;for(FA.length=0,I>>=2;g=H[A++];){var B=g<105;B&&1&I&&I++,FA.push(B?v[I++>>1]:b[I]),++I;}return FA}function _A(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B));}return I.join("")}var HA="function"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n="",a=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(a++))<<2|(Q=i.indexOf(A.charAt(a++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(a++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==C&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B));}while(a<A.length);return n};function YA(A){if("boolean"==typeof a&&a){var I;try{I=Buffer.from(A,"base64");}catch(g){I=new Buffer(A,"base64");}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=HA(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function bA(A){if(QA(A))return YA(A.slice(BA.length))}var mA,vA={b:cA,d:yA,c:sA,f:wA,g:uA,a:D,e:lA},UA=(eA(),Q.___wasm_call_ctors=function(){return (UA=Q.___wasm_call_ctors=Q.asm.i).apply(null,arguments)}),SA=(Q._crypto_aead_chacha20poly1305_encrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_encrypt_detached=Q.asm.j).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_encrypt=function(){return (Q._crypto_aead_chacha20poly1305_encrypt=Q.asm.k).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=Q.asm.l).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return (Q._crypto_aead_chacha20poly1305_ietf_encrypt=Q.asm.m).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_decrypt_detached=Q.asm.n).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt=function(){return (Q._crypto_aead_chacha20poly1305_decrypt=Q.asm.o).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=Q.asm.p).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return (Q._crypto_aead_chacha20poly1305_ietf_decrypt=Q.asm.q).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_keybytes=Q.asm.r).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_npubbytes=Q.asm.s).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=Q.asm.t).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_abytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_abytes=Q.asm.u).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return (Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=Q.asm.v).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keygen=function(){return (Q._crypto_aead_chacha20poly1305_ietf_keygen=Q.asm.w).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keybytes=function(){return (Q._crypto_aead_chacha20poly1305_keybytes=Q.asm.x).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_npubbytes=function(){return (Q._crypto_aead_chacha20poly1305_npubbytes=Q.asm.y).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_nsecbytes=function(){return (Q._crypto_aead_chacha20poly1305_nsecbytes=Q.asm.z).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_abytes=function(){return (Q._crypto_aead_chacha20poly1305_abytes=Q.asm.A).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_messagebytes_max=function(){return (Q._crypto_aead_chacha20poly1305_messagebytes_max=Q.asm.B).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keygen=function(){return (Q._crypto_aead_chacha20poly1305_keygen=Q.asm.C).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Q.asm.D).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_encrypt=Q.asm.E).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Q.asm.F).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_decrypt=Q.asm.G).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_keybytes=Q.asm.H).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=Q.asm.I).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=Q.asm.J).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_abytes=Q.asm.K).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Q.asm.L).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_keygen=Q.asm.M).apply(null,arguments)},Q._crypto_auth_bytes=function(){return (Q._crypto_auth_bytes=Q.asm.N).apply(null,arguments)},Q._crypto_auth_keybytes=function(){return (Q._crypto_auth_keybytes=Q.asm.O).apply(null,arguments)},Q._crypto_auth=function(){return (Q._crypto_auth=Q.asm.P).apply(null,arguments)},Q._crypto_auth_verify=function(){return (Q._crypto_auth_verify=Q.asm.Q).apply(null,arguments)},Q._crypto_auth_keygen=function(){return (Q._crypto_auth_keygen=Q.asm.R).apply(null,arguments)},Q._crypto_box_seedbytes=function(){return (Q._crypto_box_seedbytes=Q.asm.S).apply(null,arguments)},Q._crypto_box_publickeybytes=function(){return (Q._crypto_box_publickeybytes=Q.asm.T).apply(null,arguments)},Q._crypto_box_secretkeybytes=function(){return (Q._crypto_box_secretkeybytes=Q.asm.U).apply(null,arguments)},Q._crypto_box_beforenmbytes=function(){return (Q._crypto_box_beforenmbytes=Q.asm.V).apply(null,arguments)},Q._crypto_box_noncebytes=function(){return (Q._crypto_box_noncebytes=Q.asm.W).apply(null,arguments)},Q._crypto_box_macbytes=function(){return (Q._crypto_box_macbytes=Q.asm.X).apply(null,arguments)},Q._crypto_box_messagebytes_max=function(){return (Q._crypto_box_messagebytes_max=Q.asm.Y).apply(null,arguments)},Q._crypto_box_seed_keypair=function(){return (Q._crypto_box_seed_keypair=Q.asm.Z).apply(null,arguments)},Q._crypto_box_keypair=function(){return (Q._crypto_box_keypair=Q.asm._).apply(null,arguments)},Q._crypto_box_beforenm=function(){return (Q._crypto_box_beforenm=Q.asm.$).apply(null,arguments)},Q._crypto_box_detached_afternm=function(){return (Q._crypto_box_detached_afternm=Q.asm.aa).apply(null,arguments)},Q._crypto_box_detached=function(){return (Q._crypto_box_detached=Q.asm.ba).apply(null,arguments)},Q._crypto_box_easy_afternm=function(){return (Q._crypto_box_easy_afternm=Q.asm.ca).apply(null,arguments)},Q._crypto_box_easy=function(){return (Q._crypto_box_easy=Q.asm.da).apply(null,arguments)},Q._crypto_box_open_detached_afternm=function(){return (Q._crypto_box_open_detached_afternm=Q.asm.ea).apply(null,arguments)},Q._crypto_box_open_detached=function(){return (Q._crypto_box_open_detached=Q.asm.fa).apply(null,arguments)},Q._crypto_box_open_easy_afternm=function(){return (Q._crypto_box_open_easy_afternm=Q.asm.ga).apply(null,arguments)},Q._crypto_box_open_easy=function(){return (Q._crypto_box_open_easy=Q.asm.ha).apply(null,arguments)},Q._crypto_box_seal=function(){return (Q._crypto_box_seal=Q.asm.ia).apply(null,arguments)},Q._crypto_box_seal_open=function(){return (Q._crypto_box_seal_open=Q.asm.ja).apply(null,arguments)},Q._crypto_box_sealbytes=function(){return (Q._crypto_box_sealbytes=Q.asm.ka).apply(null,arguments)},Q._crypto_generichash_bytes_min=function(){return (Q._crypto_generichash_bytes_min=Q.asm.la).apply(null,arguments)},Q._crypto_generichash_bytes_max=function(){return (Q._crypto_generichash_bytes_max=Q.asm.ma).apply(null,arguments)},Q._crypto_generichash_bytes=function(){return (Q._crypto_generichash_bytes=Q.asm.na).apply(null,arguments)},Q._crypto_generichash_keybytes_min=function(){return (Q._crypto_generichash_keybytes_min=Q.asm.oa).apply(null,arguments)},Q._crypto_generichash_keybytes_max=function(){return (Q._crypto_generichash_keybytes_max=Q.asm.pa).apply(null,arguments)},Q._crypto_generichash_keybytes=function(){return (Q._crypto_generichash_keybytes=Q.asm.qa).apply(null,arguments)},Q._crypto_generichash_statebytes=function(){return (Q._crypto_generichash_statebytes=Q.asm.ra).apply(null,arguments)},Q._crypto_generichash=function(){return (Q._crypto_generichash=Q.asm.sa).apply(null,arguments)},Q._crypto_generichash_init=function(){return (Q._crypto_generichash_init=Q.asm.ta).apply(null,arguments)},Q._crypto_generichash_update=function(){return (Q._crypto_generichash_update=Q.asm.ua).apply(null,arguments)},Q._crypto_generichash_final=function(){return (Q._crypto_generichash_final=Q.asm.va).apply(null,arguments)},Q._crypto_generichash_keygen=function(){return (Q._crypto_generichash_keygen=Q.asm.wa).apply(null,arguments)},Q._crypto_hash_bytes=function(){return (Q._crypto_hash_bytes=Q.asm.xa).apply(null,arguments)},Q._crypto_hash=function(){return (Q._crypto_hash=Q.asm.ya).apply(null,arguments)},Q._crypto_kdf_bytes_min=function(){return (Q._crypto_kdf_bytes_min=Q.asm.za).apply(null,arguments)},Q._crypto_kdf_bytes_max=function(){return (Q._crypto_kdf_bytes_max=Q.asm.Aa).apply(null,arguments)},Q._crypto_kdf_contextbytes=function(){return (Q._crypto_kdf_contextbytes=Q.asm.Ba).apply(null,arguments)},Q._crypto_kdf_keybytes=function(){return (Q._crypto_kdf_keybytes=Q.asm.Ca).apply(null,arguments)},Q._crypto_kdf_derive_from_key=function(){return (Q._crypto_kdf_derive_from_key=Q.asm.Da).apply(null,arguments)},Q._crypto_kdf_keygen=function(){return (Q._crypto_kdf_keygen=Q.asm.Ea).apply(null,arguments)},Q._crypto_kx_seed_keypair=function(){return (Q._crypto_kx_seed_keypair=Q.asm.Fa).apply(null,arguments)},Q._crypto_kx_keypair=function(){return (Q._crypto_kx_keypair=Q.asm.Ga).apply(null,arguments)},Q._crypto_kx_client_session_keys=function(){return (Q._crypto_kx_client_session_keys=Q.asm.Ha).apply(null,arguments)},Q._crypto_kx_server_session_keys=function(){return (Q._crypto_kx_server_session_keys=Q.asm.Ia).apply(null,arguments)},Q._crypto_kx_publickeybytes=function(){return (Q._crypto_kx_publickeybytes=Q.asm.Ja).apply(null,arguments)},Q._crypto_kx_secretkeybytes=function(){return (Q._crypto_kx_secretkeybytes=Q.asm.Ka).apply(null,arguments)},Q._crypto_kx_seedbytes=function(){return (Q._crypto_kx_seedbytes=Q.asm.La).apply(null,arguments)},Q._crypto_kx_sessionkeybytes=function(){return (Q._crypto_kx_sessionkeybytes=Q.asm.Ma).apply(null,arguments)},Q._crypto_pwhash_alg_argon2i13=function(){return (Q._crypto_pwhash_alg_argon2i13=Q.asm.Na).apply(null,arguments)},Q._crypto_pwhash_alg_argon2id13=function(){return (Q._crypto_pwhash_alg_argon2id13=Q.asm.Oa).apply(null,arguments)},Q._crypto_pwhash_alg_default=function(){return (Q._crypto_pwhash_alg_default=Q.asm.Pa).apply(null,arguments)},Q._crypto_pwhash_bytes_min=function(){return (Q._crypto_pwhash_bytes_min=Q.asm.Qa).apply(null,arguments)},Q._crypto_pwhash_bytes_max=function(){return (Q._crypto_pwhash_bytes_max=Q.asm.Ra).apply(null,arguments)},Q._crypto_pwhash_passwd_min=function(){return (Q._crypto_pwhash_passwd_min=Q.asm.Sa).apply(null,arguments)},Q._crypto_pwhash_passwd_max=function(){return (Q._crypto_pwhash_passwd_max=Q.asm.Ta).apply(null,arguments)},Q._crypto_pwhash_saltbytes=function(){return (Q._crypto_pwhash_saltbytes=Q.asm.Ua).apply(null,arguments)},Q._crypto_pwhash_strbytes=function(){return (Q._crypto_pwhash_strbytes=Q.asm.Va).apply(null,arguments)},Q._crypto_pwhash_strprefix=function(){return (Q._crypto_pwhash_strprefix=Q.asm.Wa).apply(null,arguments)},Q._crypto_pwhash_opslimit_min=function(){return (Q._crypto_pwhash_opslimit_min=Q.asm.Xa).apply(null,arguments)},Q._crypto_pwhash_opslimit_max=function(){return (Q._crypto_pwhash_opslimit_max=Q.asm.Ya).apply(null,arguments)},Q._crypto_pwhash_memlimit_min=function(){return (Q._crypto_pwhash_memlimit_min=Q.asm.Za).apply(null,arguments)},Q._crypto_pwhash_memlimit_max=function(){return (Q._crypto_pwhash_memlimit_max=Q.asm._a).apply(null,arguments)},Q._crypto_pwhash_opslimit_interactive=function(){return (Q._crypto_pwhash_opslimit_interactive=Q.asm.$a).apply(null,arguments)},Q._crypto_pwhash_memlimit_interactive=function(){return (Q._crypto_pwhash_memlimit_interactive=Q.asm.ab).apply(null,arguments)},Q._crypto_pwhash_opslimit_moderate=function(){return (Q._crypto_pwhash_opslimit_moderate=Q.asm.bb).apply(null,arguments)},Q._crypto_pwhash_memlimit_moderate=function(){return (Q._crypto_pwhash_memlimit_moderate=Q.asm.cb).apply(null,arguments)},Q._crypto_pwhash_opslimit_sensitive=function(){return (Q._crypto_pwhash_opslimit_sensitive=Q.asm.db).apply(null,arguments)},Q._crypto_pwhash_memlimit_sensitive=function(){return (Q._crypto_pwhash_memlimit_sensitive=Q.asm.eb).apply(null,arguments)},Q._crypto_pwhash=function(){return (Q._crypto_pwhash=Q.asm.fb).apply(null,arguments)},Q._crypto_pwhash_str=function(){return (Q._crypto_pwhash_str=Q.asm.gb).apply(null,arguments)},Q._crypto_pwhash_str_alg=function(){return (Q._crypto_pwhash_str_alg=Q.asm.hb).apply(null,arguments)},Q._crypto_pwhash_str_verify=function(){return (Q._crypto_pwhash_str_verify=Q.asm.ib).apply(null,arguments)},Q._crypto_pwhash_str_needs_rehash=function(){return (Q._crypto_pwhash_str_needs_rehash=Q.asm.jb).apply(null,arguments)},Q._crypto_scalarmult_base=function(){return (Q._crypto_scalarmult_base=Q.asm.kb).apply(null,arguments)},Q._crypto_scalarmult=function(){return (Q._crypto_scalarmult=Q.asm.lb).apply(null,arguments)},Q._crypto_scalarmult_bytes=function(){return (Q._crypto_scalarmult_bytes=Q.asm.mb).apply(null,arguments)},Q._crypto_scalarmult_scalarbytes=function(){return (Q._crypto_scalarmult_scalarbytes=Q.asm.nb).apply(null,arguments)},Q._crypto_secretbox_keybytes=function(){return (Q._crypto_secretbox_keybytes=Q.asm.ob).apply(null,arguments)},Q._crypto_secretbox_noncebytes=function(){return (Q._crypto_secretbox_noncebytes=Q.asm.pb).apply(null,arguments)},Q._crypto_secretbox_macbytes=function(){return (Q._crypto_secretbox_macbytes=Q.asm.qb).apply(null,arguments)},Q._crypto_secretbox_messagebytes_max=function(){return (Q._crypto_secretbox_messagebytes_max=Q.asm.rb).apply(null,arguments)},Q._crypto_secretbox_keygen=function(){return (Q._crypto_secretbox_keygen=Q.asm.sb).apply(null,arguments)},Q._crypto_secretbox_detached=function(){return (Q._crypto_secretbox_detached=Q.asm.tb).apply(null,arguments)},Q._crypto_secretbox_easy=function(){return (Q._crypto_secretbox_easy=Q.asm.ub).apply(null,arguments)},Q._crypto_secretbox_open_detached=function(){return (Q._crypto_secretbox_open_detached=Q.asm.vb).apply(null,arguments)},Q._crypto_secretbox_open_easy=function(){return (Q._crypto_secretbox_open_easy=Q.asm.wb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keygen=function(){return (Q._crypto_secretstream_xchacha20poly1305_keygen=Q.asm.xb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_init_push=Q.asm.yb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_pull=function(){return (Q._crypto_secretstream_xchacha20poly1305_init_pull=Q.asm.zb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_rekey=function(){return (Q._crypto_secretstream_xchacha20poly1305_rekey=Q.asm.Ab).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_push=Q.asm.Bb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_pull=function(){return (Q._crypto_secretstream_xchacha20poly1305_pull=Q.asm.Cb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_statebytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_statebytes=Q.asm.Db).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_abytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_abytes=Q.asm.Eb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_headerbytes=Q.asm.Fb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keybytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_keybytes=Q.asm.Gb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return (Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=Q.asm.Hb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_message=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_message=Q.asm.Ib).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_push=Q.asm.Jb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_rekey=Q.asm.Kb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_final=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_final=Q.asm.Lb).apply(null,arguments)},Q._crypto_shorthash_bytes=function(){return (Q._crypto_shorthash_bytes=Q.asm.Mb).apply(null,arguments)},Q._crypto_shorthash_keybytes=function(){return (Q._crypto_shorthash_keybytes=Q.asm.Nb).apply(null,arguments)},Q._crypto_shorthash=function(){return (Q._crypto_shorthash=Q.asm.Ob).apply(null,arguments)},Q._crypto_shorthash_keygen=function(){return (Q._crypto_shorthash_keygen=Q.asm.Pb).apply(null,arguments)},Q._crypto_sign_statebytes=function(){return (Q._crypto_sign_statebytes=Q.asm.Qb).apply(null,arguments)},Q._crypto_sign_bytes=function(){return (Q._crypto_sign_bytes=Q.asm.Rb).apply(null,arguments)},Q._crypto_sign_seedbytes=function(){return (Q._crypto_sign_seedbytes=Q.asm.Sb).apply(null,arguments)},Q._crypto_sign_publickeybytes=function(){return (Q._crypto_sign_publickeybytes=Q.asm.Tb).apply(null,arguments)},Q._crypto_sign_secretkeybytes=function(){return (Q._crypto_sign_secretkeybytes=Q.asm.Ub).apply(null,arguments)},Q._crypto_sign_messagebytes_max=function(){return (Q._crypto_sign_messagebytes_max=Q.asm.Vb).apply(null,arguments)},Q._crypto_sign_seed_keypair=function(){return (Q._crypto_sign_seed_keypair=Q.asm.Wb).apply(null,arguments)},Q._crypto_sign_keypair=function(){return (Q._crypto_sign_keypair=Q.asm.Xb).apply(null,arguments)},Q._crypto_sign=function(){return (Q._crypto_sign=Q.asm.Yb).apply(null,arguments)},Q._crypto_sign_open=function(){return (Q._crypto_sign_open=Q.asm.Zb).apply(null,arguments)},Q._crypto_sign_detached=function(){return (Q._crypto_sign_detached=Q.asm._b).apply(null,arguments)},Q._crypto_sign_verify_detached=function(){return (Q._crypto_sign_verify_detached=Q.asm.$b).apply(null,arguments)},Q._crypto_sign_init=function(){return (Q._crypto_sign_init=Q.asm.ac).apply(null,arguments)},Q._crypto_sign_update=function(){return (Q._crypto_sign_update=Q.asm.bc).apply(null,arguments)},Q._crypto_sign_final_create=function(){return (Q._crypto_sign_final_create=Q.asm.cc).apply(null,arguments)},Q._crypto_sign_final_verify=function(){return (Q._crypto_sign_final_verify=Q.asm.dc).apply(null,arguments)},Q._crypto_sign_ed25519_pk_to_curve25519=function(){return (Q._crypto_sign_ed25519_pk_to_curve25519=Q.asm.ec).apply(null,arguments)},Q._crypto_sign_ed25519_sk_to_curve25519=function(){return (Q._crypto_sign_ed25519_sk_to_curve25519=Q.asm.fc).apply(null,arguments)},Q._randombytes_random=function(){return (Q._randombytes_random=Q.asm.gc).apply(null,arguments)},Q._randombytes_stir=function(){return (Q._randombytes_stir=Q.asm.hc).apply(null,arguments)},Q._randombytes_uniform=function(){return (Q._randombytes_uniform=Q.asm.ic).apply(null,arguments)},Q._randombytes_buf=function(){return (Q._randombytes_buf=Q.asm.jc).apply(null,arguments)},Q._randombytes_buf_deterministic=function(){return (Q._randombytes_buf_deterministic=Q.asm.kc).apply(null,arguments)},Q._randombytes_seedbytes=function(){return (Q._randombytes_seedbytes=Q.asm.lc).apply(null,arguments)},Q._randombytes_close=function(){return (Q._randombytes_close=Q.asm.mc).apply(null,arguments)},Q._randombytes=function(){return (Q._randombytes=Q.asm.nc).apply(null,arguments)},Q._sodium_bin2hex=function(){return (Q._sodium_bin2hex=Q.asm.oc).apply(null,arguments)},Q._sodium_hex2bin=function(){return (Q._sodium_hex2bin=Q.asm.pc).apply(null,arguments)},Q._sodium_base64_encoded_len=function(){return (Q._sodium_base64_encoded_len=Q.asm.qc).apply(null,arguments)},Q._sodium_bin2base64=function(){return (Q._sodium_bin2base64=Q.asm.rc).apply(null,arguments)},Q._sodium_base642bin=function(){return (Q._sodium_base642bin=Q.asm.sc).apply(null,arguments)},Q._sodium_init=function(){return (Q._sodium_init=Q.asm.tc).apply(null,arguments)},Q._sodium_pad=function(){return (Q._sodium_pad=Q.asm.uc).apply(null,arguments)},Q._sodium_unpad=function(){return (Q._sodium_unpad=Q.asm.vc).apply(null,arguments)},Q._sodium_version_string=function(){return (Q._sodium_version_string=Q.asm.wc).apply(null,arguments)},Q._sodium_library_version_major=function(){return (Q._sodium_library_version_major=Q.asm.xc).apply(null,arguments)},Q._sodium_library_version_minor=function(){return (Q._sodium_library_version_minor=Q.asm.yc).apply(null,arguments)},Q._sodium_library_minimal=function(){return (Q._sodium_library_minimal=Q.asm.zc).apply(null,arguments)},Q.___errno_location=function(){return (SA=Q.___errno_location=Q.asm.Ac).apply(null,arguments)});function NA(A){function I(){mA||(mA=!0,Q.calledRun=!0,F||(X(),V(),Q.onRuntimeInitialized&&Q.onRuntimeInitialized(),W()));}Z>0||(q(),Z>0||(Q.setStatus?(Q.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Q.setStatus("");}),1),I();}),1)):I()));}if(Q._malloc=function(){return (Q._malloc=Q.asm.Bc).apply(null,arguments)},Q._free=function(){return (Q._free=Q.asm.Cc).apply(null,arguments)},Q.setValue=p,Q.getValue=l,Q.UTF8ToString=N,z=function A(){mA||NA(),mA||(z=A);},Q.run=NA,Q.preInit)for("function"==typeof Q.preInit&&(Q.preInit=[Q.preInit]);Q.preInit.length>0;)Q.preInit.pop()();NA();}))};var g,Q=void 0!==Q?Q:{},C={};for(g in Q)Q.hasOwnProperty(g)&&(C[g]=Q[g]);var i=!1,n=!1,a=!1,r=!1;i="object"==typeof window,n="function"==typeof importScripts,a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,r=!i&&!a&&!n;var o,e,t,f,c,y="";function s(A){return Q.locateFile?Q.locateFile(A,y):y+A}a?(y=n?path__default['default'].dirname(y)+"/":__dirname+"/",o=function(A,I){var g=HA(A);return g?I?g:g.toString():(f||(f=fs__default['default']),c||(c=path__default['default']),A=c.normalize(A),f.readFileSync(A,I?null:"utf8"))},t=function(A){var I=o(A,!0);return I.buffer||(I=new Uint8Array(I)),F(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),(module.exports=Q),Q.inspect=function(){return "[Emscripten Module object]"}):r?("undefined"!=typeof read&&(o=function(A){var I=HA(A);return I?GA(I):read(A)}),t=function(A){var I;return (I=HA(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(F("object"==typeof(I=read(A,"binary"))),I)},"undefined"!=typeof scriptArgs?scriptArgs:void 0!==arguments&&(arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||n)&&(n?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",o=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=HA(A);if(g)return GA(g);throw I}},n&&(t=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=HA(A);if(g)return g;throw I}}),e=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else {var Q=HA(A);Q?I(Q.buffer):g();}},B.onerror=g,B.send(null);}),Q.print;var w,h,D=Q.printErr||void 0;for(g in C)C.hasOwnProperty(g)&&(Q[g]=C[g]);function u(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":k[A>>0]=I;break;case"i16":H[A>>1]=I;break;case"i32":Y[A>>2]=I;break;case"i64":EA=[I>>>0,(CA=I,+Math.abs(CA)>=1?CA>0?(0|Math.min(+Math.floor(CA/4294967296),4294967295))>>>0:~~+Math.ceil((CA-+(~~CA>>>0))/4294967296)>>>0:0)],Y[A>>2]=EA[0],Y[A+4>>2]=EA[1];break;case"float":b[A>>2]=I;break;case"double":m[A>>3]=I;break;default:$("invalid type for setValue: "+g);}}function p(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return k[A>>0];case"i16":return H[A>>1];case"i32":case"i64":return Y[A>>2];case"float":return b[A>>2];case"double":return m[A>>3];default:$("invalid type for getValue: "+I);}return null}C=null,Q.arguments&&(Q.arguments),Q.thisProgram&&Q.thisProgram,Q.quit&&Q.quit,Q.wasmBinary&&(w=Q.wasmBinary),Q.noExitRuntime&&Q.noExitRuntime,"object"!=typeof WebAssembly&&$("no native wasm support detected");var l=!1;function F(A,I){A||$("Assertion failed: "+I);}var G,k,_,H,Y,b,m,v="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function U(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&v)return v.decode(A.subarray(I,Q));for(var C="";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else {var a=E-65536;C+=String.fromCharCode(55296|a>>10,56320|1023&a);}}else C+=String.fromCharCode((31&E)<<6|i);}else C+=String.fromCharCode(E);}return C}function S(A,I){return A?U(_,A,I):""}function N(A,I){return A%I>0&&(A+=I-A%I),A}function M(A){G=A,Q.HEAP8=k=new Int8Array(A),Q.HEAP16=H=new Int16Array(A),Q.HEAP32=Y=new Int32Array(A),Q.HEAPU8=_=new Uint8Array(A),Q.HEAPU16=new Uint16Array(A),Q.HEAPU32=new Uint32Array(A),Q.HEAPF32=b=new Float32Array(A),Q.HEAPF64=m=new Float64Array(A);}Q.INITIAL_MEMORY;var d,P=[],R=[],J=[],x=[];function L(){if(Q.preRun)for("function"==typeof Q.preRun&&(Q.preRun=[Q.preRun]);Q.preRun.length;)V(Q.preRun.shift());eA(P);}function K(){eA(R);}function q(){eA(J);}function X(){if(Q.postRun)for("function"==typeof Q.postRun&&(Q.postRun=[Q.postRun]);Q.postRun.length;)W(Q.postRun.shift());eA(x);}function V(A){P.unshift(A);}function W(A){x.unshift(A);}R.push({func:function(){mA();}});var T=0,Z=null;function O(A){T++,Q.monitorRunDependencies&&Q.monitorRunDependencies(T);}function z(A){if(T--,Q.monitorRunDependencies&&Q.monitorRunDependencies(T),0==T&&(Z)){var I=Z;Z=null,I();}}function $(A){throw Q.onAbort&&Q.onAbort(A),D(A+=""),l=!0,A="abort("+A+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(A)}function AA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}Q.preloadedImages={},Q.preloadedAudios={};var IA="data:application/octet-stream;base64,";function gA(A){return AA(A,IA)}var BA="file://";function QA(A){return AA(A,BA)}var CA,EA,iA="data:application/octet-stream;base64,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CiASfnwgCSALfnwiEUKAgIAQfCIUQhqHfCIiQoCAgAh8IiNCGYd8IhkgGUKAgIAQfCIZQoCAgOAPg30+AgggACASIBh+IA0gDn58IAkgEH58IAwgHH58IAsgF358IBNCGod8IhMgE0KAgIAIfCITQoCAgPAPg30+AhwgACAMIBp+IAkgFX58IBAgFn58IAogD358IAsgDX58IBlCGod8IgogCkKAgIAIfCIKQoCAgPAPg30+AgwgACAQIBJ+IA0gDX58IA4gD358IAkgG358IAwgF358IAsgA6wiDX58IBNCGYd8IgsgC0KAgIAQfCILQoCAgOAPg30+AiAgACAgICFCgICA8A+DfSAeIB9CgICAYIN9IApCGYd8IgpCgICAEHwiD0IaiHw+AhQgACAKIA9CgICA4A+DfT4CECAAIA4gEH4gGCAdfnwgEiAcfnwgCSAXfnwgDCANfnwgC0Iah3wiCSAJQoCAgAh8IglCgICA8A+DfT4CJCAAICIgI0KAgIDwD4N9IBEgFEKAgIBgg30gCUIZh0ITfnwiCUKAgIAQfCIMQhqIfD4CBCAAIAkgDEKAgIDgD4N9PgIACxAAIAAzAAAgADEAAkIQhoQL8wICAn8BfgJAIAJFDQAgACACaiIDQQFrIAE6AAAgACABOgAAIAJBA0kNACADQQJrIAE6AAAgACABOgABIANBA2sgAToAACAAIAE6AAIgAkEHSQ0AIANBBGsgAToAACAAIAE6AAMgAkEJSQ0AIABBACAAa0EDcSIEaiIDIAFB/wFxQYGChAhsIgE2AgAgAyACIARrQXxxIgRqIgJBBGsgATYCACAEQQlJDQAgAyABNgIIIAMgATYCBCACQQhrIAE2AgAgAkEMayABNgIAIARBGUkNACADIAE2AhggAyABNgIUIAMgATYCECADIAE2AgwgAkEQayABNgIAIAJBFGsgATYCACACQRhrIAE2AgAgAkEcayABNgIAIAQgA0EEcUEYciIEayICQSBJDQAgAa0iBUIghiAFhCEFIAMgBGohAQNAIAEgBTcDGCABIAU3AxAgASAFNwMIIAEgBTcDACABQSBqIQEgAkEgayICQR9LDQALCyAACwkAIAAgATcAAAuCBAEDfyACQYAETwRAIAAgASACEAQaIAAPCyAAIAJqIQMCQCAAIAFzQQNxRQRAAkAgAkEBSARAIAAhAgwBCyAAQQNxRQRAIAAhAgwBCyAAIQIDQCACIAEtAAA6AAAgAUEBaiEBIAJBAWoiAiADTw0BIAJBA3ENAAsLAkAgA0F8cSIEQcAASQ0AIAIgBEFAaiIFSw0AA0AgAiABKAIANgIAIAIgASgCBDYCBCACIAEoAgg2AgggAiABKAIMNgIMIAIgASgCEDYCECACIAEoAhQ2AhQgAiABKAIYNgIYIAIgASgCHDYCHCACIAEoAiA2AiAgAiABKAIkNgIkIAIgASgCKDYCKCACIAEoAiw2AiwgAiABKAIwNgIwIAIgASgCNDYCNCACIAEoAjg2AjggAiABKAI8NgI8IAFBQGshASACQUBrIgIgBU0NAAsLIAIgBE8NAQNAIAIgASgCADYCACABQQRqIQEgAkEEaiICIARJDQALDAELIANBBEkEQCAAIQIMAQsgACADQQRrIgRLBEAgACECDAELIAAhAgNAIAIgAS0AADoAACACIAEtAAE6AAEgAiABLQACOgACIAIgAS0AAzoAAyABQQRqIQEgAkEEaiICIARNDQALCyACIANJBEADQCACIAEtAAA6AAAgAUEBaiEBIAJBAWoiAiADRw0ACwsgAAvsAQESfyACKAIEIQMgASgCBCEEIAIoAgghBSABKAIIIQYgAigCDCEHIAEoAgwhCCACKAIQIQkgASgCECEKIAIoAhQhCyABKAIUIQwgAigCGCENIAEoAhghDiACKAIcIQ8gASgCHCEQIAIoAiAhESABKAIgIRIgAigCJCETIAEoAiQhFCAAIAIoAgAgASgCAGo2AgAgACATIBRqNgIkIAAgESASajYCICAAIA8gEGo2AhwgACANIA5qNgIYIAAgCyAMajYCFCAAIAkgCmo2AhAgACAHIAhqNgIMIAAgBSAGajYCCCAAIAMgBGo2AgQLGAEBf0HEnAIoAgAiAARAIAARDgALEAIAC0ABA38gACABIAFB+ABqIgIQCyAAQShqIAFBKGoiAyABQdAAaiIEEAsgAEHQAGogBCACEAsgAEH4AGogASADEAsL7AEBEn8gAigCBCEDIAEoAgQhBCACKAIIIQUgASgCCCEGIAIoAgwhByABKAIMIQggAigCECEJIAEoAhAhCiACKAIUIQsgASgCFCEMIAIoAhghDSABKAIYIQ4gAigCHCEPIAEoAhwhECACKAIgIREg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czYCFCABIAUgEHM2AhAgASAEIA9zNgIMIAEgAyANczYCCCABIAAgC3M2AgQgASAWIBdzNgIACykBAX8jAEGAAWsiAiQAIAJBCGogARDoAiAAIAJBCGoQOSACQYABaiQACzIBAX8gACABIAFB+ABqIgIQCyAAQShqIAFBKGogAUHQAGoiARALIABB0ABqIAEgAhALC68CARN/IAEoAgQhDCAAKAIEIQMgASgCCCENIAAoAgghBCABKAIMIQ4gACgCDCEFIAEoAhAhDyAAKAIQIQYgASgCFCEQIAAoAhQhByABKAIYIREgACgCGCEIIAEoAhwhEiAAKAIcIQkgASgCICETIAAoAiAhCiABKAIkIRQgACgCJCELIABBACACayICIAAoAgAiFSABKAIAc3EgFXM2AgAgACALIAsgFHMgAnFzNgIkIAAgCiAKIBNzIAJxczYCICAAIAkgCSAScyACcXM2AhwgACAIIAggEXMgAnFzNgIYIAAgByAHIBBzIAJxczYCFCAAIAYgBiAPcyACcXM2AhAgACAFIAUgDnMgAnFzNgIMIAAgBCAEIA1zIAJxczYCCCAAIAMgAyAMcyACcXM2AgQLJAEBfyMAQSBrIgEkACABIAAQLSABQSAQZSEAIAFBIGokACAAC6YEAgp/Dn4gACgCJCEEIAAoAiAhBSAAKAIcIQYgACgCGCEHIAAoAhQhAyACQhBaBEAgAC0AUEVBGHQhCCAAKAIEIglBBWytIRkgACgCCCIKQQVsrSEXIAAoAgwiC0EFbK0hFSAAKAIQIgxBBWytIRMgDK0hGiALrSEYIAqtIRYgCa0hFCAANQIAIRIDQCABKAADQQJ2Qf///x9xIAdqrSINIBh+IAEoAABB////H3EgA2qtIg4gGn58IAEoAAZBBHZB////H3EgBmqtIg8gFn58IAEoAAlBBnYgBWqtIhAgFH58IAQgCGogASgADEEIdmqtIhEgEn58IA0gFn4gDiAYfnwgDyAUfnwgECASfnwgESATfnwgDSAUfiAOIBZ+fCAPIBJ+fCAQIBN+fCARIBV+fCANIBJ+IA4gFH58IA8gE358IBAgFX58IBEgF358IA0gE34gDiASfnwgDyAVfnwgECAXfnwgESAZfnwiDUIaiEL/////D4N8Ig5CGohC/////w+DfCIPQhqIQv////8Pg3wiEEIaiEL/////D4N8IhFCGoinQQVsIA2nQf///x9xaiIDQRp2IA6nQf///x9xaiEHIA+nQf///x9xIQYgEKdB////H3EhBSARp0H///8fcSEEIANB////H3EhAyABQRBqIQEgAkIQfSICQg9WDQALCyAAIAM2AhQgACAENgIkIAAgBTYCICAAIAY2AhwgACAHNgIYC/IBAQJ/IABFBEBBZw8LIAAoAgBFBEBBfw8LAkACQAJ/QX4gACgCBEEQSQ0AGiAAKAIIRQRAQW4gACgCDA0BGgsgACgCFCEBIAAoAhBFDQFBeiABQQhJDQAaIAAoAhhFBEBBbCAAKAIcDQEaCyAAKAIgRQRAQWsgACgCJA0BGgsgACgCMCIBRQRAQXAPC0FvIAFB////B0sNABpBciAAKAIsIgJBCEkNABpBcSACQYCAgAFLDQAaQXIgAiABQQN0SQ0AGiAAKAIoRQRAQXQPCyAAKAI0IgANAkFkCw8LQW1BeiABGw8LQWNBACAAQf///wdLGwuTDQIRfxB+IwBBgBBrIgMkACADQYAIaiABECogA0GACGogABAuIAMgA0GACGoQKiADIAIQLkEAIQEDQCADQYAIaiAEQQd0IgBBwAByaiIFKQMAIANBgAhqIABB4AByaiIGKQMAIANBgAhqIABqIgcpAwAgA0GACGogAEEgcmoiCCkDACIYEAciFIVBIBAGIhUQByIWIBiFQRgQBiEYIBggFiAVIBQgGBAHIheFQRAQBiIaEAciIYVBPxAGIRggA0GACGogAEHIAHJqIgkpAwAgA0GACGogAEHoAHJqIgopAwAgA0GACGogAEEIcmoiCykDACADQYAIaiAAQShyaiIMKQMAIhQQByIVhUEgEAYiFhAHIhsgFIVBGBAGIRQgFCAbIBYgFSAUEAciG4VBEBAGIiIQByIjhUE/EAYhFCADQYAIaiAAQdAAcmoiDSkDACADQYAIaiAAQfAAcmoiDikDACADQYAIaiAAQRByaiIPKQMAIANBgAhqIABBMHJqIhApAwAiFRAHIhaFQSAQBiIcEAciHSAVhUEYEAYhFSAVIB0gHCAWIBUQByIdhUEQEAYiHBAHIh6FQT8QBiEVIANBgAhqIABB2AByaiIRKQMAIANBgAhqIABB+AByaiISKQMAIANBgAhqIABBGHJqIhMpAwAgA0GACGogAEE4cmoiACkDACIWEAciH4VBIBAGIhkQByIgIBaFQRgQBiEWIBYgICAZIB8gFhAHIh+FQRAQBiIZEAciIIVBPxAGIRYgByAXIBQQByIXIBQgHiAXIBmFQSAQBiIXEAciHoVBGBAGIhQQByIZNwMAIBIgFyAZhUEQEAYiFzcDACANIB4gFxAHIhc3AwAgDCAUIBeFQT8QBjcDACALIBsgFRAHIhQgFSAgIBQgGoVBIBAGIhQQByIXhUEYEAYiFRAHIho3AwAgBiAUIBqFQRAQBiIUNwMAIBEgFyAUEAciFDcDACAQIBQgFYVBPxAGNwMAIA8gHSAWEAciFCAWICEgFCAihUEgEAYiFBAHIhWFQRgQBiIWEAciFzcDACAKIBQgF4VBEBAGIhQ3AwAgBSAVIBQQByIUNwMAIAAgFCAWhUE/EAY3AwAgEyAfIBgQByIUIBggIyAUIByFQSAQBiIUEAciFYVBGBAGIhgQByIWNwMAIA4gFCAWhUEQEAYiFDcDACAJIBUgFBAHIhQ3AwAgCCAUIBiFQT8QBjcDACAEQQFqIgRBCEcNAAsDQCABQQR0IgQgA0GACGpqIgAiBUGABGopAwAgACkDgAYgACkDACAAKQOAAiIYEAciFIVBIBAGIhUQByIWIBiFQRgQBiEYIBggFiAVIBQgGBAHIheFQRAQBiIaEAciIYVBPxAGIRggACkDiAQgACkDiAYgA0GACGogBEEIcmoiBCkDACAAKQOIAiIUEAciFYVBIBAGIhYQByIbIBSFQRgQBiEUIBQgGyAWIBUgFBAHIhuFQRAQBiIiEAciI4VBPxAGIRQgACkDgAUgACkDgAcgACkDgAEgACkDgAMiFRAHIhaFQSAQBiIcEAciHSAVhUEYEAYhFSAVIB0gHCAWIBUQByIdhUEQEAYiHBAHIh6FQT8QBiEVIAApA4gFIAApA4gHIAApA4gBIAApA4gDIhYQByIfhUEgEAYiGRAHIiAgFoVBGBAGIRYgFiAgIBkgHyAWEAciH4VBEBAGIhkQByIghUE/EAYhFiAAIBcgFBAHIhcgFCAeIBcgGYVBIBAGIhcQByIehUEYEAYiFBAHIhk3AwAgACAXIBmFQRAQBiIXNwOIByAAIB4gFxAHIhc3A4AFIAAgFCAXhUE/EAY3A4gCIAQgGyAVEAciFCAVICAgFCAahUEgEAYiFBAHIheFQRgQBiIVEAciGjcDACAAIBQgGoVBEBAGIhQ3A4AGIAAgFyAUEAciFDcDiAUgACAUIBWFQT8QBjcDgAMgACAdIBYQByIUIBYgISAUICKFQSAQBiIUEAciFYVBGBAGIhYQByIXNwOAASAAIBQgF4VBEBAGIhQ3A4gGIAUgFSAUEAciFDcDgAQgACAUIBaFQT8QBjcDiAMgACAfIBgQByIUIBggIyAUIByFQSAQBiIUEAciFYVBGBAGIhgQByIWNwOIASAAIBQgFoVBEBAGIhQ3A4AHIAAgFSAUEAciFDcDiAQgACAUIBiFQT8QBjcDgAIgAUEBaiIBQQhHDQALIAIgAxAqIAIgA0GACGoQLiADQYAQaiQAC8QDAQJ/IwAiBCEFIARBwARrQUBxIgQkACAEQQA2ArwBIARBvAFqIAEQCgJAIAFBwABNBEAgBEHAAWpBAEEAIAEQPkEASA0BIARBwAFqIARBvAFqQgQQGEEASA0BIARBwAFqIAIgA60QGEEASA0BIARBwAFqIAAgARA9GgwBCyAEQcABakEAQQBBwAAQPkEASA0AIARBwAFqIARBvAFqQgQQGEEASA0AIARBwAFqIAIgA60QGEEASA0AIARBwAFqIARB8ABqQcAAED1BAEgNACAAIAQpA3A3AAAgACAEKQN4NwAIIAAgBCkDiAE3ABggACAEKQOAATcAECAAQSBqIQAgAUEgayIBQcEATwRAA0AgBEEwaiAEQfAAakHAABASGiAEQfAAakHAACAEQTBqQsAAQQBBABBXQQBIDQIgACAEKQNwNwAAIAAgBCkDeDcACCAAIAQpA4gBNwAYIAAgBCkDgAE3ABAgAEEgaiEAIAFBIGsiAUHAAEsNAAsLIARBMGogBEHwAGpBwAAQEhogBEHwAGogASAEQTBqQsAAQQBBABBXQQBIDQAgACAEQfAAaiABEBIaCyAEQcABakGAAxAJIAUkAAs0AQF/QX8hBiABQQFrQT9LIAVBwABLcgR/IAYFIAAgAiAEIAFB/wFxIAMgBUH/AXEQxwELC9ECAQN/IwBBQGoiBCQAAkAgAkUgAkHBAE9yRQRAQX8hAyAAKQBQUARAIAAgACgA4AIiA0GBAU8EfyAAQoABEFkgACAAQeAAaiIFEF4gACAAKADgAkGAAWsiAzYA4AIgA0GBAU8NAyAFIABB4AFqIAMQEhogACgA4AIFIAMLrRBZIAAiAy0A5AIEQCADQn83AFgLIANCfzcAUCAAQeAAaiIDIAAoAOACIgVqQQBBgAIgBWsQEBogACADEF4gBCAAKQAAEBEgBEEIciAAKQAIEBEgBEEQaiAAKQAQEBEgBEEYaiAAKQAYEBEgBEEgaiAAKQAgEBEgBEEoaiAAKQAoEBEgBEEwaiAAKQAwEBEgBEE4aiAAKQA4EBEgASAEIAIQEhogAEHAABAJIANBgAIQCUEAIQMLIARBQGskACADDwsQFAALQb4OQd4OQbICQYsPEAAACy0CAX8BfiAAQUBrIgIgASACKQAAIgF8IgM3AAAgACAAKQBIIAEgA1atfDcASAsJACAAQQA2AAALRQEDfyAAQaAPQcAAEBJBQGtBAEGlAhAQGgNAIAAgAkEDdCIDaiIEIAEgA2opAAAgBCkAAIU3AAAgAkEBaiICQQhHDQALCxYAIAAQNSABBEAgAEGQlwJCIhAcGgsLlgEBAX8jAEEwayIBJAAgASAAKQAYNwMYIAEgACkAEDcDECABIAApAAA3AwAgASAAKQAINwMIIAEgACkAJDcDICABIAFCKCAAQSBqQQAgAEH0lwIoAgARFAAaIAAgASkDGDcAGCAAIAEpAxA3ABAgACABKQMINwAIIAAgASkDADcAACAAIAEpAyA3ACQgABBfIAFBMGokAAvuNgIDfx5+IwBBgAJrIgIkAANAIANBA3QiBCACQYABamogASAEaikAADcDACADQQFqIgNBEEcNAAsgAiAAQcAAEBIiASkDACABKQMgIiEgASkDgAF8fCIcIABBQGspAACFQtGFmu/6z5SH0QCFQSAQBiIaQoiS853/zPmE6gB8IhYgIYVBGBAGIRkgGSAaIAEpA4gBIiEgGSAcfHwiEYVBEBAGIgYgFnwiCoVBPxAGIR8gASkDCCABKQOQASIQIAEpAygiGXx8IhwgACkASIVCn9j52cKR2oKbf4VBIBAGIhpCxbHV2aevlMzEAH0iFiAZhUEYEAYhGSAZIBogASkDmAEgGSAcfHwiCYVBEBAGIhMgFnwiEoVBPxAGIRYgASkDECABKQOgASIOIAEpAzAiGXx8IhogACkAUIVC6/qG2r+19sEfhUEgEAYiHUKr8NP0r+68tzx8IhUgGYVBGBAGIRwgHCAdIAEpA6gBIhkgGiAcfHwiDIVBEBAGIgsgFXwiB4VBPxAGIR0gASkDGCABKQOwASIcIAEpAzgiGnx8IgUgACkAWIVC+cL4m5Gjs/DbAIVBIBAGIghCj5KLh9rYgtjaAH0iDSAahUEYEAYhFSAVIA0gCCABKQO4ASIaIAUgFXx8IhSFQRAQBiIPfCINhUE/EAYhBSAWIAcgDyABKQPAASIIIBEgFnx8IhWFQSAQBiIRfCIHhUEYEAYhFiAWIBEgASkDyAEiDyAVIBZ8fCIXhUEQEAYiGCAHfCIghUE/EAYhByAdIAYgASkD0AEiFSAJIB18fCIJhUEgEAYiBiANfCINhUEYEAYhFiAWIA0gBiABKQPYASIRIAkgFnx8IhuFQRAQBiIefCINhUE/EAYhBiAFIAogEyABKQPgASIWIAUgDHx8IgmFQSAQBiITfCIKhUEYEAYhHSAdIAogEyABKQPoASIFIAkgHXx8IgyFQRAQBiITfCIihUE/EAYhCiAfIBIgCyABKQPwASIdIBQgH3x8IhSFQSAQBiILfCIShUEYEAYhCSAeIAkgEiALIAEpA/gBIh8gCSAUfHwiFIVBEBAGIgt8IhKFQT8QBiIJIBcgHXx8IheFQSAQBiIeICJ8IiIgCYVBGBAGIQkgCSAeIAkgFSAXfHwiF4VBEBAGIh4gInwiIoVBPxAGIQkgByASIBMgByAOfCAbfCIShUEgEAYiE3wiDoVBGBAGIQcgByATIAcgCCASfHwiEoVBEBAGIhMgDnwiDoVBPxAGIQcgBiALIAYgD3wgDHwiDIVBIBAGIgsgIHwiD4VBGBAGIQYgBiALIAYgDCAffHwiDIVBEBAGIgsgD3wiD4VBPxAGIQYgCiANIBggBSAKfCAUfCIUhUEgEAYiGHwiDYVBGBAGIQogCiANIBggCiAUIBx8fCINhUEQEAYiFHwiGIVBPxAGIQogByAPIBQgByAXICF8fCIXhUEgEAYiFHwiD4VBGBAGIQcgByAPIBQgByAWIBd8fCIXhUEQEAYiFHwiD4VBPxAGIQcgBiAYIB4gASkDgAEiICAGIBJ8fCIShUEgEAYiG3wiGIVBGBAGIQYgBiAYIBsgBiAQIBJ8fCIShUEQEAYiG3wiGIVBPxAGIQYgCiATIAogDCARfHwiDIVBIBAGIhMgInwiHoVBGBAGIQogCiAeIBMgCiAMIBp8fCIMhUEQEAYiInwiHoVBPxAGIQogCSAOIAsgCSAZfCANfCIOhUEgEAYiC3wiDYVBGBAGIQkgHiAbIAkgDSALIAEpA5gBIhMgCSAOfHwiDoVBEBAGIgt8Ig2FQT8QBiIJIBEgF3x8IheFQSAQBiIbfCIeIAmFQRgQBiEJIAkgGyAJIAggF3x8IheFQRAQBiIbIB58Ih6FQT8QBiEIIAcgIiAHIBZ8IBJ8IgmFQSAQBiISIA18Ig2FQRgQBiEHIAcgEiAHIAkgIHx8IgmFQRAQBiISIA18Ig2FQT8QBiEHIAYgCyAGIBl8IAx8IgyFQSAQBiILIA98Ig+FQRgQBiEGIAYgCyAGIAwgEHx8IgyFQRAQBiILIA98Ig+FQT8QBiEGIAogFCAKIB98IA58Ig6FQSAQBiIUIBh8IhiFQRgQBiEKIAogFCAKIAUgDnx8Ig6FQRAQBiIUIBh8IhiFQT8QBiEKIAcgDyAUIAcgFSAXfHwiD4VBIBAGIhR8IheFQRgQBiEHIAcgFCAHIA8gHXx8Ig+FQRAQBiIUIBd8IheFQT8QBiEHIAYgGCAbIAYgCSATfHwiCYVBIBAGIiB8IhiFQRgQBiEGIAYgGCAgIAYgCSAcfHwiG4VBEBAGIiB8IhiFQT8QBiEGIAogEiAKIAwgGnx8IgmFQSAQBiISIB58IgyFQRgQBiEKIAogDCASIAogCSAhfHwiHoVBEBAGIiJ8IgyFQT8QBiEKIAggDSALIAEpA8gBIgkgCCAOfHwiDoVBIBAGIgt8Ig2FQRgQBiEIIAwgICAIIA0gCyABKQOgASISIAggDnx8Ig6FQRAQBiILfCINhUE/EAYiCCAPIBp8fCIPhUEgEAYiIHwiDCAIhUEYEAYhCCAIIAwgICAIIAkgD3x8Ig+FQRAQBiIgfCIMhUE/EAYhCCAHIA0gIiAHIBN8IBt8IhOFQSAQBiINfCIbhUEYEAYhByAHIA0gByATICF8fCIThUEQEAYiDSAbfCIbhUE/EAYhByAGIBcgCyAFIAZ8IB58Ih6FQSAQBiILfCIXhUEYEAYhBSAFIBcgCyAFIBYgHnx8IheFQRAQBiILfCIehUE/EAYhBSAKIBggFCAKIBF8IA58Ig6FQSAQBiIUfCIYhUEYEAYhBiAGIBQgBiAOIB18fCIOhUEQEAYiCiAYfCIUhUE/EAYhBiAHIB4gCiAHIA8gEHx8Ig+FQSAQBiIKfCIYhUEYEAYhByAHIBggCiAHIA8gHHx8Ig+FQRAQBiIefCIYhUE/EAYhByAFICAgBSATIBl8fCIKhUEgEAYiEyAUfCIUhUEYEAYhBSAFIBQgEyAFIAogFXx8IiCFQRAQBiIifCIUhUE/EAYhBSAGIAwgDSAGIBIgF3x8IhOFQSAQBiIMfCINhUEYEAYhBiAGIA0gDCABKQOAASIKIAYgE3x8IheFQRAQBiIMfCINhUE/EAYhBiAIIBsgCyAIIB98IA58Ig6FQSAQBiILfCIThUEYEAYhCCANICIgCCATIAsgASkDwAEiEyAIIA58fCIOhUEQEAYiC3wiG4VBPxAGIgggCSAPfHwiCYVBIBAGIg98Ig0gCIVBGBAGIQggCCANIA8gCCAJIAp8fCIJhUEQEAYiDXwiD4VBPxAGIQggByAbIAwgByAZfCAgfCIghUEgEAYiDHwiG4VBGBAGIQcgByAMIAcgGiAgfHwiIIVBEBAGIgwgG3wiG4VBPxAGIQcgBSALIAUgEHwgF3wiF4VBIBAGIgsgGHwiGIVBGBAGIQUgBSALIAUgEiAXfHwiEoVBEBAGIgsgGHwiF4VBPxAGIQUgBiAUIB4gBiAVfCAOfCIOhUEgEAYiGHwiFIVBGBAGIQYgBiAUIBggBiAOIB98fCIOhUEQEAYiGHwiFIVBPxAGIQYgByAXIBggByAJIB18fCIJhUEgEAYiGHwiF4VBGBAGIQcgByAXIBggByAJICF8fCIJhUEQEAYiF3wiGIVBPxAGIQcgBSAUIA0gBSARICB8fCIUhUEgEAYiDXwiIIVBGBAGIQUgBSANIAUgFCAWfHwiFIVBEBAGIg0gIHwiIIVBPxAGIQUgBiAMIAYgEiAcfHwiEoVBIBAGIgwgD3wiD4VBGBAGIQYgBiAMIAYgEiATfHwiEoVBEBAGIgwgD3wiD4VBPxAGIQYgCCAbIAsgASkDmAEiHiAIIA58fCIOhUEgEAYiC3wiG4VBGBAGIQggDyANIAggGyALIAEpA+gBIiIgCCAOfHwiDoVBEBAGIgt8IhuFQT8QBiIIIAkgEHx8IgmFQSAQBiINfCIPIAiFQRgQBiEQIBAgDyANIBAgCSAWfHwiCYVBEBAGIg18Ig+FQT8QBiEQIAcgDCAHIBx8IBR8IhSFQSAQBiIMIBt8IhuFQRgQBiEIIAggDCAIIBQgFXx8IgeFQRAQBiIMIBt8IhSFQT8QBiEIIAUgCyAFIAp8IBJ8IgqFQSAQBiISIBh8IguFQRgQBiEFIAUgEiAFIAogEXx8IgqFQRAQBiISIAt8IguFQT8QBiERIAYgFyAGIBN8IA58IhOFQSAQBiIOICB8IheFQRgQBiEFIAUgDiAFIBMgHnx8IgaFQRAQBiITIBd8Ig6FQT8QBiEFIAggCyATIAEpA6ABIAggCXx8IgmFQSAQBiITfCILhUEYEAYhCCAIIBMgCCAJICJ8fCIJhUEQEAYiEyALfCILhUE/EAYhCCARIA4gDSARIAcgGnx8IgeFQSAQBiIOfCINhUEYEAYhESARIA4gESAHIBl8fCIHhUEQEAYiDiANfCINhUE/EAYhESAFIAwgBSAKIB98fCIKhUEgEAYiDCAPfCIPhUEYEAYhBSAFIAwgBSAKIB18fCIKhUEQEAYiDCAPfCIPhUE/EAYhBSAQIBIgECAhfCAGfCIGhUEgEAYiEiAUfCIUhUEYEAYhECAPIA4gECASIAEpA8gBIAYgEHx8IgaFQRAQBiISIBR8IhSFQT8QBiIQIAkgFnx8IgmFQSAQBiIOfCIPIBCFQRgQBiEQIBAgDiAQIAkgGXx8IgmFQRAQBiIOIA98Ig+FQT8QBiEQIAggDCAIICF8IAd8IgeFQSAQBiIMIBR8IhSFQRgQBiEIIAggDCAIIAcgH3x8IgeFQRAQBiIMIBR8IhSFQT8QBiEIIBEgEiARIB18IAp8IgqFQSAQBiISIAt8IguFQRgQBiERIBEgEiABKQPoASAKIBF8fCIKhUEQEAYiEiALfCILhUE/EAYhESAFIBMgASkDoAEgBSAGfHwiBoVBIBAGIhMgDXwiDYVBGBAGIQUgBSATIAUgBiAVfHwiBoVBEBAGIhMgDXwiDYVBPxAGIQUgCCALIBMgASkDgAEgCCAJfHwiCYVBIBAGIhN8IguFQRgQBiEIIAggEyAIIAkgGnx8IgmFQRAQBiITIAt8IguFQT8QBiEIIBEgDiARIAcgHHx8IgeFQSAQBiIOIA18Ig2FQRgQBiERIBEgDiABKQOYASAHIBF8fCIHhUEQEAYiDiANfCINhUE/EAYhESAFIAwgASkDyAEgBSAKfHwiCoVBIBAGIgwgD3wiD4VBGBAGIQUgBSAMIAEpA5ABIAUgCnx8IgqFQRAQBiIMIA98Ig+FQT8QBiEFIBAgEiABKQPAASAGIBB8fCIGhUEgEAYiEiAUfCIUhUEYEAYhECAQIBQgEiABKQPYASIXIAYgEHx8IgaFQRAQBiISfCIUhUE/EAYhECAQIA4gASkD6AEgCSAQfHwiCYVBIBAGIg4gD3wiD4VBGBAGIRAgECAOIAkgEHwgF3wiCYVBEBAGIg4gD3wiD4VBPxAGIRAgCCAMIAggGnwgB3wiB4VBIBAGIgwgFHwiFIVBGBAGIQggCCAMIAggByAdfHwiB4VBEBAGIgwgFHwiFIVBPxAGIQggESASIBEgFnwgCnwiCoVBIBAGIhIgC3wiC4VBGBAGIREgESASIBEgCiAhfHwiCoVBEBAGIhIgC3wiC4VBPxAGIREgBSATIAEpA5gBIAUgBnx8IgaFQSAQBiITIA18Ig2FQRgQBiEFIAUgEyABKQPIASAFIAZ8fCIGhUEQEAYiEyANfCINhUE/EAYhBSAIIBMgCCAJIBl8fCIJhUEgEAYiEyALfCILhUEYEAYhCCAIIBMgASkDgAEgCCAJfHwiCYVBEBAGIhMgC3wiC4VBPxAGIQggESAOIBEgByAffHwiB4VBIBAGIg4gDXwiDYVBGBAGIREgESAOIAEpA6ABIAcgEXx8IgeFQRAQBiIOIA18Ig2FQT8QBiERIAUgDCABKQPAASAFIAp8fCIKhUEgEAYiDCAPfCIPhUEYEAYhBSAFIAwgBSAKIBx8fCIKhUEQEAYiDCAPfCIPhUE/EAYhBSAQIBIgASkDkAEgBiAQfHwiBoVBIBAGIhIgFHwiFIVBGBAGIRAgDyAOIBAgEiAQIAYgFXx8IgaFQRAQBiISIBR8IhSFQT8QBiIQIAkgHHx8IgmFQSAQBiIOfCIPIBCFQRgQBiEQIBAgDiAQIAkgH3x8IgmFQRAQBiIOIA98Ig+FQT8QBiEQIAggDCAIIB18IAd8IgeFQSAQBiIMIBR8IhSFQRgQBiEIIAggDCABKQPIASAHIAh8fCIHhUEQEAYiDCAUfCIUhUE/EAYhCCARIBIgASkD2AEgCiARfHwiCoVBIBAGIhIgC3wiC4VBGBAGIREgESASIAEpA5gBIAogEXx8IgqFQRAQBiISIAt8IguFQT8QBiERIAUgEyABKQOAASAFIAZ8fCIGhUEgEAYiEyANfCINhUEYEAYhBSAFIBMgASkDwAEgBSAGfHwiBoVBEBAGIhMgDXwiDYVBPxAGIQUgCCATIAggCSAWfHwiCYVBIBAGIhMgC3wiC4VBGBAGIQggCCALIBMgASkDkAEiFyAIIAl8fCIJhUEQEAYiE3wiC4VBPxAGIQggESAOIAEpA+gBIAcgEXx8IgeFQSAQBiIOIA18Ig2FQRgQBiERIBEgDiARIAcgGnx8IgeFQRAQBiIOIA18Ig2FQT8QBiERIAUgDCAFIAogIXx8IgqFQSAQBiIMIA98Ig+FQRgQBiEFIAUgDyAMIAEpA6ABIhggBSAKfHwiCoVBEBAGIgx8Ig+FQT8QBiEFIBAgEiAQIBV8IAZ8IgaFQSAQBiISIBR8IhSFQRgQBiEQIA4gECASIBAgBiAZfHwiBoVBEBAGIhIgFHwiFIVBPxAGIhAgCSAVfHwiCYVBIBAGIg4gD3wiDyAQhUEYEAYhFSAVIA8gDiAJIBV8IBd8IgmFQRAQBiIOfCIPhUE/EAYhFSAIIAwgASkDwAEgByAIfHwiB4VBIBAGIgwgFHwiFIVBGBAGIRAgECAMIAcgEHwgGHwiCIVBEBAGIgcgFHwiDIVBPxAGIRAgESASIBEgGnwgCnwiCoVBIBAGIhIgC3wiC4VBGBAGIREgESASIBEgCiAcfHwiCoVBEBAGIhIgC3wiC4VBPxAGIREgBSATIAUgIXwgBnwiBoVBIBAGIhMgDXwiDYVBGBAGIQUgBSATIAUgBiAZfHwiBoVBEBAGIhMgDXwiDYVBPxAGIQUgECALIBMgECAJIB98fCIJhUEgEAYiE3wiC4VBGBAGIRAgECATIAEpA9gBIAkgEHx8IgmFQRAQBiITIAt8IguFQT8QBiEQIBEgDiABKQPIASAIIBF8fCIIhUEgEAYiDiANfCINhUEYEAYhESARIA4gESAIIB18fCIIhUEQEAYiDiANfCINhUE/EAYhESAFIA8gByABKQOYASIUIAUgCnx8IgqFQSAQBiIHfCIPhUEYEAYhBSAFIAcgBSAKIBZ8fCIKhUEQEAYiByAPfCIPhUE/EAYhBSAVIBIgASkD6AEgBiAVfHwiBoVBIBAGIhIgDHwiDIVBGBAGIRUgFSAMIBIgASkDgAEiFyAGIBV8fCIGhUEQEAYiEnwiDIVBPxAGIRUgFSAOIAkgFXwgF3wiCYVBIBAGIg4gD3wiD4VBGBAGIRUgFSAOIBUgCSAhfHwiCYVBEBAGIg4gD3wiD4VBPxAGIRUgECAHIAEpA5ABIAggEHx8IgiFQSAQBiIHIAx8IgyFQRgQBiEQIBAgByAIIBB8IBR8IgiFQRAQBiIHIAx8IgyFQT8QBiEQIBEgEiABKQOgASAKIBF8fCIKhUEgEAYiEiALfCILhUEYEAYhESARIBIgESAKIBl8fCIKhUEQEAYiEiALfCILhUE/EAYhESAFIBMgBSAcfCAGfCIGhUEgEAYiEyANfCINhUEYEAYhBSAFIBMgBSAGIBp8fCIGhUEQEAYiEyANfCINhUE/EAYhBSAQIBMgASkDwAEgCSAQfHwiCYVBIBAGIhMgC3wiC4VBGBAGIRAgECATIAEpA8gBIAkgEHx8IgmFQRAQBiITIAt8IguFQT8QBiEQIBEgDSAOIAEpA9ABIhQgCCARfHwiCIVBIBAGIg58Ig2FQRgQBiERIBEgDiABKQPYASAIIBF8fCIIhUEQEAYiDiANfCINhUE/EAYhESAFIAcgBSAKIBZ8fCIKhUEgEAYiByAPfCIPhUEYEAYhBSAFIAcgASkD6AEgBSAKfHwiCoVBEBAGIgcgD3wiD4VBPxAGIQUgFSASIBUgHXwgBnwiBoVBIBAGIhIgDHwiDIVBGBAGIRUgDiAVIBIgFSAGIB98fCIGhUEQEAYiEiAMfCIMhUE/EAYiFSAJIB18fCIJhUEgEAYiDiAPfCIPIBWFQRgQBiEdIB0gDiAJIB18IBR8IgmFQRAQBiIOIA98IhSFQT8QBiEdIBAgByABKQOgASAIIBB8fCIIhUEgEAYiByAMfCIMhUEYEAYhFSAVIAcgASkDwAEgCCAVfHwiCIVBEBAGIgcgDHwiDIVBPxAGIRUgESASIAEpA8gBIAogEXx8IgqFQSAQBiISIAt8IguFQRgQBiEQIBAgEiAQIAogH3x8IhGFQRAQBiIKIAt8IhKFQT8QBiEfIAUgEyABKQPoASAFIAZ8fCIGhUEgEAYiEyANfCILhUEYEAYhECAQIBMgECAGIBx8fCIFhUEQEAYiBiALfCIThUE/EAYhHCABIBUgCSAhfHwiISAWfCAVIAYgIYVBIBAGIhYgEnwiEIVBGBAGIhV8IiE3AwAgASAWICGFQRAQBiIWNwN4IAEgECAWfCIWNwNQIAEgFSAWhUE/EAY3AyggASAfIA4gASkDgAEgCCAffHwiFoVBIBAGIhUgE3wiEIVBGBAGIh8gFnwgASkDkAF8IhY3AwggASAVIBaFQRAQBiIWNwNgIAEgECAWfCIWNwNYIAEgFiAfhUE/EAY3AzAgASAaIAEpA9gBIBEgHHx8IhZ8IBwgByAWhUEgEAYiGiAUfCIWhUEYEAYiHHwiHzcDECABIBogH4VBEBAGIho3A2ggASAWIBp8Iho3A0AgASAaIByFQT8QBjcDOCABIB0gCiAZIB18IAV8IhmFQSAQBiIcIAx8IhqFQRgQBiIWIBl8IAEpA5gBfCIZNwMYIAEgGSAchUEQEAYiGTcDcCABIBkgGnwiGTcDSCABIBYgGYVBPxAGNwMgIAAgASkDQCAhIAApAACFhTcAAEEBIQMDQCAAIANBA3QiAmoiBCABIAJqIgIpAwAgBCkAAIUgAkFAaykDAIU3AAAgA0EBaiIDQQhHDQALIAFBgAJqJAALCQAgAEEBNgAgCwQAQQMLBABBfwvjAwEKfyMAQRBrIgkkACAJQQA2AgwgBxBkAkACQCADRQ0AIAdBBHEhDwJ/AkACQANAIAshCAJAAkADQCACIAhqLAAAIQ0CfyAPBEAgDRCqAgwBCyANEKkCCyIQQf8BRw0BIARFDQIgBCANEENFDQQgCEEBaiIIIANJDQALIAkgAyALQQFqIgAgACADSRs2AgwMBAsgECAOQQZ0aiEOAkAgCkEGaiILQQhJBEAgCyEKDAELIApBAmshCiABIAxNBEAgCSAINgIMQYCYAkHEADYCAEEBDAYLIAAgDGogDiAKdjoAACAMQQFqIQwLIAhBAWoiCyADSQ0BCwsgCSALNgIMDAELIAkgCDYCDAtBAAshCCAKQQRNDQBBfyEADAELQX8hACAIIA5BfyAKdEF/c3FyDQAgB0ECcUUEQCACIAMgCUEMaiAEIApBAXYQqAIiAA0BC0EAIQACQCAERQ0AIAkoAgwiCCADTw0AAkADQCAEIAIgCGosAAAQQ0UNASAIQQFqIgggA0cNAAsgCSADNgIMDAELIAkgCDYCDAsgDCERCyAJKAIMIQECQCAGBEAgBiABIAJqNgIADAELIAEgA0YNAEGAmAJBHDYCAEF/IQALIAUEQCAFIBE2AgALIAlBEGokACAAC9YDAQZ/IAQQZCADQQNuIgVBAnQhBwJAIAVBfWwgA2oiBUUNACAEQQJxRQRAIAdBBGohBwwBCyAHQQJyIAVBAXZqIQcLAkACQCAHAn8CQCABIAdLBEACQCAEQQRxBEBBACADRQ0EGkEAIQRBACEFDAELQQAgA0UNAxpBACEEQQAhBQwCCwNAIAIgCGotAAAgBkEIdHIhBiAEQQhqIQQDQCAAIAUiCWogBiAEIgpBBmsiBHZBP3EQkQE6AAAgBUEBaiEFIARBBUsNAAsgCEEBaiIIIANHDQALIAUgBEUNAhogACAFaiAGQQwgCmt0QT9xEJEBOgAAIAlBAmoMAgsQFAALA0AgAiAIai0AACAGQQh0ciEGIARBCGohBANAIAAgBSIJaiAGIAQiCkEGayIEdkE/cRCQAToAACAFQQFqIQUgBEEFSw0ACyAIQQFqIgggA0cNAAsgBSAERQ0AGiAAIAVqIAZBDCAKa3RBP3EQkAE6AAAgCUECagsiBk8EQCAGIAdJDQEgBiEHDAILQQAiAEHwlQJqIABBg5YCakHmASAAQZOWAmoQAAALIAAgBmpBPSAHIAZrEBAaCyAAIAdqQQAgASAHQQFqIgIgASACSxsgB2sQEBogAAsQACAAQXlxQQFHBEAQFAALC0UBAn8jAEEQayIDQQA6AA8gAQRAA0AgAyAAIAJqLQAAIAMtAA9yOgAPIAJBAWoiAiABRw0ACwsgAy0AD0EBa0EIdkEBcQsLACAAIAEgAhCoAQsIACAAIAEQcgsQACAAIAEgAiADIAQgBRBqCxAAIAAgASACIAMgBCAFEGsLnQICAX8BfiMAQeAAayIGJAAgBiAEIAUQbRogBkEgakIgIARBEGoiBSAGQeCXAigCABERABpBfyEEAkACQCACIAEgAyAGQSBqQciXAigCABENAA0AQQAhBCAARQ0BIAAgAUlBACABIABrrSADVBtFQQAgACABTSAAIAFrrSADWnIbRQRAIAAgASADpxBHIQELAkBCICADIANCIFYbIgdQBEAgBkEgaiAGQSBqIAdCIHwgBSAGEHEMAQsgBkFAayABIAenIgIQEiEEIAZBIGogBkEgaiAHQiB8IAUgBhBxIAAgBCACEBIaC0EAIQQgA0IhVA0AIAAgB6ciAmogASACaiADIAd9IAUgBhCmAQsgBkEgEAkLIAZB4ABqJAAgBAueAgIBfwF+IwBB4AJrIgYkACAGIAQgBRBtGiAAIAJLQQAgACACa60gA1QbRUEAIAAgAk8gAiAAa60gA1pyG0UEQCAAIAIgA6cQRyECCyAGQgA3AzggBkIANwMwIAZCADcDKCAGQgA3AyBCICADIANCIFYbIgdQIgVFBEAgBkFAayACIAenEBIaCyAGQSBqIAZBIGogB0IgfCAEQRBqIgQgBhBxIAZB4ABqIAZBIGoQJCAFRQRAIAAgBkFAayAHpxASGgsgBkEgakHAABAJIANCIVoEQCAAIAenIgVqIAIgBWogAyAHfSAEIAYQpgELIAZBIBAJIAZB4ABqIAAgAxAMIAZB4ABqIAEQIyAGQeAAakGAAhAJIAZB4AJqJABBAAsLACAAIAEgAhC+AgvwBAEVf0Gy2ojLByEDQe7IgZkDIQRB5fDBiwYhBUH0yoHZBiEGQRQhDyACKAAAIQogAigABCEQIAIoAAghEiACKAAMIQsgAigAECEMIAIoABQhByACKAAYIQ0gAigAHCEOIAEoAAAhAiABKAAEIQggASgACCEJIAEoAAwhAQNAIAUgB2pBBxAIIAtzIgsgBWpBCRAIIAlzIgkgC2pBDRAIIAdzIhEgCWpBEhAIIRMgBCAKakEHEAggAXMiASAEakEJEAggDXMiDSABakENEAggCnMiCiANakESEAghFCACIANqQQcQCCAOcyIOIANqQQkQCCAQcyIHIA5qQQ0QCCACcyIVIAdqQRIQCCEWIAYgDGpBBxAIIBJzIgIgBmpBCRAIIAhzIgggAmpBDRAIIAxzIgwgCGpBEhAIIRcgAiAFIBNzIgVqQQcQCCAKcyIKIAVqQQkQCCAHcyIQIApqQQ0QCCACcyISIBBqQRIQCCAFcyEFIAQgFHMiBCALakEHEAggFXMiAiAEakEJEAggCHMiCCACakENEAggC3MiCyAIakESEAggBHMhBCADIBZzIgMgAWpBBxAIIAxzIgwgA2pBCRAIIAlzIgkgDGpBDRAIIAFzIgEgCWpBEhAIIANzIQMgBiAXcyIGIA5qQQcQCCARcyIHIAZqQQkQCCANcyINIAdqQQ0QCCAOcyIOIA1qQRIQCCAGcyEGIA9BAkshESAPQQJrIQ8gEQ0ACyAAIAUQCiAAQQRqIAQQCiAAQQhqIAMQCiAAQQxqIAYQCiAAQRBqIAIQCiAAQRRqIAgQCiAAQRhqIAkQCiAAQRxqIAEQCkEACwQAQQgLKAAgAkKAgICAEFoEQBAUAAsgACABIAIgAyAEIAVB9JcCKAIAERQAGgskACABQoCAgIAQWgRAEBQACyAAIAEgAiADQeyXAigCABERABoLGQAgACABIAIgA0IAIARB5JcCKAIAERUAGgsQACAAIAFB3JcCKAIAEQIACysBAn8jAEEQayIAJAAgAEEAOgAPQYAIIABBD2pBABABIQEgAEEQaiQAIAELlRIBHn4gABAPIRAgADUAAiERIABBBWoQDyESIAA1AAchGSAANQAKIRogAEENahAPIRsgADUADyELIABBEmoQDyEKIABBFWoQDyEIIAA1ABchBSAAQRpqEA8hASAANQAcIRwgADUAHyETIABBImoQDyEUIAA1ACQhDCAAQSdqEA8hDyAAQSpqEA8hCSAANQAsIQYgACAAQS9qEA9CAohC////AIMiAkLRqwh+IAFCAohC////AIN8IAA1ADFCB4hC////AIMiAULTjEN+fCAANQA0QgSIQv///wCDIgNC5/YnfnwgAEE3ahAPQgGIQv///wCDIgRCmNocfnwgADUAOUIGiEL///8AgyIHQpPYKH58IhUgBkIFiEL///8AgyAANQA8QgOIIgZCg6FWfiAJQv///wCDfCINQoCAQH0iDkIVh3wiCUKDoVZ+fCACQtOMQ34gBUIFiEL///8Ag3wgAULn9id+fCADQpjaHH58IARCk9gofnwgAkLn9id+IAhC////AIN8IAFCmNocfnwgA0KT2Ch+fCIFQoCAQH0iFkIViHwiCEKAgEB9IhdCFYd8IBVCgIBAfSIVQoCAgH+DfSIYIBhCgIBAfSIYQoCAgH+DfSAJQtGrCH4gCHwgF0KAgIB/g30gDSAOQoCAgH+DfSAGQtGrCH4gD0IDiEL///8Ag3wgB0KDoVZ+fCAEQoOhVn4gDEIGiEL///8Ag3wgBkLTjEN+fCAHQtGrCH58IgxCgIBAfSIPQhWHfCINQoCAQH0iDkIVh3wiCEKDoVZ+fCAFIAJCmNocfiAKQgOIQv///wCDfCABQpPYKH58IAJCk9gofiALQgaIQv///wCDfCIXQoCAQH0iHUIViHwiCkKAgEB9Ih5CFYh8IBZCgICA////B4N9IAlC04xDfnwgCELRqwh+fCANIA5CgICAf4N9IgtCg6FWfnwiBUKAgEB9Ig1CFYd8Ig5CgIBAfSIWQhWHfCAOIBZCgICAf4N9IAUgDUKAgIB/g30gCiAeQoCAgP///weDfSAJQuf2J358IAhC04xDfnwgC0LRqwh+fCAMIA9CgICAf4N9IANCg6FWfiAUQgGIQv///wCDfCAEQtGrCH58IAZC5/YnfnwgB0LTjEN+fCABQoOhVn4gE0IEiEL///8Ag3wgA0LRqwh+fCAEQtOMQ358IAZCmNocfnwgB0Ln9id+fCITQoCAQH0iFEIVh3wiBUKAgEB9IgxCFYd8IgpCg6FWfnwgFyAdQoCAgP///wGDfSAJQpjaHH58IAhC5/YnfnwgC0LTjEN+fCAKQtGrCH58IAUgDEKAgIB/g30iBUKDoVZ+fCIMQoCAQH0iD0IVh3wiDUKAgEB9Ig5CFYd8IA0gDkKAgIB/g30gDCAPQoCAgH+DfSAJQpPYKH4gG0IBiEL///8Ag3wgCEKY2hx+fCALQuf2J358IApC04xDfnwgBULRqwh+fCATIBRCgICAf4N9IAJCg6FWfiAcQgeIQv///wCDfCABQtGrCH58IANC04xDfnwgBELn9id+fCAGQpPYKH58IAdCmNocfnwgFUIVh3wiAUKAgEB9IgNCFYd8IgJCg6FWfnwgCEKT2Ch+IBpCBIhC////AIN8IAtCmNocfnwgCkLn9id+fCAFQtOMQ358IAJC0asIfnwiBEKAgEB9IgdCFYd8IgZCgIBAfSIJQhWHfCAGIAEgA0KAgIB/g30gGEIVh3wiA0KAgEB9IghCFYciAUKDoVZ+fCAJQoCAgH+DfSABQtGrCH4gBHwgB0KAgIB/g30gC0KT2Ch+IBlCB4hC////AIN8IApCmNocfnwgBULn9id+fCACQtOMQ358IApCk9gofiASQgKIQv///wCDfCAFQpjaHH58IAJC5/YnfnwiBEKAgEB9IgdCFYd8IgZCgIBAfSIJQhWHfCAGIAFC04xDfnwgCUKAgIB/g30gAULn9id+IAR8IAdCgICAf4N9IAVCk9gofiARQgWIQv///wCDfCACQpjaHH58IAJCk9gofiAQQv///wCDfCICQoCAQH0iBEIVh3wiB0KAgEB9IgZCFYd8IAFCmNocfiAHfCAGQoCAgH+DfSACIARCgICAf4N9IAFCk9gofnwiAUIVh3wiBEIVh3wiB0IVh3wiBkIVh3wiCUIVh3wiC0IVh3wiCkIVh3wiBUIVh3wiEEIVh3wiEUIVh3wiEkIVhyADIAhCgICAf4N9fCIIQhWHIgJCk9gofiABQv///wCDfCIBPAAAIAAgAUIIiDwAASAAIAJCmNocfiAEQv///wCDfCABQhWHfCIDQguIPAAEIAAgA0IDiDwAAyAAIAJC5/YnfiAHQv///wCDfCADQhWHfCIEQgaIPAAGIAAgAUIQiEIfgyADQv///wCDIgNCBYaEPAACIAAgAkLTjEN+IAZC////AIN8IARCFYd8IgFCCYg8AAkgACABQgGIPAAIIAAgBEL///8AgyIEQgKGIANCE4iEPAAFIAAgAkLRqwh+IAlC////AIN8IAFCFYd8IgNCDIg8AAwgACADQgSIPAALIAAgAUL///8AgyIHQgeGIARCDoiEPAAHIAAgAkKDoVZ+IAtC////AIN8IANCFYd8IgFCB4g8AA4gACADQv///wCDIgNCBIYgB0IRiIQ8AAogACAKQv///wCDIAFCFYd8IgJCCog8ABEgACACQgKIPAAQIAAgAUL///8AgyIEQgGGIANCFIiEPAANIAAgBUL///8AgyACQhWHfCIBQg2IPAAUIAAgAUIFiDwAEyAAIAJC////AIMiA0IGhiAEQg+IhDwADyAAIBBC////AIMgAUIVh3wiAjwAFSAAIAFCA4YgA0ISiIQ8ABIgACACQgiIPAAWIAAgEUL///8AgyACQhWHfCIBQguIPAAZIAAgAUIDiDwAGCAAIBJC////AIMgAUIVh3wiA0IGiDwAGyAAIAJCEIhCH4MgAUL///8AgyIBQgWGhDwAFyAAIAhC////AIMgA0IVh3wiAkIRiDwAHyAAIAJCCYg8AB4gACACQgGIPAAdIAAgA0L///8AgyIDQgKGIAFCE4iEPAAaIAAgAkIHhiADQg6IhDwAHAvaAQEFfyMAQRBrIgNBADYACyADQQA2AggDQCAAIAJqLQAAIQRBACEBA0AgA0EIaiABaiIFIAUtAAAgAUEFdEGgGWogAmotAAAgBHNyOgAAIAFBAWoiAUEHRw0ACyACQQFqIgJBH0cNAAsgAC0AH0H/AHEhAkEAIQBBACEBA0AgA0EIaiABaiIEIAQtAAAgAiABQQV0Qb8Zai0AAHNyOgAAIAFBAWoiAUEHRw0AC0EAIQEDQCADQQhqIABqLQAAQQFrIAFyIQEgAEEBaiIAQQdHDQALIAFBCHZBAXELpAMBBX8jAEHQA2siAiQAA0AgA0EBdCIFIAJBkANqaiABIANqLQAAIgZBD3E6AAAgAkGQA2ogBUEBcmogBkEEdjoAACADQQFqIgNBIEcNAAtBACEDA0AgAkGQA2ogBGoiASABLQAAIANqIgEgAUEYdEGAgIBAayIBQRh1QfABcWs6AAAgAUEcdSEDIARBAWoiBEE/Rw0ACyACIAItAM8DIANqOgDPAyAAEKsBQQEhAwNAIAIgA0EBdiACQZADaiADaiwAABCpASACQfABaiAAIAIQdyAAIAJB8AFqEBUgA0E+SSEBIANBAmohAyABDQALIAJB8AFqIAAQTyACQfgAaiACQfABahBQIAJB8AFqIAJB+ABqEDkgAkH4AGogAkHwAWoQUCACQfABaiACQfgAahA5IAJB+ABqIAJB8AFqEFAgAkHwAWogAkH4AGoQOSAAIAJB8AFqEBVBACEDA0AgAiADQQF2IAJBkANqIANqLAAAEKkBIAJB8AFqIAAgAhB3IAAgAkHwAWoQFSADQT5JIQEgA0ECaiEDIAENAAsgAkHQA2okAAuLAQEEfyMAQTBrIgUkACAAIAFBKGoiAyABEBMgAEEoaiIEIAMgARAWIABB0ABqIgMgACACEAsgBCAEIAJBKGoQCyAAQfgAaiIGIAJB0ABqIAFB+ABqEAsgBSABQdAAaiIBIAEQEyAAIAMgBBAWIAQgAyAEEBMgAyAFIAYQEyAGIAUgBhAWIAVBMGokAAteAQF/IwBBkAFrIgIkACACQeAAaiABQdAAahA6IAJBMGogASACQeAAahALIAIgAUEoaiACQeAAahALIAAgAhAtIAAgAkEwahCvAUEHdCAALQAfczoAHyACQZABaiQACwMAAQuqAQEJfyABKAIEIQIgASgCCCEDIAEoAgwhBCABKAIQIQUgASgCFCEGIAEoAhghByABKAIcIQggASgCICEJIAEoAiQhCiAAQQAgASgCAGs2AgAgAEEAIAprNgIkIABBACAJazYCICAAQQAgCGs2AhwgAEEAIAdrNgIYIABBACAGazYCFCAAQQAgBWs2AhAgAEEAIARrNgIMIABBACADazYCCCAAQQAgAms2AgQLwgMBDH4gATUAACEEIAFBBGoQDyEFIAFBB2oQDyEGIAFBCmoQDyECIAFBDWoQDyEHIAE1ABAhAyABQRRqEA8hCCABQRdqEA8hCSABQRpqEA8hCiABQR1qEA8hCyAAIAJCA4YiAiACQoCAgAh8IgJCgICA8A+DfSAGQgWGIAVCBoYiBUKAgIAIfCIGQhmHfCIMQoCAgBB8Ig1CGoh8PgIMIAAgDCANQoCAgOAPg30+AgggACADIANCgICACHwiA0KAgIDwD4N9IAdCAoYgAkIZh3wiAkKAgIAQfCIHQhqIfD4CFCAAIAIgB0KAgIDgD4N9PgIQIAAgCEIHhiADQhmHfCIDIANCgICAEHwiA0KAgIDgD4N9PgIYIAAgCUIFhiICIAJCgICACHwiAkKAgIDwD4N9IANCGoh8PgIcIAAgCkIEhiACQhmHfCIDIANCgICAEHwiA0KAgIDgD4N9PgIgIAAgC0IChkL8//8PgyICIAJCgICACHwiAkKAgIAQg30gA0IaiHw+AiQgACAFIAZCgICA8A+DfSAEIAJCGYhCE358IgNCgICAEHwiBEIaiHw+AgQgACADIARCgICA4A+DfT4CAAurAwILfwR+IAApAzgiDVBFBEAgACANpyIDaiICQUBrQQE6AAAgDUIBfEIPWARAIAJBwQBqQQBBDyADaxAQGgsgAEEBOgBQIAAgAEFAa0IQEFMLIAA1AjQhDiAANQIwIQ8gADUCLCEQIAEgADUCKCAAKAIkIAAoAiAgACgCHCAAKAIYIgZBGnZqIgNBGnZqIgJBGnZqIghBgICAYHIgAkH///8fcSIKIANB////H3EiCyAAKAIUIAhBGnZBBWxqIgJB////H3EiBEEFaiIHQRp2IAZB////H3EgAkEadmoiDGoiAkEadmoiA0EadmoiBkEadmoiCUEfdSIFIARxIAcgCUEfdkEBayIHQf///x9xIgRxciAFIAxxIAIgBHFyIgJBGnRyrXwiDacQCiABQQRqIBAgBSALcSADIARxciIDQRR0IAJBBnZyrXwgDUIgiHwiDacQCiABQQhqIA8gBSAKcSAEIAZxciICQQ50IANBDHZyrXwgDUIgiHwiDacQCiABQQxqIA4gByAJcSAFIAhxckEIdCACQRJ2cq18IA1CIIh8pxAKIABB2AAQCQuNAgECfgJAIAApAzgiA1BFBEAgACACQhAgA30iBCACIARUGyIEUAR+IAMFIAAgA6dqQUBrIAEtAAA6AABCASEDIARCAVIEQANAIAAgACkDOCADfKdqQUBrIAEgA6dqLQAAOgAAIANCAXwiAyAEUg0ACwsgACkDOAsgBHwiAzcDOCADQhBUDQEgACAAQUBrQhAQUyAAQgA3AzggAiAEfSECIAEgBKdqIQELIAJCEFoEQCAAIAEgAkJwgyIDEFMgAkIPgyECIAEgA6dqIQELIAJQDQBCACEDA0AgACAAKQM4IAN8p2pBQGsgASADp2otAAA6AAAgA0IBfCIDIAJSDQALIAAgACkDOCACfDcDOAsLsgEBAX8gACABKAAAQf///x9xNgIAIAAgASgAA0ECdkGD/v8fcTYCBCAAIAEoAAZBBHZB/4H/H3E2AgggACABKAAJQQZ2Qf//wB9xNgIMIAEoAAwhAiAAQgA3AhQgAEIANwIcIABBADYCJCAAIAJBCHZB//8/cTYCECAAIAEoABA2AiggACABKAAUNgIsIAAgASgAGDYCMCABKAAcIQEgAEEAOgBQIABCADcDOCAAIAE2AjQLLQECfyMAIgVBgAFrQUBxIgQkACAEIAMQfiAEIAEgAhB9IAQgABB8IAUkAEEACwsAIAAgAUEgEIEBC2wBAX8jAEEQayIDIAA2AgwgAyABNgIIQQAhASADQQA2AgQgAkEBTgRAA0AgAyADKAIEIAMoAgggAWotAAAgAygCDCABai0AAHNyNgIEIAFBAWoiASACRw0ACwsgAygCBEEBa0EIdkEBcUEBawspAQJ/A0AgACACQQN0IgNqIAEgA2opAAA3AwAgAkEBaiICQYABRw0ACwtCAQF/IAAgAUEEcRC/ASAAKAIEEBkgAEEANgIEAkAgACgCACIBRQ0AIAEoAgAiAkUNACACEBkLIAEQGSAAQQA2AgALsAEBAX8jAEHAAWsiBCQAIAJFIAFBAWtB/wFxQcAAT3IgA0EBa0H/AXFBwABPckUEQCAEQYECOwGCASAEIAM6AIEBIAQgAToAgAEgBEGAAWpBBHIQWiAEQYABakEIckIAEBEgBEGQAWpBAEEwEBAaIAAgBEGAAWoQWyADIARqQQBBgAEgA2sQEBogACAEIAIgAxASIgBCgAEQMhogAEGAARAJIABBwAFqJABBAA8LEBQAC2EBAX8jAEFAaiICJAAgAUEBa0H/AXFBwABPBEAQFAALIAJBAToAAyACQYACOwABIAIgAToAACACQQRyEFogAkEIckIAEBEgAkEQakEAQTAQEBogACACEFsgAkFAayQAQQALDwAgACABIAIgA0EAEIcBC90BAQN/IwBB0ARrIgUkAEF/IQYCQCAAQSBqIgcQ4QJFDQAgABB1DQAgAxDjAkUNACADEHUNACAFQYABaiADEK4BDQAgBUGAA2ogBBBcIAVBgANqIABCIBAcGiAFQYADaiADQiAQHBogBUGAA2ogASACEBwaIAVBgANqIAVBwAJqECcgBUHAAmoQdCAFQQhqIAVBwAJqIAVBgAFqIAcQ6wIgBUGgAmogBUEIahB4QX8gBUGgAmogABCAASAFQaACaiAARhsgACAFQaACakEgEEVyIQYLIAVB0ARqJAAgBgsUACAAIAEgAiADIARBABCJARpBAAvGAgIBfwN+IwBBsARrIgYkACAGQeACaiAFEFwgBkGgAmogBEIgEDQaIAZB4AJqIAZBwAJqQiAQHBogBkHgAmogAiADEBwaIAZB4AJqIAZB4AFqECcgBCkAICEHIAQpACghCCAEKQAwIQkgACAEKQA4NwA4IAAgCTcAMCAAIAg3ACggAEEgaiIEIAc3AAAgBkHgAWoQdCAGIAZB4AFqEHYgACAGEHggBkHgAmogBRBcIAZB4AJqIABCwAAQHBogBkHgAmogAiADEBwaIAZB4AJqIAZBoAFqECcgBkGgAWoQdCAGIAYtAKACQfgBcToAoAIgBiAGLQC/AkE/cUHAAHI6AL8CIAQgBkGgAWogBkGgAmogBkHgAWoQ4gIgBkGgAmpBwAAQCSAGQeABakHAABAJIAEEQCABQsAANwMACyAGQbAEaiQAQQALtgECAX8DfiMAQaABayIDJAAgASACQiAQNBogASABLQAAQfgBcToAACABIAEtAB9BP3FBwAByOgAfIAMgARB2IAAgAxB4IAIpAAghBCACKQAQIQUgAikAACEGIAEgAikAGDcAGCABIAU3ABAgASAENwAIIAEgBjcAACAAKQAIIQQgACkAECEFIAApAAAhBiABIAApABg3ADggASAFNwAwIAEgBDcAKCABIAY3ACAgA0GgAWokAEEACysBAn8DQCAAIAJqIgMgAy0AACABIAJqLQAAczoAACACQQFqIgJBCEcNAAsLmAEBAX8jAEEQayIFJAAgAEEAQYABEBAhAAJ/IAIgA4RC/////w9YQQAgBEGBgICAeEkbRQRAQYCYAkEWNgIAQX8MAQsgA1BFQQAgBEH/P0sbRQRAQYCYAkEcNgIAQX8MAQsgBUEQEB9Bf0EAIAOnIARBCnZBASABIAKnIAVBEEEAQSAgAEGAAUECEDMbCyEAIAVBEGokACAAC9sBAQN/IwBBQGoiBCQAAkACQAJAIAFC/////w9YQQAgABAhIgVBgAFJG0UEQEGAmAJBHDYCAAwBCyAEQQA2AjggBEIANwMwIARCADcDKCAFELkBIgYNAQtBfyEADAELIARCADcDICAEIAY2AgggBCAGNgIQIAQgBTYCFCAEIAY2AgAgBCAFNgIMIARCADcDGCAEIAU2AgQCfyAEIAAgAxCPAQRAQYCYAkEcNgIAQX8MAQtBASAEKAIoIAGnRw0AGiAEKAIsIAJBCnZHCyEAIAYQGQsgBEFAayQAIAALnAIBBX8jAEFAaiIEJAAgBEEIakEAQTQQEBogBCAAECEiBTYCFCAEIAU2AiQgBCAFNgIEIAQgBRAgIgY2AiAgBCAFECAiBzYCECAEIAUQICIINgIAAkACQCAIRSAGRSAHRXJyDQAgBRAgIgVFDQAgBCAAIAMQjwEiAARAIAQoAiAQGSAEKAIQEBkgBCgCABAZIAUQGQwCC0EAIQAgBCgCKCAEKAIsIAQoAjQgASACIAQoAhAgBCgCFCAFIAQoAgRBAEEAIAMQMyEBIAQoAiAQGSAEKAIQEBkCQCABRQRAIAUgBCgCACAEKAIEEEVFDQELQV0hAAsgBRAZIAQoAgAQGQwBCyAGEBkgBxAZIAgQGUFqIQALIARBQGskACAAC+QDAQR/IwBBEGsiAyQAIAAoAhQhBSAAQQA2AhQgACgCBCEGIABBADYCBEFmIQQCQAJAAn8CQAJAIAJBAWsOAgEABAtBYCEEIAFBpZYCQQkQIg0DIAFBCWoMAQtBYCEEIAFBr5YCQQgQIg0CIAFBCGoLIgRBuJYCQQMQIg0AIARBA2ogA0EMahBCIgFFDQBBZiEEIAMoAgxBE0cNASABQbyWAkEDECINACABQQNqIANBDGoQQiIBRQ0AIAAgAygCDDYCLCABQcCWAkEDECINACABQQNqIANBDGoQQiIBRQ0AIAAgAygCDDYCKCABQcSWAkEDECINACABQQNqIANBDGoQQiIBRQ0AIAAgAygCDCICNgIwIAAgAjYCNCABLQAAIgJBJEcNACADIAU2AgwgACgCECAFIAFBAWogASACQSRGGyIBIAEQIUEAIANBDGogA0EIakEDEGINACAAIAMoAgw2AhQgAygCCCIBLQAAIgJBJEcNACADIAY2AgwgACgCACAGIAFBAWogASACQSRGGyIBIAEQIUEAIANBDGogA0EIakEDEGINACAAIAMoAgw2AgQgAygCCCEBIAAQVCIEDQEgAS0AACEAIANBEGokAEFgQQAgABsPC0FgIQQLIANBEGokACAEC3oBAn8gAEHA/wBzQQFqQQh2QX9zQS9xIABBwf8Ac0EBakEIdkF/c0ErcSAAQeb/A2pBCHZB/wFxIgEgAEHBAGpxcnIgAEHM/wNqQQh2IgIgAEHHAGpxIAFB/wFzcXIgAEH8AWogAEHC/wNqQQh2cSACQX9zcUH/AXFyC3sBAn8gAEHA/wFzQQFqQQh2QX9zQd8AcSAAQcH/AHNBAWpBCHZBf3NBLXEgAEHm/wNqQQh2Qf8BcSIBIABBwQBqcXJyIABBzP8DakEIdiICIABBxwBqcSABQf8Bc3FyIABB/AFqIABBwv8DakEIdnEgAkF/c3FB/wFxcgsyAQN/QQEhAQNAIAAgAmoiAyABIAMtAABqIgE6AAAgAUEIdiEBIAJBAWoiAkEERw0ACws9AQJ/IwAiBEGAA2tBQHEiAyQAIANBAEEAQRgQRhogAyABQiAQJRogAyACQiAQJRogAyAAQRgQRBogBCQACxAAIAAgASACIAMgBCAFEFcLKgEBf0F/IQYgAkIQWgR/IAAgAUEQaiABIAJCEH0gAyAEIAUQlgEFIAYLCzwBAn8jAEEgayIHJABBfyEIIAcgBSAGEGxFBEAgACABIAIgAyAEIAcQaCEIIAdBIBAJCyAHQSBqJAAgCAslACACQvD///8PWgRAEBQACyAAQRBqIAAgASACIAMgBCAFEJgBCzwBAn8jAEEgayIHJABBfyEIIAcgBSAGEGxFBEAgACABIAIgAyAEIAcQaSEIIAdBIBAJCyAHQSBqJAAgCAsOACABQSAQHyAAIAEQcgsvAQF/IwBBoANrIgQkACAEIAMQwwIgBCABIAIQHBogBCAAEMECIARBoANqJABBAAs2AQJ/IAJBA3YiAwRAQQAhAgNAIAAgAkEDdCIEaiABIARqKQMAEMYCIAJBAWoiAiADRw0ACwsLWgEBfyMAQTBrIggkACAIQQA2AgggCEIANwMAIAhBEGogBiAHEEogCCAGKQAQNwIEIAAgASACIAMgBCAFIAggCEEQahDKAiEAIAhBEGpBIBAJIAhBMGokACAAC1oBAX8jAEEwayIJJAAgCUEANgIIIAlCADcDACAJQRBqIAcgCBBKIAkgBykAEDcCBCAAIAEgAiADIAQgBSAGIAkgCUEQahDMAiAJQRBqQSAQCSAJQTBqJABBAAv/AQEBfyMAQeACayIIJAAgCEEgakLAACAGIAcQNyAIQeAAaiAIQSBqECQgCEEgakHAABAJIAhB4ABqIAQgBRAMIAhB4ABqQYCPAkIAIAV9Qg+DEAwgCEHgAGogASACEAwgCEHgAGpBgI8CQgAgAn1CD4MQDCAIQRhqIAUQESAIQeAAaiAIQRhqQggQDCAIQRhqIAIQESAIQeAAaiAIQRhqQggQDCAIQeAAaiAIECMgCEHgAGpBgAIQCSAIIAMQOyEDIAhBEBAJAkAgAEUNACADBEAgAEEAIAKnEBAaQX8hAwwBCyAAIAEgAiAGQQEgBxAwQQAhAwsgCEHgAmokACADC9QBAQF/IwBB4AJrIggkACAIQSBqIAYgBxCjASAIQeAAaiAIQSBqECQgCEEgakHAABAJIAhB4ABqIAQgBRAMIAhBGGogBRARIAhB4ABqIAhBGGpCCBAMIAhB4ABqIAEgAhAMIAhBGGogAhARIAhB4ABqIAhBGGpCCBAMIAhB4ABqIAgQIyAIQeAAakGAAhAJIAggAxA7IQMgCEEQEAkCQCAARQ0AIAMEQCAAQQAgAqcQEBpBfyEDDAELIAAgASACIAYgBxCiAUEAIQMLIAhB4AJqJAAgAwvcAQEBfyMAQdACayIJJAAgCUEQakLAACAHIAgQNyAJQdAAaiAJQRBqECQgCUEQakHAABAJIAlB0ABqIAUgBhAMIAlB0ABqQYCPAkIAIAZ9Qg+DEAwgACADIAQgB0EBIAgQMCAJQdAAaiAAIAQQDCAJQdAAakGAjwJCACAEfUIPgxAMIAlBCGogBhARIAlB0ABqIAlBCGpCCBAMIAlBCGogBBARIAlB0ABqIAlBCGpCCBAMIAlB0ABqIAEQIyAJQdAAakGAAhAJIAIEQCACQhA3AwALIAlB0AJqJABBAAuxAQEBfyMAQdACayIJJAAgCUEQaiAHIAgQowEgCUHQAGogCUEQahAkIAlBEGpBwAAQCSAJQdAAaiAFIAYQDCAJQQhqIAYQESAJQdAAaiAJQQhqQggQDCAAIAMgBCAHIAgQogEgCUHQAGogACAEEAwgCUEIaiAEEBEgCUHQAGogCUEIakIIEAwgCUHQAGogARAjIAlB0ABqQYACEAkgAgRAIAJCEDcDAAsgCUHQAmokAEEACygAIAJCgICAgBBaBEAQFAALIAAgASACIANCASAEQfCXAigCABEVABoLFgAgAELAACABIAJB6JcCKAIAEREAGgsyACAAIAIEfyACKAAABUEACzYCMCAAIAEoAAA2AjQgACABKAAENgI4IAAgASgACDYCPAs9ACAAAn8gAgRAIAAgAigAADYCMCACKAAEDAELIABBADYCMEEACzYCNCAAIAEoAAA2AjggACABKAAENgI8CxkAIAAgASACIANCASAEQeSXAigCABEVABoLKAEBfyMAQRBrIgAkACAAQQA6AA9BpgggAEEPakEAEAEaIABBEGokAAtqAQN/IwBBEGsiAyQAIANBADoAD0F/IQUgACABIAJB2JcCKAIAEQMARQRAA0AgAyAAIARqLQAAIAMtAA9yOgAPIARBAWoiBEEgRw0AC0EAIAMtAA9BAWtBCHZBAXFrIQULIANBEGokACAFCxMAIAAgAUHAB2xBoBtqIAIQ5gILEAAgAEIANwIAIABCADcCCAsdACAAEDggAEEoahAdIABB0ABqEB0gAEH4AGoQOAuAAgEIfwNAIAAgAmogASACQQN2ai0AACACQQdxdkEBcToAACACQQFqIgJBgAJHDQALA0AgBCIBQQFqIQQCQCAAIAFqIgYtAABFDQAgBCECQQEhBSABQf4BSw0AA0ACQCAAIAJqIgMsAAAiB0UNACAHIAV0IgcgBiwAACIIaiIJQQ9MBEAgBiAJOgAAIANBADoAAAwBCyAIIAdrIgNBcUgNAiAGIAM6AAADQCAAIAJqIgMtAABFBEAgA0EBOgAADAILIANBADoAACACQf8BSSEDIAJBAWohAiADDQALCyAFQQVLDQEgBUEBaiIFIAFqIgJBgAJJDQALCyAEQYACRw0ACwuVAQEEfyMAQTBrIgUkACAAIAFBKGoiAyABEBMgAEEoaiIEIAMgARAWIABB0ABqIgMgACACQShqEAsgBCAEIAIQCyAAQfgAaiIGIAJB+ABqIAFB+ABqEAsgACABQdAAaiACQdAA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CSACQYAIaiQAC/ADAQJ/IwAiAyEEIANBwANrQUBxIgMkACAARSABRXJFBEAgA0FAa0EAQQBBwAAQPhogA0E8aiABKAIwEAogA0FAayADQTxqQgQQGBogA0E8aiABKAIEEAogA0FAayADQTxqQgQQGBogA0E8aiABKAIsEAogA0FAayADQTxqQgQQGBogA0E8aiABKAIoEAogA0FAayADQTxqQgQQGBogA0E8akETEAogA0FAayADQTxqQgQQGBogA0E8aiACEAogA0FAayADQTxqQgQQGBogA0E8aiABKAIMEAogA0FAayADQTxqQgQQGBoCQCABKAIIIgJFDQAgA0FAayACIAE1AgwQGBogAS0AOEEBcUUNACABKAIIIAEoAgwQCSABQQA2AgwLIANBPGogASgCFBAKIANBQGsgA0E8akIEEBgaIAEoAhAiAgRAIANBQGsgAiABNQIUEBgaCyADQTxqIAEoAhwQCiADQUBrIANBPGpCBBAYGgJAIAEoAhgiAkUNACADQUBrIAIgATUCHBAYGiABLQA4QQJxRQ0AIAEoAhggASgCHBAJIAFBADYCHAsgA0E8aiABKAIkEAogA0FAayADQTxqQgQQGBogASgCICICBEAgA0FAayACIAE1AiQQGBoLIANBQGsgAEHAABA9GgsgBCQAC68BAQN/IwBBEGsiAiQAQWohAwJAIABFIAFFcg0AIAFBCnQiBCABbkGACEcNACAAQQwQICIBNgIAIAFFDQAgAUIANwIAQYCYAiACQQxqIAQQsgEiATYCAAJAAkAgAQRAIAJBADYCDAwBCyACKAIMIgENAQsgACgCABAZIABBADYCAAwBCyAAKAIAIAE2AgAgACgCACABNgIEIAAoAgAgBDYCCEEAIQMLIAJBEGokACADC4cBAQJ/IwBB0ABrIgMkAEFnIQICQCAARSABRXINACAAIAAoAhRBA3QQICICNgIEIAJFBEBBaiECDAELIAAgACgCEBC8ASICBEAgACABKAI4EIMBDAELIAMgASAAKAIkELsBIANBQGtBCBAJIAMgABC6ASADQcgAEAlBACECCyADQdAAaiQAIAILkwEBBH8jAEEgayICJAACQCAARQ0AIAAoAhxFDQAgAiABNgIQQQEhBANAIAIgAzoAGEEAIQFBACEFIAQEQANAIAJBADYCHCACIAIpAxg3AwggAiABNgIUIAIgAikDEDcDACAAIAIQxQEgAUEBaiIBIAAoAhwiBUkNAAsLIAUhBCADQQFqIgNBBEcNAAsLIAJBIGokAAs5AAJAIAFFDQAgACgCACIBBEAgASgCBCAAKAIQQQp0EAkLIAAoAgQiAUUNACABIAAoAhRBA3QQCQsLKAECfwNAIAAgAkEDdCIDaiABIANqKQMAEBEgAkEBaiICQYABRw0ACwu8AQEDfyMAQYAQayICJAAgAEUgAUVyRQRAIAJBgAhqIAEoAgAoAgQgASgCGEEKdGpBgAhrECogASgCHEECTwRAQQEhAwNAIAJBgAhqIAEoAgAoAgQgASgCGCIEIAMgBGxqQQp0akGACGsQLiADQQFqIgMgASgCHEkNAAsLIAIgAkGACGoQwAEgACgCACAAKAIEIAJBgAgQViACQYAIakGACBAJIAJBgAgQCSABIAAoAjgQgwELIAJBgBBqJAALjQ0CEX8QfiMAQYAQayIDJAAgA0GACGogARAqIANBgAhqIAAQLiADIANBgAhqECpBACEBA0AgA0GACGogBEEHdCIAQcAAcmoiBSkDACADQYAIaiAAQeAAcmoiBikDACADQYAIaiAAaiIHKQMAIANBgAhqIABBIHJqIggpAwAiGBAHIhSFQSAQBiIVEAciFiAYhUEYEAYhGCAYIBYgFSAUIBgQByIXhUEQEAYiGhAHIiGFQT8QBiEYIANBgAhqIABByAByaiIJKQMAIANBgAhqIABB6AByaiIKKQMAIANBgAhqIABBCHJqIgspAwAgA0GACGogAEEocmoiDCkDACIUEAciFYVBIBAGIhYQByIbIBSFQRgQBiEUIBQgGyAWIBUgFBAHIhuFQRAQBiIiEAciI4VBPxAGIRQgA0GACGogAEHQAHJqIg0pAwAgA0GACGogAEHwAHJqIg4pAwAgA0GACGogAEEQcmoiDykDACADQYAIaiAAQTByaiIQKQMAIhUQByIWhUEgEAYiHBAHIh0gFYVBGBAGIRUgFSAdIBwgFiAVEAciHYVBEBAGIhwQByIehUE/EAYhFSADQYAIaiAAQdgAcmoiESkDACADQYAIaiAAQfgAcmoiEikDACADQYAIaiAAQRhyaiITKQMAIANBgAhqIABBOHJqIgApAwAiFhAHIh+FQSAQBiIZEAciICAWhUEYEAYhFiAWICAgGSAfIBYQByIfhUEQEAYiGRAHIiCFQT8QBiEWIAcgFyAUEAciFyAUIB4gFyAZhUEgEAYiFxAHIh6FQRgQBiIUEAciGTcDACASIBcgGYVBEBAGIhc3AwAgDSAeIBcQByIXNwMAIAwgFCAXhUE/EAY3AwAgCyAbIBUQByIUIBUgICAUIBqFQSAQBiIUEAciF4VBGBAGIhUQByIaNwMAIAYgFCAahUEQEAYiFDcDACARIBcgFBAHIhQ3AwAgECAUIBWFQT8QBjcDACAPIB0gFhAHIhQgFiAhIBQgIoVBIBAGIhQQByIVhUEYEAYiFhAHIhc3AwAgCiAUIBeFQRAQBiIUNwMAIAUgFSAUEAciFDcDACAAIBQgFoVBPxAGNwMAIBMgHyAYEAciFCAYICMgFCAchUEgEAYiFBAHIhWFQRgQBiIYEAciFjcDACAOIBQgFoVBEBAGIhQ3AwAgCSAVIBQQByIUNwMAIAggFCAYhUE/EAY3AwAgBEEBaiIEQQhHDQALA0AgAUEEdCIEIANBgAhqaiIAIgVBgARqKQMAIAApA4AGIAApAwAgACkDgAIiGBAHIhSFQSAQBiIVEAciFiAYhUEYEAYhGCAYIBYgFSAUIBgQByIXhUEQEAYiGhAHIiGFQT8QBiEYIAApA4gEIAApA4gGIANBgAhqIARBCHJqIgQpAwAgACkDiAIiFBAHIhWFQSAQBiIWEAciGyAUhUEYEAYhFCAUIBsgFiAVIBQQByIbhUEQEAYiIhAHIiOFQT8QBiEUIAApA4AFIAApA4AHIAApA4ABIAApA4ADIhUQByIWhUEgEAYiHBAHIh0gFYVBGBAGIRUgFSAdIBwgFiAVEAciHYVBEBAGIhwQByIehUE/EAYhFSAAKQOIBSAAKQOIByAAKQOIASAAKQOIAyIWEAciH4VBIBAGIhkQByIgIBaFQRgQBiEWIBYgICAZIB8gFhAHIh+FQRAQBiIZEAciIIVBPxAGIRYgACAXIBQQByIXIBQgHiAXIBmFQSAQBiIXEAciHoVBGBAGIhQQByIZNwMAIAAgFyAZhUEQEAYiFzcDiAcgACAeIBcQByIXNwOABSAAIBQgF4VBPxAGNwOIAiAEIBsgFRAHIhQgFSAgIBQgGoVBIBAGIhQQByIXhUEYEAYiFRAHIho3AwAgACAUIBqFQRAQBiIUNwOABiAAIBcgFBAHIhQ3A4gFIAAgFCAVhUE/EAY3A4ADIAAgHSAWEAciFCAWICEgFCAihUEgEAYiFBAHIhWFQRgQBiIWEAciFzcDgAEgACAUIBeFQRAQBiIUNwOIBiAFIBUgFBAHIhQ3A4AEIAAgFCAWhUE/EAY3A4gDIAAgHyAYEAciFCAYICMgFCAchUEgEAYiFBAHIhWFQRgQBiIYEAciFjcDiAEgACAUIBaFQRAQBiIUNwOAByAAIBUgFBAHIhQ3A4gEIAAgFCAYhUE/EAY3A4ACIAFBAWoiAUEIRw0ACyACIAMQKiACIANBgAhqEC4gA0GAEGokAAvMAQICfwF+An4gASgCAEUEQCABLQAIIgRFBEAgASgCDEEBayEDQgAMAgsgACgCFCAEbCEEIAEoAgwhASADBEAgASAEakEBayEDQgAMAgsgBCABRWshA0IADAELIAAoAhQhBCAAKAIYIQUCfyADBEAgASgCDCAFIARBf3NqagwBCyAFIARrIAEoAgxFawshA0IAIAEtAAgiAUEDRg0AGiAEIAFBAWpsrQshBiAGIANBAWutfCADrSACrSIGIAZ+QiCIfkIgiH0gADUCGIKnC/MBAQJ/IwBBgCBrIgMkACADQYAYahA8IANBgBBqEDwCQCAARSABRXINACADIAE1AgA3A4AQIAMgATUCBDcDiBAgAyABMQAINwOQECADIAA1AhA3A5gQIAMgADUCCDcDoBAgAyAANQIkNwOoECAAKAIURQ0AQQAhAQNAIAFB/wBxIgRFBEAgAyADKQOwEEIBfDcDsBAgAxA8IANBgAhqEDwgA0GAGGogA0GAEGogAxBVIANBgBhqIAMgA0GACGoQVQsgAiABQQN0aiADQYAIaiAEQQN0aikDADcDACABQQFqIgEgACgCFEkNAAsLIANBgCBqJAALjgMCC38CfgJAIABFDQACfwJAIAAoAiRBAkcNACABKAIAIgJFBEAgAS0ACEECSQ0BCyAAKAIEIQlBAQwBCyAAIAEgACgCBCIJEMQBIAEoAgAhAkEACyEKIAIgAS0ACCIDckVBAXQiBiAAKAIUIgJPDQBBfyAAKAIYIgRBAWsgBiAEIAEoAgRsaiACIANsaiICIARwGyACaiEDA0AgAkEBayADIAIgBHBBAUYbIQMCfyAKRQRAIAAoAgAhByAJIAZBA3RqDAELIAAoAgAiBygCBCADQQp0agsiBSgCBCEIIAUoAgAhCyAAKAIcIQwgASAGNgIMIAcoAgQiBSAEIAggDHCtIg0gDSABNQIEIg0gAS0ACBsgASgCACIIGyIOp2xBCnRqIAAgASALIA0gDlEQwwFBCnRqIQQgBSADQQp0aiEHIAUgAkEKdGohBQJAIAgEQCAHIAQgBRBVDAELIAcgBCAFEMIBCyAGQQFqIgYgACgCFE8NASACQQFqIQIgA0EBaiEDIAAoAhghBAwACwALC1kBAn8jACIFIQYgBUGAA2tBQHEiBSQAIAFFIABFIAJBAWtB/wFxQcAAT3JyRQRAIAUgAiABIAMgBBDIASAFQQBCABAyGiAFIAAgAhBYGiAGJABBAA8LEBQAC4ABAQJ/IwAiBiEHIAZBgANrQUBxIgYkACAARSADQQFrQf8BcUHAAE9yQQAgAUUgBFAbciAFQcEATyACRUEAIAUbcnJFBEACQCAFBEAgBiADIAIgBRCEARoMAQsgBiADEIUBGgsgBiABIAQQMhogBiAAIAMQWBogByQAQQAPCxAUAAvqAQEBfyMAQcABayIFJAAgAkUgAUEBa0H/AXFBwABPckUEQCAFQYECOwGCASAFQSA6AIEBIAUgAToAgAEgBUGAAWpBBHIQWiAFQYABakEIckIAEBEgBUIANwOYASAFQgA3A5ABAkAgAwRAIAVBgAFqIAMQ4AEMAQsgBUIANwOoASAFQgA3A6ABCwJAIAQEQCAFQYABaiAEENUBDAELIAVCADcDuAEgBUIANwOwAQsgACAFQYABahBbIAVBIGpBAEHgABAQGiAAIAUgAkEgEBIiAEKAARAyGiAAQYABEAkgAEHAAWokAA8LEBQACxEAIAAgAa0gAq1CIIaEEL0CCxIAIAAgASACrSADrUIghoQQHAsVACAAIAEgAq0gA61CIIaEIAQQhgELFwAgACABIAIgA60gBK1CIIaEIAUQiAELFwAgACABIAIgA60gBK1CIIaEIAUQhAILFwAgACABIAIgA60gBK1CIIaEIAUQhQILFQAgACABIAKtIAOtQiCGhCAEEIoCCyUAIAAgASACIAMgBCAFrSAGrUIghoQgByAIrSAJrUIghoQQjgILJQAgACABIAIgAyAErSAFrUIghoQgBiAHrSAIrUIghoQgCRCPAgsXACAAIAEgAq0gA61CIIaEIAQgBRC6AgsYACAAIAEgAiADrSAErUIghoQgBSAGEGoLFwAgACABIAKtIAOtQiCGhCAEIAUQuwILFgAgACABKQAANwAwIAAgASkACDcAOAsYACAAIAEgAiADrSAErUIghoQgBSAGEGsLEwAgACABrSACrUIghoQgAxCSAgsTACAAIAEgAq0gA61CIIaEEJMCCyEAIAAgASACrSADrUIghoQgBK0gBa1CIIaEIAYgBxCUAgsfACAAIAEgAq0gA61CIIaEIAStIAWtQiCGhCAGEIwBCy0AIAAgAa0gAq1CIIaEIAMgBK0gBa1CIIaEIAYgB60gCK1CIIaEIAkgChCVAgsXACAAIAEgAq0gA61CIIaEIAQgBRCzAgsSACAAIAEgAq0gA61CIIaEEDQLEgAgACABIAKtIAOtQiCGhBAlCxkAIAAgASACIAOtIAStQiCGhCAFIAYQlAELFgAgACABKQAANwAgIAAgASkACDcAKAsXACAAIAEgAq0gA61CIIaEIAQgBRC1AgsVACAAIAEgAq0gA61CIIaEIAQQtgILGQAgACABIAKtIAOtQiCGhCAEIAUgBhCVAQsXACAAIAEgAq0gA61CIIaEIAQgBRC4AgsbACAAIAEgAiADrSAErUIghoQgBSAGIAcQlgELGAAgACABIAIgA60gBK1CIIaEIAUgBhBoCxkAIAAgASACrSADrUIghoQgBCAFIAYQlwELFwAgACABIAKtIAOtQiCGhCAEIAUQuQILGwAgACABIAIgA60gBK1CIIaEIAUgBiAHEJgBCxgAIAAgASACIAOtIAStQiCGhCAFIAYQaQsVACAAIAEgAq0gA61CIIaEIAQQwAILFQAgACABIAKtIAOtQiCGhCAEEJoBCyUAIAAgASADIAStIAWtQiCGhCAGIAetIAitQiCGhCAJIAoQyQILJQAgACACIAOtIAStQiCGhCAFIAYgB60gCK1CIIaEIAkgChCcAQslACAAIAEgAiADrSAErUIghoQgBSAGrSAHrUIghoQgCSAKEMsCCycAIAAgASACIAMgBK0gBa1CIIaEIAYgB60gCK1CIIaEIAogCxCdAQslACAAIAEgAyAErSAFrUIghoQgBiAHrSAIrUIghoQgCSAKEM8CCyUAIAAgAiADrSAErUIghoQgBSAGIAetIAitQiCGhCAJIAoQngELJQAgACABIAMgBK0gBa1CIIaEIAYgB60gCK1CIIaEIAkgChDQAgslACAAIAIgA60gBK1CIIaEIAUgBiAHrSAIrUIghoQgCSAKEJ8BCyUAIAAgASACIAOtIAStQiCGhCAFIAatIAetQiCGhCAJIAoQ0QILJwAgACABIAIgAyAErSAFrUIghoQgBiAHrSAIrUIghoQgCiALEKABCyUAIAAgASACIAOtIAStQiCGhCAFIAatIAetQiCGhCAJIAoQ0gILJwAgACABIAIgAyAErSAFrUIghoQgBiAHrSAIrUIghoQgCiALEKEBCwQAQQoLBgBBspcCCwsAIAAgASACEIICCw0AIAAgASACIAMQgwILCAAgABA1QQALCQAgACABEIgCCwsAIAAgASACEIoBCwUAQb9/CwUAQdABCywBAX8jAEFAaiIDJAAgACADECcgASADQsAAIAJBARCHASEAIANBQGskACAACy4BAX8jAEFAaiIEJAAgACAEECcgASACIARCwAAgA0EBEIkBIQAgBEFAayQAIAALewEBfwJAAkACQCADQsAAVA0AIANCQHwiA0K/////D1YNACACIAJBQGsiBSADIAQQhgFFDQEgAEUNACAAQQAgA6cQEBoLQX8hAiABRQ0BIAFCADcDAEF/DwsgAQRAIAEgAzcDAAtBACECIABFDQAgACAFIAOnEEcaCyACC3MBAX8jAEEQayIFJAAgACAFQQhqIABBQGsgAiADpyICEEcgAyAEEIgBGgJAIAUpAwhCwABSBEAgAQRAIAFCADcDAAsgAEEAIAJBQGsQEBpBfyEADAELQQAhACABRQ0AIAEgA0JAfTcDAAsgBUEQaiQAIAALbQEBfyMAQUBqIgIkACACIAFCIBA0GiACIAItAABB+AFxOgAAIAIgAi0AH0E/cUHAAHI6AB8gACACKQMQNwAQIAAgAikDCDcACCAAIAIpAwA3AAAgACACKQMYNwAYIAJBwAAQCSACQUBrJABBAAuGAQECfyMAQYACayICJABBfyEDAkAgARB1DQAgAkHgAGogARCuAQ0AIAJB4ABqEOUCRQ0AIAIQHSACIAIgAkGIAWoiARAWIAJBMGoQHSACQTBqIAJBMGogARATIAIgAhA6IAJBMGogAkEwaiACEAsgACACQTBqEC1BACEDCyACQYACaiQAIAMLLAEBfyMAQSBrIgIkACACQSAQHyAAIAEg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ASACQhB9IAMgBBBqBSAFCwslACACQvD///8PWgRAEBQACyAAQRBqIAAgASACIAMgBBBrGkEACwsAIAAgASACEL8CCy8AIAFCgICAgBBaBEBBACIAQYQOaiAAQZgOakHFASAAQbIOahAAAAsgACABpxAfCzMBAn8jAEEgayIDJABBfyEEIAMgAiABEKgBRQRAIABB4JUCIAMQbSEECyADQSBqJAAgBAtWAQF/IwBBQGoiAyQAIAMgAkIgEDQaIAEgAykDGDcAGCABIAMpAxA3ABAgASADKQMINwAIIAEgAykDADcAACADQcAAEAkgACABEHIhACADQUBrJAAgAAtAAQF/IwBBIGsiBCQAIAQgASACIAMQmgEaIAAgBBCAASEBIAQgAEEgEEUhAyAEQSBqJAAgA0F/IAEgACAERhtyC0MBAX8jAEFAaiICJAAgACACEMICIAEgAikDGDcAGCABIAIpAxA3ABAgASACKQMINwAIIAEgAikDADcAACACQUBrJAALNwEBfyMAQUBqIgIkACAAIAIQJyAAQdABaiIAIAJCwAAQHBogACABECcgAkHAABAJIAJBQGskAAvhAQEDfyMAQcABayICJAAgABA1IAJBQGtBNkGAARAQGiACIAEtAABBNnM6AEBBASEDA0AgAkFAayADaiIEIAQtAAAgASADai0AAHM6AAAgA0EBaiIDQSBHDQALIAAgAkFAa0KAARAcGiAAQdABaiIAEDUgAkFAa0HcAEGAARAQGiACIAEtAABB3ABzOgBAQQEhAwNAIAJBQGsgA2oiBCAELQAAIAEgA2otAABzOgAAIANBAWoiA0EgRw0ACyAAIAJBQGtCgAEQHBogAkFAa0GAARAJIAJBwAAQCSACQcABaiQAC2YBAX4gACkAACIBQjiGIAFCKIZCgICAgICAwP8Ag4QgAUIYhkKAgICAgOA/gyABQgiGQoCAgIDwH4OEhCABQgiIQoCAgPgPgyABQhiIQoCA/AeDhCABQiiIQoD+A4MgAUI4iISEhAsmAQJ/AkBBpJwCKAIAIgBFDQAgACgCFCIARQ0AIAARAQAhAQsgAQtkACAAIAFCKIZCgICAgICAwP8AgyABQjiGhCABQhiGQoCAgICA4D+DIAFCCIZCgICAgPAfg4SEIAFCCIhCgICA+A+DIAFCGIhCgID8B4OEIAFCKIhCgP4DgyABQjiIhISENwAAC4YBAQJ/AkAgACgCSEEDdkH/AHEiAkHvAE0EQCAAIAJqQdAAakHglAJB8AAgAmsQEhoMAQsgAEHQAGoiAyACakHglAJBgAEgAmsQEhogACADIAEgAUGABWoQSCADQQBB8AAQEBoLIABBwAFqIABBQGtBEBCbASAAIABB0ABqIAEgAUGABWoQSAsoAQJ/A0AgACACQQN0IgNqIAEgA2oQxAI3AwAgAkEBaiICQRBHDQALC0UBAX9BfyEIIANCEFoEQCAAIAIgA0IQfSACIAOnakEQayAEIAUgBiAHEJwBIQgLIAEEQCABQgAgA0IQfSAIGzcDAAsgCAv/AQEBfyMAQeACayIIJAAgCEEgakLAACAGIAcQcCAIQeAAaiAIQSBqECQgCEEgakHAABAJIAhB4ABqIAQgBRAMIAhB4ABqQZCPAiIEQgAgBX1CD4MQDCAIQeAAaiABIAIQDCAIQeAAaiAEQgAgAn1CD4MQDCAIQRhqIAUQESAIQeAAaiAIQRhqQggQDCAIQRhqIAIQESAIQeAAaiAIQRhqQggQDCAIQeAAaiAIECMgCEHgAGpBgAIQCSAIIAMQOyEDIAhBEBAJAkAgAEUNACADBEAgAEEAIAKnEBAaQX8hAwwBCyAAIAEgAiAGQQEgBxBvQQAhAwsgCEHgAmokACADCz0AIANC8P///w9UBEAgACAAIAOnakEAIAIgAyAEIAUgBiAHEJ0BGiABBEAgASADQhB8NwMAC0EADwsQFAAL2gEBAX8jAEHQAmsiCSQAIAlBEGpCwAAgByAIEHAgCUHQAGogCUEQahAkIAlBEGpBwAAQCSAJQdAAaiAFIAYQDCAJQdAAakGQjwIiBUIAIAZ9Qg+DEAwgACADIAQgB0EBIAgQbyAJQdAAaiAAIAQQDCAJQdAAaiAFQgAgBH1CD4MQDCAJQQhqIAYQESAJQdAAaiAJQQhqQggQDCAJQQhqIAQQESAJQdAAaiAJQQhqQggQDCAJQdAAaiABECMgCUHQAGpBgAIQCSACBEAgAkIQNwMACyAJQdACaiQACw4AIAAgAa1B+A0gAhA3CwQAQQwLRQEBf0F/IQggA0IQWgRAIAAgAiADQhB9IAIgA6dqQRBrIAQgBSAGIAcQngEhCAsgAQRAIAFCACADQhB9IAgbNwMACyAIC0UBAX9BfyEIIANCEFoEQCAAIAIgA0IQfSACIAOnakEQayAEIAUgBiAHEJ8BIQgLIAEEQCABQgAgA0IQfSAIGzcDAAsgCAs9ACADQvD///8PVARAIAAgACADp2pBACACIAMgBCAFIAYgBxCgARogAQRAIAEgA0IQfDcDAAtBAA8LEBQACz0AIANC8P///w9UBEAgACAAIAOnakEAIAIgAyAEIAUgBiAHEKEBGiABBEAgASADQhB8NwMAC0EADwsQFAALVwEBfyMAQdAAayIGJAAgAlBFBEAgBkEMaiAEEAogBkEQaiAFEEwgBkEQaiADIAZBDGoQpAEgBkEQaiABIAAgAhBLIAZBEGpBwAAQCQsgBkHQAGokAEEAC2UBAX8jAEHQAGsiBiQAIAJQRQRAIAZBCGogBKcQCiAGQQxqIARCIIinEAogBkEQaiAFEEwgBkEQaiADIAZBCGoQpQEgBkEQaiABIAAgAhBLIAZBEGpBwAAQCQsgBkHQAGokAEEAC0YBAX8jAEFAaiIEJAAgAVBFBEAgBCADEEwgBCACQQAQpAEgBCAAQQAgAacQECIAIAAgARBLIARBwAAQCQsgBEFAayQAQQALKgECfyAAQQJPBH9BACAAayAAcCEBA0AQcyICIAFJDQALIAIgAHAFIAELC0YBAX8jAEFAaiIEJAAgAVBFBEAgBCADEEwgBCACQQAQpQEgBCAAQQAgAacQECIAIAAgARBLIARBwAAQCQsgBEFAayQAQQALNQBBwJwCKAIABH9BAQVB+JsCQQA2AgAQ6gJB9JsCQQE2AgAQpwEQpwJBwJwCQQE2AgBBAAsL7QIBAn8jAEHwAGsiByQAIAJQRQRAIAcgBSkAGDcDGCAHIAUpABA3AxAgByAFKQAANwMAQQghBiAHIAUpAAg3AwggByADKQAANwNgA0AgB0HgAGogBmogBDwAACAEQgiIIQQgBkEBaiIGQRBHDQALIAJCP1YEQANAQQAhBiAHQSBqIAdB4ABqIAcQTQNAIAAgBmogB0EgaiAGai0AACABIAZqLQAAczoAAEEBIQUgBkEBaiIGQcAARw0AC0EIIQYDQCAHQeAAaiAGaiIDIAUgAy0AAGoiAzoAACADQQh2IQUgBkEBaiIGQRBHDQALIAFBQGshASAAQUBrIQAgAkJAfCICQj9WDQALCyACUEUEQEEAIQYgB0EgaiAHQeAAaiAHEE0gAqchAwNAIAAgBmogB0EgaiAGai0AACABIAZqLQAAczoAACAGQQFqIgYgA0cNAAsLIAdBIGpBwAAQCSAHQSAQCQsgB0HwAGokAEEAC5ECAgJ/AX4jAEHwAGsiBCQAIAFQRQRAIAQgAykAGDcDGCAEIAMpABA3AxAgBCADKQAANwMAIAQgAykACDcDCCACKQAAIQYgBEIANwNoIAQgBjcDYAJAIAFCwABaBEADQCAAIARB4ABqIAQQTUEIIQNBASECA0AgBEHgAGogA2oiBSACIAUtAABqIgI6AAAgAkEIdiECIANBAWoiA0EQRw0ACyAAQUBrIQAgAUJAfCIBQj9WDQALIAFQDQELQQAhAyAEQSBqIARB4ABqIAQQTSABpyECA0AgACADaiAEQSBqIANqLQAAOgAAIANBAWoiAyACRw0ACwsgBEEgakHAABAJIARBIBAJCyAEQfAAaiQAQQALmgYBIX8gAigAACESIAIoAAQhEyACKAAIIRQgAigADCEVIAIoABAhFiACKAAUIRcgAigAGCEYIAIoABwhGUHl8MGLBiECIBIhByATIQggFCERIBUhCUHuyIGZAyEOIAEoAAAiGyEKIAEoAAQiHCELIAEoAAgiHSEMIAEoAAwiHiEPQbLaiMsHIQEgFiEEQfTKgdkGIQUgGSENIBghBiAXIQMDQCACIANqQQcQCCAJcyIJIAJqQQkQCCAMcyIMIAlqQQ0QCCADcyIfIAxqQRIQCCEgIAcgDmpBBxAIIA9zIgMgDmpBCRAIIAZzIhAgA2pBDRAIIAdzIgcgEGpBEhAIIQ8gASAKakEHEAggDXMiDSABakEJEAggCHMiCCANakENEAggCnMiCiAIakESEAghISAEIAVqQQcQCCARcyIGIAVqQQkQCCALcyILIAZqQQ0QCCAEcyIiIAtqQRIQCCEjIAYgAiAgcyICakEHEAggB3MiByACakEJEAggCHMiCCAHakENEAggBnMiESAIakESEAggAnMhAiAOIA9zIgQgCWpBBxAIIApzIgogBGpBCRAIIAtzIgsgCmpBDRAIIAlzIgkgC2pBEhAIIARzIQ4gASAhcyIBIANqQQcQCCAicyIEIAFqQQkQCCAMcyIMIARqQQ0QCCADcyIPIAxqQRIQCCABcyEBIAUgI3MiBSANakEHEAggH3MiAyAFakEJEAggEHMiBiADakENEAggDXMiDSAGakESEAggBXMhBSAaQRJJIRAgGkECaiEaIBANAAsgACACQeXwwYsGahAKIABBBGogByASahAKIABBCGogCCATahAKIABBDGogESAUahAKIABBEGogCSAVahAKIABBFGogDkHuyIGZA2oQCiAAQRhqIAogG2oQCiAAQRxqIAsgHGoQCiAAQSBqIAwgHWoQCiAAQSRqIA8gHmoQCiAAQShqIAFBstqIywdqEAogAEEsaiAEIBZqEAogAEEwaiADIBdqEAogAEE0aiAGIBhqEAogAEE4aiANIBlqEAogAEE8aiAFQfTKgdkGahAKCzoBAX8jAEHgAGsiAyQAIANBMGogAiABEBMgAyACIAEQFiADIAMQOiAAIANBMGogAxALIANB4ABqJAALdgECfyMAQdABayICJAADQCAAIANqIAEgA2otAAA6AAAgA0EBaiIDQSBHDQALIAAgAC0AAEH4AXE6AAAgACAALQAfQT9xQcAAcjoAHyACQTBqIAAQdiACIAJB2ABqIAJBgAFqENwCIAAgAhAtIAJB0AFqJABBAAu9AwEMfiABNAIEIQIgATQCCCEDIAE0AgwhBCABNAIQIQUgATQCFCEGIAE0AhghByABNAIAIQsgACABNAIkQsK2B34iCCAIQoCAgAh8IghCgICA8A+DfSABNAIgQsK2B34gATQCHELCtgd+IglCgICACHwiCkIZh3wiDEKAgIAQfCINQhqIfD4CJCAAIAwgDUKAgIDgD4N9PgIgIAAgCSAKQoCAgPAPg30gB0LCtgd+IAZCwrYHfiIGQoCAgAh8IgdCGYd8IglCgICAEHwiCkIaiHw+AhwgACAJIApCgICA4A+DfT4CGCAAIAYgB0KAgIDwD4N9IAVCwrYHfiAEQsK2B34iBEKAgIAIfCIFQhmHfCIGQoCAgBB8IgdCGoh8PgIUIAAgBiAHQoCAgOAPg30+AhAgACAEIAVCgICA8A+DfSADQsK2B34gAkLCtgd+IgJCgICACHwiA0IZh3wiBEKAgIAQfCIFQhqIfD4CDCAAIAQgBUKAgIDgD4N9PgIIIAAgAiADQoCAgPAPg30gCEIZh0ITfiALQsK2B358IgJCgICAEHwiA0IaiHw+AgQgACACIANCgICA4A+DfT4CAAvcAQEFfyMAQRBrIgNBADYACyADQQA2AggDQCAAIAJqLQAAIQRBACEBA0AgA0EIaiABaiIFIAUtAAAgAUEFdEGgjQJqIAJqLQAAIARzcjoAACABQQFqIgFBB0cNAAsgAkEBaiICQR9HDQALIAAtAB9B/wBxIQJBACEAQQAhAQNAIANBCGogAWoiBCAELQAAIAIgAUEFdEG/jQJqLQAAc3I6AAAgAUEBaiIBQQdHDQALQQAhAQNAIANBCGogAGotAABBAWsgAXIhASAAQQFqIgBBB0cNAAsgAUEIdkEBcQvcBAEDfyMAQdACayIDJABBfyEEIAIQ3wJFBEBBACEEA0AgACAEaiABIARqLQAAOgAAIARBAWoiBEEgRw0ACyAAIAAtAABB+AFxOgAAIAAgAC0AH0E/cUHAAHI6AB8gA0GgAmogAhB7IANB8AFqEB0gA0HAAWoQOCADQZABaiADQaACahAsIANB4ABqEB1B/gEhAkEAIQQDQCADQfABaiADQZABaiAAIAIiBUEDdmotAAAgAkEHcXZBAXEiASAEcyIEEE4gA0HAAWogA0HgAGogBBBOIAJBAWshAiADQTBqIANBkAFqIANB4ABqEBYgAyADQfABaiADQcABahAWIANB8AFqIANB8AFqIANBwAFqEBMgA0HAAWogA0GQAWogA0HgAGoQEyADQeAAaiADQTBqIANB8AFqEAsgA0HAAWogA0HAAWogAxALIANBMGogAxAOIAMgA0HwAWoQDiADQZABaiADQeAAaiADQcABahATIANBwAFqIANB4ABqIANBwAFqEBYgA0HwAWogAyADQTBqEAsgAyADIANBMGoQFiADQcABaiADQcABahAOIANB4ABqIAMQ3gIgA0GQAWogA0GQAWoQDiADQTBqIANBMGogA0HgAGoQEyADQeAAaiADQaACaiADQcABahALIANBwAFqIAMgA0EwahALIAEhBCAFDQALIANB8AFqIANBkAFqIAEQTiADQcABaiADQeAAaiABEE4gA0HAAWogA0HAAWoQOiADQfABaiADQfABaiADQcABahALIAAgA0HwAWoQLUEAIQQLIANB0AJqJAAgBAtUAQV/QSAhAUEBIQIDQCAAIAFBAWsiAWotAAAiBCABQYAbai0AACIFa0EIdSACcSADQf8BcXIhAyAEIAVzQf//A2pBCHYgAnEhAiABDQALIANBAEcL6B4BOn4gARAPIRIg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CiAAIAtC////AIMgBEIVh3wiBkIKiDwAESAAIAZCAog8ABAgACAEQv///wCDIgdCAYYgBUIUiIQ8AA0gACAMQv///wCDIAZCFYd8IgRCDYg8ABQgACAEQgWIPAATIAAgBkL///8AgyIFQgaGIAdCD4iEPAAPIAAgDkL///8AgyAEQhWHfCIGPAAVIAAgBEIDhiAFQhKIhDwAEiAAIAZCCIg8ABYgACAPQv///wCDIAZCFYd8IgRCC4g8ABkgACAEQgOIPAAYIAAgEEL///8AgyAEQhWHfCIFQgaIPAAbIAAgBkIQiEIfgyAEQv///wCDIgRCBYaEPAAXIAAgDUL///8AgyAFQhWHfCIGQhGIPAAfIAAgBkIJiDwAHiAAIAZCAYg8AB0gACAFQv///wCDIgVCAoYgBEITiIQ8ABogACAGQgeGIAVCDoiEPAAcC1IBA38gAC0AH0F/c0H/AHEhAUEeIQIDQCABIAAgAmotAABBf3NyIQEgAkEBayIDIQIgAw0ACyABQf8BcUEBa0HsASAALQAAa3FBCHZBf3NBAXELjAQBAn8jAEHgDWsiAiQAIAJB4ANqIAEQGyACQcACaiABEE8gAiACQcACahAVIAJBwAJqIAIgAkHgA2oQGiACQaABaiACQcACahAVIAJBgAVqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJBoAZqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJBwAdqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJB4AhqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJBgApqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJBoAtqIgEgAkGgAWoQGyACQcACaiACIAEQGiACQaABaiACQcACahAVIAJBwAxqIAJBoAFqEBsgABCrAUH8ASEBA0AgAkHAAmogABBPAkAgASIDQaCLAmosAAAiAUEBTgRAIAJBoAFqIAJBwAJqEBUgAkHAAmogAkGgAWogAkHgA2ogAUH+AXFBAXZBoAFsahAaDAELIAFBf0oNACACQaABaiACQcACahAVIAJBwAJqIAJBoAFqIAJB4ANqQQAgAWtB/gFx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/////////3/t////////////////////////////////////////f+7///////////////////////////////////////9/7dP1XBpjEljWnPei3vneFABBnxsL/PABEIU7jAG98ST/+CXDAWDcNwC3TD7/w0I9ADJMpAHhpEz/TD2j/3U+HwBRkUD/dkEOAKJz1v8Gii4AfOb0/wqKjwA0GsIAuPRMAIGPKQG+9BP/e6p6/2KBRAB51ZMAVmUe/6FnmwCMWUP/7+W+AUMLtQDG8In+7kW8/+pxPP8l/zn/RbK2/oDQswB2Gn3+AwfW//EyTf9Vy8X/04f6/xkwZP+71bT+EVhpAFPRngEFc2IABK48/qs3bv/ZtRH/FLyqAJKcZv5X1q7/cnqbAeksqgB/CO8B1uzqAK8F2wAxaj3/BkLQ/wJqbv9R6hP/12vA/0OX7gATKmz/5VVxATJEh/8RagkAMmcB/1ABqAEjmB7/EKi5AThZ6P9l0vwAKfpHAMyqT/8OLu//UE3vAL3WS/8RjfkAJlBM/75VdQBW5KoAnNjQAcPPpP+WQkz/r+EQ/41QYgFM2/IAxqJyAC7amACbK/H+m6Bo/7IJ/P5kbtQADgWnAOnvo/8cl50BZZIK//6eRv5H+eQAWB4yAEQ6oP+/GGgBgUKB/8AyVf8Is4r/JvrJAHNQoACD5nEAfViTAFpExwD9TJ4AHP92AHH6/gBCSy4A5torAOV4ugGURCsAiHzuAbtrxf9UNfb/M3T+/zO7pQACEa8AQlSgAfc6HgAjQTX+Rey/AC2G9QGje90AIG4U/zQXpQC61kcA6bBgAPLvNgE5WYoAUwBU/4igZABcjnj+aHy+ALWxPv/6KVUAmIIqAWD89gCXlz/+74U+ACA4nAAtp73/joWzAYNW0wC7s5b++qoO/0RxFf/eujv/QgfxAUUGSABWnGz+N6dZAG002/4NsBf/xCxq/++VR/+kjH3/n60BADMp5wCRPiEAim9dAblTRQCQcy4AYZcQ/xjkGgAx2eIAcUvq/sGZDP+2MGD/Dg0aAIDD+f5FwTsAhCVR/n1qPADW8KkBpONCANKjTgAlNJcAY00aAO6c1f/VwNEBSS5UABRBKQE2zk8AyYOS/qpvGP+xITL+qybL/073dADR3ZkAhYCyATosGQDJJzsBvRP8ADHl0gF1u3UAtbO4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ANW7ff/oLjz/vnQq/peyE/8zPu3+zOzBAMLoPACsIp3/vRC4/mcDX/+N6ST+KRkL/xXDpgB29S0AQ9WV/58MEv+7pOMBoBkFAAxOwwErxeEAMI4p/sSbPP/fxxIBkYicAPx1qf6R4u4A7xdrAG21vP/mcDH+Sart/+e34/9Q3BQAwmt/AX/NZQAuNMUB0qsk/1gDWv84l40AYLv//ypOyAD+RkYB9H2oAMxEigF810YAZkLI/hE05AB13I/+y/h7ADgSrv+6l6T/M+jQAaDkK//5HRkBRL4/AA0AAAAA/wAAAAD1AAAAAAAA+wAAAAAAAP0AAAAA8wAAAAAHAAAAAAADAAAAAPMAAAAABQAAAAAAAAAACwAAAAAACwAAAADzAAAAAAAA/QAAAAAA/wAAAAADAAAAAPUAAAAAAAAADwAAAAAA/wAAAAD/AAAAAAcAAAAABQBBnI0CCwEBAEHAjQILAQEAQeCNAgugAeDrenw7QbiuFlbj+vGfxGraCY3rnDKx/YZiBRZfSbgAX5yVvKNQjCSx0LFVnIPvWwREXMRYHI6G2CJO3dCfEVfs////////////////////////////////////////f+3///////////////////////////////////////9/7v///////////////////////////////////////38AQaCPAgvBBQjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FsirijXmC+KQs1l7yORRDdxLztN7M/7wLW824mBpdu16Ti1SPNbwlY5GdAFtvER8VmbTxmvpII/khiBbdrVXhyrQgIDo5iqB9i+b3BFAVuDEoyy5E6+hTEk4rT/1cN9DFVviXvydF2+crGWFjv+sd6ANRLHJacG3JuUJmnPdPGbwdJK8Z7BaZvk4yVPOIZHvu+11YyLxp3BD2WcrHfMoQwkdQIrWW8s6S2D5KZuqoR0StT7Qb3cqbBctVMRg9qI+Xar32buUlE+mBAytC1txjGoPyH7mMgnA7DkDu++x39Zv8KPqD3zC+DGJacKk0eRp9VvggPgUWPKBnBuDgpnKSkU/C/SRoUKtycmySZcOCEbLu0qxFr8bSxN37OVnRMNOFPeY6+LVHMKZaiydzy7Cmp25q7tRy7JwoE7NYIUhSxykmQD8Uyh6L+iATBCvEtmGqiRl/jQcItLwjC+VAajUWzHGFLv1hnoktEQqWVVJAaZ1iogcVeFNQ70uNG7MnCgahDI0NK4FsGkGVOrQVEIbDcemeuO30x3SCeoSJvhtbywNGNaycWzDBw5y4pB40qq2E5z42N3T8qcW6O4stbzby5o/LLvXe6Cj3RgLxdDb2OleHKr8KEUeMiE7DlkGggCx4woHmMj+v++kOm9gt7rbFCkFXnGsvej+b4rU3Lj8nhxxpxhJurOPifKB8LAIce4htEe6+DN1n3a6njRbu5/T331um8Xcqpn8AammMiixX1jCq4N+b4EmD8RG0ccEzULcRuEfQQj9XfbKJMkx0B7q8oyvL7JFQq+njxMDRCcxGcdQ7ZCPsu+1MVMKn5l/Jwpf1ns+tY6q2/LXxdYR0qMGURsgABB8JUCC4UBYjY0X3BvcyA8PSBiNjRfbGVuAHNvZGl1bS9jb2RlY3MuYwBzb2RpdW1fYmluMmJhc2U2NAAkYXJnb24yaWQAJGFyZ29uMmkAJHY9ACRtPQAsdD0ALHA9ACRhcmdvbjJpZCR2PQAkYXJnb24yaSR2PQAkYXJnb24yaWQkACRhcmdvbjJpJABBkJcCCyhTaWdFZDI1NTE5IG5vIEVkMjU1MTkgY29sbGlzaW9ucwEAMS4wLjE4AEG8lwILOVCOUAAAQAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQ==";function nA(A){try{if(A==iA&&w)return new Uint8Array(w);var I=HA(A);if(I)return I;if(t)return t(A);throw "both async and sync fetching of the wasm failed"}catch(A){$(A);}}function aA(){if(!w&&(i||n)){if("function"==typeof fetch&&!QA(iA))return fetch(iA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw "failed to load wasm binary file at '"+iA+"'";return A.arrayBuffer()})).catch((function(){return nA(iA)}));if(e)return new Promise((function(A,I){e(iA,(function(I){A(new Uint8Array(I));}),I);}))}return Promise.resolve().then((function(){return nA(iA)}))}function rA(){var A={a:bA};function I(A,I){var g=A.exports;Q.asm=g,M((h=Q.asm.g).buffer),d=Q.asm.h,z();}function g(A){I(A.instance);}function B(I){return aA().then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){D("failed to asynchronously prepare wasm: "+A),$(A);}))}if(O(),Q.instantiateWasm)try{return Q.instantiateWasm(A,I)}catch(A){return D("Module.instantiateWasm callback failed with error: "+A),!1}return w||"function"!=typeof WebAssembly.instantiateStreaming||gA(iA)||QA(iA)||"function"!=typeof fetch?B(g):fetch(iA,{credentials:"same-origin"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return D("wasm streaming compile failed: "+A),D("falling back to ArrayBuffer instantiation"),B(g)}))})),{}}gA(iA)||(iA=s(iA));var oA={1024:function(){return Q.getRandomValue()},1062:function(){if(void 0===Q.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),Q.getRandomValue=g;}catch(A){try{var B=crypto__default['default'],C=function(){var A=B.randomBytes(4);return (A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),Q.getRandomValue=C;}catch(A){throw "No secure random number generator found"}}}};function eA(A){for(;A.length>0;){var I=A.shift();if("function"!=typeof I){var g=I.func;"number"==typeof g?void 0===I.arg?d.get(g)():d.get(g)(I.arg):g(void 0===I.arg?null:I.arg);}else I(Q);}}function tA(A,I,g,B){$("Assertion failed: "+S(A)+", at: "+[I?S(I):"unknown filename",g,B?S(B):"unknown function"]);}function fA(){$();}function cA(A,I,g){var B=lA(I,g);return oA[A].apply(null,B)}function yA(A,I,g){_.copyWithin(A,I,I+g);}function sA(){return _.length}function wA(A){try{return h.grow(A-G.byteLength+65535>>>16),M(h.buffer),1}catch(A){}}function hA(A){A>>>=0;var I=sA(),g=2147483648;if(A>g)return !1;for(var B=1;B<=4;B*=2){var Q=I*(1+.2/B);if(Q=Math.min(Q,A+100663296),wA(Math.min(g,N(Math.max(16777216,A,Q),65536))))return !0}return !1}function DA(A){return Y[vA()>>2]=A,A}function uA(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return -1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return "object"==typeof navigator&&navigator.hardwareConcurrency||1}return DA(28),-1}var pA=[];function lA(A,I){var g;for(pA.length=0,I>>=2;g=_[A++];){var B=g<105;B&&1&I&&I++,pA.push(B?m[I++>>1]:Y[I]),++I;}return pA}function GA(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B));}return I.join("")}var kA="function"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n="",a=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(a++))<<2|(Q=i.indexOf(A.charAt(a++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(a++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==C&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B));}while(a<A.length);return n};function _A(A){if("boolean"==typeof a&&a){var I;try{I=Buffer.from(A,"base64");}catch(g){I=new Buffer(A,"base64");}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=kA(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function HA(A){if(gA(A))return _A(A.slice(IA.length))}var YA,bA={a:tA,c:fA,b:cA,e:yA,f:hA,d:uA},mA=(rA(),Q.___wasm_call_ctors=function(){return (mA=Q.___wasm_call_ctors=Q.asm.i).apply(null,arguments)}),vA=(Q._crypto_aead_chacha20poly1305_encrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_encrypt_detached=Q.asm.j).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_encrypt=function(){return (Q._crypto_aead_chacha20poly1305_encrypt=Q.asm.k).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=Q.asm.l).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return (Q._crypto_aead_chacha20poly1305_ietf_encrypt=Q.asm.m).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_decrypt_detached=Q.asm.n).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt=function(){return (Q._crypto_aead_chacha20poly1305_decrypt=Q.asm.o).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return (Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=Q.asm.p).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return (Q._crypto_aead_chacha20poly1305_ietf_decrypt=Q.asm.q).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_keybytes=Q.asm.r).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_npubbytes=Q.asm.s).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=Q.asm.t).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_abytes=function(){return (Q._crypto_aead_chacha20poly1305_ietf_abytes=Q.asm.u).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return (Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=Q.asm.v).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keygen=function(){return (Q._crypto_aead_chacha20poly1305_ietf_keygen=Q.asm.w).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keybytes=function(){return (Q._crypto_aead_chacha20poly1305_keybytes=Q.asm.x).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_npubbytes=function(){return (Q._crypto_aead_chacha20poly1305_npubbytes=Q.asm.y).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_nsecbytes=function(){return (Q._crypto_aead_chacha20poly1305_nsecbytes=Q.asm.z).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_abytes=function(){return (Q._crypto_aead_chacha20poly1305_abytes=Q.asm.A).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_messagebytes_max=function(){return (Q._crypto_aead_chacha20poly1305_messagebytes_max=Q.asm.B).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keygen=function(){return (Q._crypto_aead_chacha20poly1305_keygen=Q.asm.C).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Q.asm.D).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_encrypt=Q.asm.E).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Q.asm.F).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_decrypt=Q.asm.G).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_keybytes=Q.asm.H).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=Q.asm.I).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=Q.asm.J).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_abytes=Q.asm.K).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Q.asm.L).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return (Q._crypto_aead_xchacha20poly1305_ietf_keygen=Q.asm.M).apply(null,arguments)},Q._crypto_auth_bytes=function(){return (Q._crypto_auth_bytes=Q.asm.N).apply(null,arguments)},Q._crypto_auth_keybytes=function(){return (Q._crypto_auth_keybytes=Q.asm.O).apply(null,arguments)},Q._crypto_auth=function(){return (Q._crypto_auth=Q.asm.P).apply(null,arguments)},Q._crypto_auth_verify=function(){return (Q._crypto_auth_verify=Q.asm.Q).apply(null,arguments)},Q._crypto_auth_keygen=function(){return (Q._crypto_auth_keygen=Q.asm.R).apply(null,arguments)},Q._crypto_box_seedbytes=function(){return (Q._crypto_box_seedbytes=Q.asm.S).apply(null,arguments)},Q._crypto_box_publickeybytes=function(){return (Q._crypto_box_publickeybytes=Q.asm.T).apply(null,arguments)},Q._crypto_box_secretkeybytes=function(){return (Q._crypto_box_secretkeybytes=Q.asm.U).apply(null,arguments)},Q._crypto_box_beforenmbytes=function(){return (Q._crypto_box_beforenmbytes=Q.asm.V).apply(null,arguments)},Q._crypto_box_noncebytes=function(){return (Q._crypto_box_noncebytes=Q.asm.W).apply(null,arguments)},Q._crypto_box_macbytes=function(){return (Q._crypto_box_macbytes=Q.asm.X).apply(null,arguments)},Q._crypto_box_messagebytes_max=function(){return (Q._crypto_box_messagebytes_max=Q.asm.Y).apply(null,arguments)},Q._crypto_box_seed_keypair=function(){return (Q._crypto_box_seed_keypair=Q.asm.Z).apply(null,arguments)},Q._crypto_box_keypair=function(){return (Q._crypto_box_keypair=Q.asm._).apply(null,arguments)},Q._crypto_box_beforenm=function(){return (Q._crypto_box_beforenm=Q.asm.$).apply(null,arguments)},Q._crypto_box_detached_afternm=function(){return (Q._crypto_box_detached_afternm=Q.asm.aa).apply(null,arguments)},Q._crypto_box_detached=function(){return (Q._crypto_box_detached=Q.asm.ba).apply(null,arguments)},Q._crypto_box_easy_afternm=function(){return (Q._crypto_box_easy_afternm=Q.asm.ca).apply(null,arguments)},Q._crypto_box_easy=function(){return (Q._crypto_box_easy=Q.asm.da).apply(null,arguments)},Q._crypto_box_open_detached_afternm=function(){return (Q._crypto_box_open_detached_afternm=Q.asm.ea).apply(null,arguments)},Q._crypto_box_open_detached=function(){return (Q._crypto_box_open_detached=Q.asm.fa).apply(null,arguments)},Q._crypto_box_open_easy_afternm=function(){return (Q._crypto_box_open_easy_afternm=Q.asm.ga).apply(null,arguments)},Q._crypto_box_open_easy=function(){return (Q._crypto_box_open_easy=Q.asm.ha).apply(null,arguments)},Q._crypto_box_seal=function(){return (Q._crypto_box_seal=Q.asm.ia).apply(null,arguments)},Q._crypto_box_seal_open=function(){return (Q._crypto_box_seal_open=Q.asm.ja).apply(null,arguments)},Q._crypto_box_sealbytes=function(){return (Q._crypto_box_sealbytes=Q.asm.ka).apply(null,arguments)},Q._crypto_generichash_bytes_min=function(){return (Q._crypto_generichash_bytes_min=Q.asm.la).apply(null,arguments)},Q._crypto_generichash_bytes_max=function(){return (Q._crypto_generichash_bytes_max=Q.asm.ma).apply(null,arguments)},Q._crypto_generichash_bytes=function(){return (Q._crypto_generichash_bytes=Q.asm.na).apply(null,arguments)},Q._crypto_generichash_keybytes_min=function(){return (Q._crypto_generichash_keybytes_min=Q.asm.oa).apply(null,arguments)},Q._crypto_generichash_keybytes_max=function(){return (Q._crypto_generichash_keybytes_max=Q.asm.pa).apply(null,arguments)},Q._crypto_generichash_keybytes=function(){return (Q._crypto_generichash_keybytes=Q.asm.qa).apply(null,arguments)},Q._crypto_generichash_statebytes=function(){return (Q._crypto_generichash_statebytes=Q.asm.ra).apply(null,arguments)},Q._crypto_generichash=function(){return (Q._crypto_generichash=Q.asm.sa).apply(null,arguments)},Q._crypto_generichash_init=function(){return (Q._crypto_generichash_init=Q.asm.ta).apply(null,arguments)},Q._crypto_generichash_update=function(){return (Q._crypto_generichash_update=Q.asm.ua).apply(null,arguments)},Q._crypto_generichash_final=function(){return (Q._crypto_generichash_final=Q.asm.va).apply(null,arguments)},Q._crypto_generichash_keygen=function(){return (Q._crypto_generichash_keygen=Q.asm.wa).apply(null,arguments)},Q._crypto_hash_bytes=function(){return (Q._crypto_hash_bytes=Q.asm.xa).apply(null,arguments)},Q._crypto_hash=function(){return (Q._crypto_hash=Q.asm.ya).apply(null,arguments)},Q._crypto_kdf_bytes_min=function(){return (Q._crypto_kdf_bytes_min=Q.asm.za).apply(null,arguments)},Q._crypto_kdf_bytes_max=function(){return (Q._crypto_kdf_bytes_max=Q.asm.Aa).apply(null,arguments)},Q._crypto_kdf_contextbytes=function(){return (Q._crypto_kdf_contextbytes=Q.asm.Ba).apply(null,arguments)},Q._crypto_kdf_keybytes=function(){return (Q._crypto_kdf_keybytes=Q.asm.Ca).apply(null,arguments)},Q._crypto_kdf_derive_from_key=function(){return (Q._crypto_kdf_derive_from_key=Q.asm.Da).apply(null,arguments)},Q._crypto_kdf_keygen=function(){return (Q._crypto_kdf_keygen=Q.asm.Ea).apply(null,arguments)},Q._crypto_kx_seed_keypair=function(){return (Q._crypto_kx_seed_keypair=Q.asm.Fa).apply(null,arguments)},Q._crypto_kx_keypair=function(){return (Q._crypto_kx_keypair=Q.asm.Ga).apply(null,arguments)},Q._crypto_kx_client_session_keys=function(){return (Q._crypto_kx_client_session_keys=Q.asm.Ha).apply(null,arguments)},Q._crypto_kx_server_session_keys=function(){return (Q._crypto_kx_server_session_keys=Q.asm.Ia).apply(null,arguments)},Q._crypto_kx_publickeybytes=function(){return (Q._crypto_kx_publickeybytes=Q.asm.Ja).apply(null,arguments)},Q._crypto_kx_secretkeybytes=function(){return (Q._crypto_kx_secretkeybytes=Q.asm.Ka).apply(null,arguments)},Q._crypto_kx_seedbytes=function(){return (Q._crypto_kx_seedbytes=Q.asm.La).apply(null,arguments)},Q._crypto_kx_sessionkeybytes=function(){return (Q._crypto_kx_sessionkeybytes=Q.asm.Ma).apply(null,arguments)},Q._crypto_pwhash_alg_argon2i13=function(){return (Q._crypto_pwhash_alg_argon2i13=Q.asm.Na).apply(null,arguments)},Q._crypto_pwhash_alg_argon2id13=function(){return (Q._crypto_pwhash_alg_argon2id13=Q.asm.Oa).apply(null,arguments)},Q._crypto_pwhash_alg_default=function(){return (Q._crypto_pwhash_alg_default=Q.asm.Pa).apply(null,arguments)},Q._crypto_pwhash_bytes_min=function(){return (Q._crypto_pwhash_bytes_min=Q.asm.Qa).apply(null,arguments)},Q._crypto_pwhash_bytes_max=function(){return (Q._crypto_pwhash_bytes_max=Q.asm.Ra).apply(null,arguments)},Q._crypto_pwhash_passwd_min=function(){return (Q._crypto_pwhash_passwd_min=Q.asm.Sa).apply(null,arguments)},Q._crypto_pwhash_passwd_max=function(){return (Q._crypto_pwhash_passwd_max=Q.asm.Ta).apply(null,arguments)},Q._crypto_pwhash_saltbytes=function(){return (Q._crypto_pwhash_saltbytes=Q.asm.Ua).apply(null,arguments)},Q._crypto_pwhash_strbytes=function(){return (Q._crypto_pwhash_strbytes=Q.asm.Va).apply(null,arguments)},Q._crypto_pwhash_strprefix=function(){return (Q._crypto_pwhash_strprefix=Q.asm.Wa).apply(null,arguments)},Q._crypto_pwhash_opslimit_min=function(){return (Q._crypto_pwhash_opslimit_min=Q.asm.Xa).apply(null,arguments)},Q._crypto_pwhash_opslimit_max=function(){return (Q._crypto_pwhash_opslimit_max=Q.asm.Ya).apply(null,arguments)},Q._crypto_pwhash_memlimit_min=function(){return (Q._crypto_pwhash_memlimit_min=Q.asm.Za).apply(null,arguments)},Q._crypto_pwhash_memlimit_max=function(){return (Q._crypto_pwhash_memlimit_max=Q.asm._a).apply(null,arguments)},Q._crypto_pwhash_opslimit_interactive=function(){return (Q._crypto_pwhash_opslimit_interactive=Q.asm.$a).apply(null,arguments)},Q._crypto_pwhash_memlimit_interactive=function(){return (Q._crypto_pwhash_memlimit_interactive=Q.asm.ab).apply(null,arguments)},Q._crypto_pwhash_opslimit_moderate=function(){return (Q._crypto_pwhash_opslimit_moderate=Q.asm.bb).apply(null,arguments)},Q._crypto_pwhash_memlimit_moderate=function(){return (Q._crypto_pwhash_memlimit_moderate=Q.asm.cb).apply(null,arguments)},Q._crypto_pwhash_opslimit_sensitive=function(){return (Q._crypto_pwhash_opslimit_sensitive=Q.asm.db).apply(null,arguments)},Q._crypto_pwhash_memlimit_sensitive=function(){return (Q._crypto_pwhash_memlimit_sensitive=Q.asm.eb).apply(null,arguments)},Q._crypto_pwhash=function(){return (Q._crypto_pwhash=Q.asm.fb).apply(null,arguments)},Q._crypto_pwhash_str=function(){return (Q._crypto_pwhash_str=Q.asm.gb).apply(null,arguments)},Q._crypto_pwhash_str_alg=function(){return (Q._crypto_pwhash_str_alg=Q.asm.hb).apply(null,arguments)},Q._crypto_pwhash_str_verify=function(){return (Q._crypto_pwhash_str_verify=Q.asm.ib).apply(null,arguments)},Q._crypto_pwhash_str_needs_rehash=function(){return (Q._crypto_pwhash_str_needs_rehash=Q.asm.jb).apply(null,arguments)},Q._crypto_scalarmult_base=function(){return (Q._crypto_scalarmult_base=Q.asm.kb).apply(null,arguments)},Q._crypto_scalarmult=function(){return (Q._crypto_scalarmult=Q.asm.lb).apply(null,arguments)},Q._crypto_scalarmult_bytes=function(){return (Q._crypto_scalarmult_bytes=Q.asm.mb).apply(null,arguments)},Q._crypto_scalarmult_scalarbytes=function(){return (Q._crypto_scalarmult_scalarbytes=Q.asm.nb).apply(null,arguments)},Q._crypto_secretbox_keybytes=function(){return (Q._crypto_secretbox_keybytes=Q.asm.ob).apply(null,arguments)},Q._crypto_secretbox_noncebytes=function(){return (Q._crypto_secretbox_noncebytes=Q.asm.pb).apply(null,arguments)},Q._crypto_secretbox_macbytes=function(){return (Q._crypto_secretbox_macbytes=Q.asm.qb).apply(null,arguments)},Q._crypto_secretbox_messagebytes_max=function(){return (Q._crypto_secretbox_messagebytes_max=Q.asm.rb).apply(null,arguments)},Q._crypto_secretbox_keygen=function(){return (Q._crypto_secretbox_keygen=Q.asm.sb).apply(null,arguments)},Q._crypto_secretbox_detached=function(){return (Q._crypto_secretbox_detached=Q.asm.tb).apply(null,arguments)},Q._crypto_secretbox_easy=function(){return (Q._crypto_secretbox_easy=Q.asm.ub).apply(null,arguments)},Q._crypto_secretbox_open_detached=function(){return (Q._crypto_secretbox_open_detached=Q.asm.vb).apply(null,arguments)},Q._crypto_secretbox_open_easy=function(){return (Q._crypto_secretbox_open_easy=Q.asm.wb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keygen=function(){return (Q._crypto_secretstream_xchacha20poly1305_keygen=Q.asm.xb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_init_push=Q.asm.yb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_pull=function(){return (Q._crypto_secretstream_xchacha20poly1305_init_pull=Q.asm.zb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_rekey=function(){return (Q._crypto_secretstream_xchacha20poly1305_rekey=Q.asm.Ab).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_push=Q.asm.Bb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_pull=function(){return (Q._crypto_secretstream_xchacha20poly1305_pull=Q.asm.Cb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_statebytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_statebytes=Q.asm.Db).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_abytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_abytes=Q.asm.Eb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_headerbytes=Q.asm.Fb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keybytes=function(){return (Q._crypto_secretstream_xchacha20poly1305_keybytes=Q.asm.Gb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return (Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=Q.asm.Hb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_message=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_message=Q.asm.Ib).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_push=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_push=Q.asm.Jb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_rekey=Q.asm.Kb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_final=function(){return (Q._crypto_secretstream_xchacha20poly1305_tag_final=Q.asm.Lb).apply(null,arguments)},Q._crypto_shorthash_bytes=function(){return (Q._crypto_shorthash_bytes=Q.asm.Mb).apply(null,arguments)},Q._crypto_shorthash_keybytes=function(){return (Q._crypto_shorthash_keybytes=Q.asm.Nb).apply(null,arguments)},Q._crypto_shorthash=function(){return (Q._crypto_shorthash=Q.asm.Ob).apply(null,arguments)},Q._crypto_shorthash_keygen=function(){return (Q._crypto_shorthash_keygen=Q.asm.Pb).apply(null,arguments)},Q._crypto_sign_statebytes=function(){return (Q._crypto_sign_statebytes=Q.asm.Qb).apply(null,arguments)},Q._crypto_sign_bytes=function(){return (Q._crypto_sign_bytes=Q.asm.Rb).apply(null,arguments)},Q._crypto_sign_seedbytes=function(){return (Q._crypto_sign_seedbytes=Q.asm.Sb).apply(null,arguments)},Q._crypto_sign_publickeybytes=function(){return (Q._crypto_sign_publickeybytes=Q.asm.Tb).apply(null,arguments)},Q._crypto_sign_secretkeybytes=function(){return (Q._crypto_sign_secretkeybytes=Q.asm.Ub).apply(null,arguments)},Q._crypto_sign_messagebytes_max=function(){return (Q._crypto_sign_messagebytes_max=Q.asm.Vb).apply(null,arguments)},Q._crypto_sign_seed_keypair=function(){return (Q._crypto_sign_seed_keypair=Q.asm.Wb).apply(null,arguments)},Q._crypto_sign_keypair=function(){return (Q._crypto_sign_keypair=Q.asm.Xb).apply(null,arguments)},Q._crypto_sign=function(){return (Q._crypto_sign=Q.asm.Yb).apply(null,arguments)},Q._crypto_sign_open=function(){return (Q._crypto_sign_open=Q.asm.Zb).apply(null,arguments)},Q._crypto_sign_detached=function(){return (Q._crypto_sign_detached=Q.asm._b).apply(null,arguments)},Q._crypto_sign_verify_detached=function(){return (Q._crypto_sign_verify_detached=Q.asm.$b).apply(null,arguments)},Q._crypto_sign_init=function(){return (Q._crypto_sign_init=Q.asm.ac).apply(null,arguments)},Q._crypto_sign_update=function(){return (Q._crypto_sign_update=Q.asm.bc).apply(null,arguments)},Q._crypto_sign_final_create=function(){return (Q._crypto_sign_final_create=Q.asm.cc).apply(null,arguments)},Q._crypto_sign_final_verify=function(){return (Q._crypto_sign_final_verify=Q.asm.dc).apply(null,arguments)},Q._crypto_sign_ed25519_pk_to_curve25519=function(){return (Q._crypto_sign_ed25519_pk_to_curve25519=Q.asm.ec).apply(null,arguments)},Q._crypto_sign_ed25519_sk_to_curve25519=function(){return (Q._crypto_sign_ed25519_sk_to_curve25519=Q.asm.fc).apply(null,arguments)},Q._randombytes_random=function(){return (Q._randombytes_random=Q.asm.gc).apply(null,arguments)},Q._randombytes_stir=function(){return (Q._randombytes_stir=Q.asm.hc).apply(null,arguments)},Q._randombytes_uniform=function(){return (Q._randombytes_uniform=Q.asm.ic).apply(null,arguments)},Q._randombytes_buf=function(){return (Q._randombytes_buf=Q.asm.jc).apply(null,arguments)},Q._randombytes_buf_deterministic=function(){return (Q._randombytes_buf_deterministic=Q.asm.kc).apply(null,arguments)},Q._randombytes_seedbytes=function(){return (Q._randombytes_seedbytes=Q.asm.lc).apply(null,arguments)},Q._randombytes_close=function(){return (Q._randombytes_close=Q.asm.mc).apply(null,arguments)},Q._randombytes=function(){return (Q._randombytes=Q.asm.nc).apply(null,arguments)},Q._sodium_bin2hex=function(){return (Q._sodium_bin2hex=Q.asm.oc).apply(null,arguments)},Q._sodium_hex2bin=function(){return (Q._sodium_hex2bin=Q.asm.pc).apply(null,arguments)},Q._sodium_base64_encoded_len=function(){return (Q._sodium_base64_encoded_len=Q.asm.qc).apply(null,arguments)},Q._sodium_bin2base64=function(){return (Q._sodium_bin2base64=Q.asm.rc).apply(null,arguments)},Q._sodium_base642bin=function(){return (Q._sodium_base642bin=Q.asm.sc).apply(null,arguments)},Q._sodium_init=function(){return (Q._sodium_init=Q.asm.tc).apply(null,arguments)},Q._sodium_pad=function(){return (Q._sodium_pad=Q.asm.uc).apply(null,arguments)},Q._sodium_unpad=function(){return (Q._sodium_unpad=Q.asm.vc).apply(null,arguments)},Q._sodium_version_string=function(){return (Q._sodium_version_string=Q.asm.wc).apply(null,arguments)},Q._sodium_library_version_major=function(){return (Q._sodium_library_version_major=Q.asm.xc).apply(null,arguments)},Q._sodium_library_version_minor=function(){return (Q._sodium_library_version_minor=Q.asm.yc).apply(null,arguments)},Q._sodium_library_minimal=function(){return (Q._sodium_library_minimal=Q.asm.zc).apply(null,arguments)},Q.___errno_location=function(){return (vA=Q.___errno_location=Q.asm.Ac).apply(null,arguments)});function UA(A){function I(){YA||(YA=!0,Q.calledRun=!0,l||(K(),q(),Q.onRuntimeInitialized&&Q.onRuntimeInitialized(),X()));}T>0||(L(),T>0||(Q.setStatus?(Q.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Q.setStatus("");}),1),I();}),1)):I()));}if(Q._malloc=function(){return (Q._malloc=Q.asm.Bc).apply(null,arguments)},Q._free=function(){return (Q._free=Q.asm.Cc).apply(null,arguments)},Q.setValue=u,Q.getValue=p,Q.UTF8ToString=S,Z=function A(){YA||UA(),YA||(Z=A);},Q.run=UA,Q.preInit)for("function"==typeof Q.preInit&&(Q.preInit=[Q.preInit]);Q.preInit.length>0;)Q.preInit.pop()();UA();})).catch((function(){return B.useBackupModule()})),I}"string"!=typeof exports.nodeName?I(exports):A.libsodium=I(A.libsodium_mod||(A.commonJsStrict={}));}(commonjsGlobal);
});

var libsodium$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': libsodium$1,
    __moduleExports: libsodium$1
});

var require$$0 = getCjsExportFromNamespace(libsodium$2);

var libsodiumWrappers = createCommonjsModule(function (module, exports) {
!function(e){function r(e,r){var t,a=r.ready.then((function(){function a(){if(0!==t._sodium_init())throw new Error("libsodium was not correctly initialized.");for(var r=["crypto_aead_chacha20poly1305_decrypt","crypto_aead_chacha20poly1305_decrypt_detached","crypto_aead_chacha20poly1305_encrypt","crypto_aead_chacha20poly1305_encrypt_detached","crypto_aead_chacha20poly1305_ietf_decrypt","crypto_aead_chacha20poly1305_ietf_decrypt_detached","crypto_aead_chacha20poly1305_ietf_encrypt","crypto_aead_chacha20poly1305_ietf_encrypt_detached","crypto_aead_chacha20poly1305_ietf_keygen","crypto_aead_chacha20poly1305_keygen","crypto_aead_xchacha20poly1305_ietf_decrypt","crypto_aead_xchacha20poly1305_ietf_decrypt_detached","crypto_aead_xchacha20poly1305_ietf_encrypt","crypto_aead_xchacha20poly1305_ietf_encrypt_detached","crypto_aead_xchacha20poly1305_ietf_keygen","crypto_auth","crypto_auth_hmacsha256","crypto_auth_hmacsha256_keygen","crypto_auth_hmacsha256_verify","crypto_auth_hmacsha512","crypto_auth_hmacsha512_keygen","crypto_auth_hmacsha512_verify","crypto_auth_keygen","crypto_auth_verify","crypto_box_beforenm","crypto_box_curve25519xchacha20poly1305_keypair","crypto_box_curve25519xchacha20poly1305_seal","crypto_box_curve25519xchacha20poly1305_seal_open","crypto_box_detached","crypto_box_easy","crypto_box_easy_afternm","crypto_box_keypair","crypto_box_open_detached","crypto_box_open_easy","crypto_box_open_easy_afternm","crypto_box_seal","crypto_box_seal_open","crypto_box_seed_keypair","crypto_core_ed25519_add","crypto_core_ed25519_from_hash","crypto_core_ed25519_from_uniform","crypto_core_ed25519_is_valid_point","crypto_core_ed25519_random","crypto_core_ed25519_scalar_add","crypto_core_ed25519_scalar_complement","crypto_core_ed25519_scalar_invert","crypto_core_ed25519_scalar_mul","crypto_core_ed25519_scalar_negate","crypto_core_ed25519_scalar_random","crypto_core_ed25519_scalar_reduce","crypto_core_ed25519_scalar_sub","crypto_core_ed25519_sub","crypto_core_ristretto255_add","crypto_core_ristretto255_from_hash","crypto_core_ristretto255_is_valid_point","crypto_core_ristretto255_random","crypto_core_ristretto255_scalar_add","crypto_core_ristretto255_scalar_complement","crypto_core_ristretto255_scalar_invert","crypto_core_ristretto255_scalar_mul","crypto_core_ristretto255_scalar_negate","crypto_core_ristretto255_scalar_random","crypto_core_ristretto255_scalar_reduce","crypto_core_ristretto255_scalar_sub","crypto_core_ristretto255_sub","crypto_generichash","crypto_generichash_blake2b_salt_personal","crypto_generichash_final","crypto_generichash_init","crypto_generichash_keygen","crypto_generichash_update","crypto_hash","crypto_hash_sha256","crypto_hash_sha256_final","crypto_hash_sha256_init","crypto_hash_sha256_update","crypto_hash_sha512","crypto_hash_sha512_final","crypto_hash_sha512_init","crypto_hash_sha512_update","crypto_kdf_derive_from_key","crypto_kdf_keygen","crypto_kx_client_session_keys","crypto_kx_keypair","crypto_kx_seed_keypair","crypto_kx_server_session_keys","crypto_onetimeauth","crypto_onetimeauth_final","crypto_onetimeauth_init","crypto_onetimeauth_keygen","crypto_onetimeauth_update","crypto_onetimeauth_verify","crypto_pwhash","crypto_pwhash_scryptsalsa208sha256","crypto_pwhash_scryptsalsa208sha256_ll","crypto_pwhash_scryptsalsa208sha256_str","crypto_pwhash_scryptsalsa208sha256_str_verify","crypto_pwhash_str","crypto_pwhash_str_needs_rehash","crypto_pwhash_str_verify","crypto_scalarmult","crypto_scalarmult_base","crypto_scalarmult_ed25519","crypto_scalarmult_ed25519_base","crypto_scalarmult_ed25519_base_noclamp","crypto_scalarmult_ed25519_noclamp","crypto_scalarmult_ristretto255","crypto_scalarmult_ristretto255_base","crypto_secretbox_detached","crypto_secretbox_easy","crypto_secretbox_keygen","crypto_secretbox_open_detached","crypto_secretbox_open_easy","crypto_secretstream_xchacha20poly1305_init_pull","crypto_secretstream_xchacha20poly1305_init_push","crypto_secretstream_xchacha20poly1305_keygen","crypto_secretstream_xchacha20poly1305_pull","crypto_secretstream_xchacha20poly1305_push","crypto_secretstream_xchacha20poly1305_rekey","crypto_shorthash","crypto_shorthash_keygen","crypto_shorthash_siphashx24","crypto_sign","crypto_sign_detached","crypto_sign_ed25519_pk_to_curve25519","crypto_sign_ed25519_sk_to_curve25519","crypto_sign_ed25519_sk_to_pk","crypto_sign_ed25519_sk_to_seed","crypto_sign_final_create","crypto_sign_final_verify","crypto_sign_init","crypto_sign_keypair","crypto_sign_open","crypto_sign_seed_keypair","crypto_sign_update","crypto_sign_verify_detached","crypto_stream_chacha20","crypto_stream_chacha20_ietf_xor","crypto_stream_chacha20_ietf_xor_ic","crypto_stream_chacha20_keygen","crypto_stream_chacha20_xor","crypto_stream_chacha20_xor_ic","crypto_stream_keygen","crypto_stream_xchacha20_keygen","crypto_stream_xchacha20_xor","crypto_stream_xchacha20_xor_ic","randombytes_buf","randombytes_buf_deterministic","randombytes_close","randombytes_random","randombytes_set_implementation","randombytes_stir","randombytes_uniform","sodium_version_string"],a=[E,x,k,S,T,w,Y,B,A,K,M,I,N,L,U,O,C,R,P,G,X,D,F,V,H,q,j,z,W,J,Q,Z,$,ee,re,te,ae,_e,se,ne,ce,oe,he,pe,ye,ie,le,ue,de,ve,ge,be,fe,me,Ee,xe,ke,Se,Te,we,Ye,Be,Ae,Ke,Me,Ie,Ne,Le,Ue,Oe,Ce,Re,Pe,Ge,Xe,De,Fe,Ve,He,qe,je,ze,We,Je,Qe,Ze,$e,er,rr,tr,ar,_r,sr,nr,cr,or,hr,pr,yr,ir,lr,ur,dr,vr,gr,br,fr,mr,Er,xr,kr,Sr,Tr,wr,Yr,Br,Ar,Kr,Mr,Ir,Nr,Lr,Ur,Or,Cr,Rr,Pr,Gr,Xr,Dr,Fr,Vr,Hr,qr,jr,zr,Wr,Jr,Qr,Zr,$r,et,rt,tt,at,_t,st,nt,ct,ot,ht,pt,yt,it],_=0;_<a.length;_++)"function"==typeof t["_"+r[_]]&&(e[r[_]]=a[_]);var s=["SODIUM_LIBRARY_VERSION_MAJOR","SODIUM_LIBRARY_VERSION_MINOR","crypto_aead_chacha20poly1305_ABYTES","crypto_aead_chacha20poly1305_IETF_ABYTES","crypto_aead_chacha20poly1305_IETF_KEYBYTES","crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_IETF_NPUBBYTES","crypto_aead_chacha20poly1305_IETF_NSECBYTES","crypto_aead_chacha20poly1305_KEYBYTES","crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_NPUBBYTES","crypto_aead_chacha20poly1305_NSECBYTES","crypto_aead_chacha20poly1305_ietf_ABYTES","crypto_aead_chacha20poly1305_ietf_KEYBYTES","crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_chacha20poly1305_ietf_NPUBBYTES","crypto_aead_chacha20poly1305_ietf_NSECBYTES","crypto_aead_xchacha20poly1305_IETF_ABYTES","crypto_aead_xchacha20poly1305_IETF_KEYBYTES","crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_IETF_NPUBBYTES","crypto_aead_xchacha20poly1305_IETF_NSECBYTES","crypto_aead_xchacha20poly1305_ietf_ABYTES","crypto_aead_xchacha20poly1305_ietf_KEYBYTES","crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX","crypto_aead_xchacha20poly1305_ietf_NPUBBYTES","crypto_aead_xchacha20poly1305_ietf_NSECBYTES","crypto_auth_BYTES","crypto_auth_KEYBYTES","crypto_auth_hmacsha256_BYTES","crypto_auth_hmacsha256_KEYBYTES","crypto_auth_hmacsha512256_BYTES","crypto_auth_hmacsha512256_KEYBYTES","crypto_auth_hmacsha512_BYTES","crypto_auth_hmacsha512_KEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_MACBYTES","crypto_box_MESSAGEBYTES_MAX","crypto_box_NONCEBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SEALBYTES","crypto_box_SECRETKEYBYTES","crypto_box_SEEDBYTES","crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES","crypto_box_curve25519xchacha20poly1305_MACBYTES","crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xchacha20poly1305_NONCEBYTES","crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEALBYTES","crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES","crypto_box_curve25519xchacha20poly1305_SEEDBYTES","crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES","crypto_box_curve25519xsalsa20poly1305_MACBYTES","crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_box_curve25519xsalsa20poly1305_NONCEBYTES","crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES","crypto_box_curve25519xsalsa20poly1305_SEEDBYTES","crypto_core_ed25519_BYTES","crypto_core_ed25519_HASHBYTES","crypto_core_ed25519_NONREDUCEDSCALARBYTES","crypto_core_ed25519_SCALARBYTES","crypto_core_ed25519_UNIFORMBYTES","crypto_core_hchacha20_CONSTBYTES","crypto_core_hchacha20_INPUTBYTES","crypto_core_hchacha20_KEYBYTES","crypto_core_hchacha20_OUTPUTBYTES","crypto_core_hsalsa20_CONSTBYTES","crypto_core_hsalsa20_INPUTBYTES","crypto_core_hsalsa20_KEYBYTES","crypto_core_hsalsa20_OUTPUTBYTES","crypto_core_ristretto255_BYTES","crypto_core_ristretto255_HASHBYTES","crypto_core_ristretto255_NONREDUCEDSCALARBYTES","crypto_core_ristretto255_SCALARBYTES","crypto_core_salsa2012_CONSTBYTES","crypto_core_salsa2012_INPUTBYTES","crypto_core_salsa2012_KEYBYTES","crypto_core_salsa2012_OUTPUTBYTES","crypto_core_salsa20_CONSTBYTES","crypto_core_salsa20_INPUTBYTES","crypto_core_salsa20_KEYBYTES","crypto_core_salsa20_OUTPUTBYTES","crypto_generichash_BYTES","crypto_generichash_BYTES_MAX","crypto_generichash_BYTES_MIN","crypto_generichash_KEYBYTES","crypto_generichash_KEYBYTES_MAX","crypto_generichash_KEYBYTES_MIN","crypto_generichash_blake2b_BYTES","crypto_generichash_blake2b_BYTES_MAX","crypto_generichash_blake2b_BYTES_MIN","crypto_generichash_blake2b_KEYBYTES","crypto_generichash_blake2b_KEYBYTES_MAX","crypto_generichash_blake2b_KEYBYTES_MIN","crypto_generichash_blake2b_PERSONALBYTES","crypto_generichash_blake2b_SALTBYTES","crypto_hash_BYTES","crypto_hash_sha256_BYTES","crypto_hash_sha512_BYTES","crypto_kdf_BYTES_MAX","crypto_kdf_BYTES_MIN","crypto_kdf_CONTEXTBYTES","crypto_kdf_KEYBYTES","crypto_kdf_blake2b_BYTES_MAX","crypto_kdf_blake2b_BYTES_MIN","crypto_kdf_blake2b_CONTEXTBYTES","crypto_kdf_blake2b_KEYBYTES","crypto_kx_PUBLICKEYBYTES","crypto_kx_SECRETKEYBYTES","crypto_kx_SEEDBYTES","crypto_kx_SESSIONKEYBYTES","crypto_onetimeauth_BYTES","crypto_onetimeauth_KEYBYTES","crypto_onetimeauth_poly1305_BYTES","crypto_onetimeauth_poly1305_KEYBYTES","crypto_pwhash_ALG_ARGON2I13","crypto_pwhash_ALG_ARGON2ID13","crypto_pwhash_ALG_DEFAULT","crypto_pwhash_BYTES_MAX","crypto_pwhash_BYTES_MIN","crypto_pwhash_MEMLIMIT_INTERACTIVE","crypto_pwhash_MEMLIMIT_MAX","crypto_pwhash_MEMLIMIT_MIN","crypto_pwhash_MEMLIMIT_MODERATE","crypto_pwhash_MEMLIMIT_SENSITIVE","crypto_pwhash_OPSLIMIT_INTERACTIVE","crypto_pwhash_OPSLIMIT_MAX","crypto_pwhash_OPSLIMIT_MIN","crypto_pwhash_OPSLIMIT_MODERATE","crypto_pwhash_OPSLIMIT_SENSITIVE","crypto_pwhash_PASSWD_MAX","crypto_pwhash_PASSWD_MIN","crypto_pwhash_SALTBYTES","crypto_pwhash_STRBYTES","crypto_pwhash_argon2i_BYTES_MAX","crypto_pwhash_argon2i_BYTES_MIN","crypto_pwhash_argon2i_SALTBYTES","crypto_pwhash_argon2i_STRBYTES","crypto_pwhash_argon2id_BYTES_MAX","crypto_pwhash_argon2id_BYTES_MIN","crypto_pwhash_argon2id_SALTBYTES","crypto_pwhash_argon2id_STRBYTES","crypto_pwhash_scryptsalsa208sha256_BYTES_MAX","crypto_pwhash_scryptsalsa208sha256_BYTES_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_SALTBYTES","crypto_pwhash_scryptsalsa208sha256_STRBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_scalarmult_curve25519_BYTES","crypto_scalarmult_curve25519_SCALARBYTES","crypto_scalarmult_ed25519_BYTES","crypto_scalarmult_ed25519_SCALARBYTES","crypto_scalarmult_ristretto255_BYTES","crypto_scalarmult_ristretto255_SCALARBYTES","crypto_secretbox_KEYBYTES","crypto_secretbox_MACBYTES","crypto_secretbox_MESSAGEBYTES_MAX","crypto_secretbox_NONCEBYTES","crypto_secretbox_xchacha20poly1305_KEYBYTES","crypto_secretbox_xchacha20poly1305_MACBYTES","crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xchacha20poly1305_NONCEBYTES","crypto_secretbox_xsalsa20poly1305_KEYBYTES","crypto_secretbox_xsalsa20poly1305_MACBYTES","crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX","crypto_secretbox_xsalsa20poly1305_NONCEBYTES","crypto_secretstream_xchacha20poly1305_ABYTES","crypto_secretstream_xchacha20poly1305_HEADERBYTES","crypto_secretstream_xchacha20poly1305_KEYBYTES","crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretstream_xchacha20poly1305_TAG_FINAL","crypto_secretstream_xchacha20poly1305_TAG_MESSAGE","crypto_secretstream_xchacha20poly1305_TAG_PUSH","crypto_secretstream_xchacha20poly1305_TAG_REKEY","crypto_shorthash_BYTES","crypto_shorthash_KEYBYTES","crypto_shorthash_siphash24_BYTES","crypto_shorthash_siphash24_KEYBYTES","crypto_shorthash_siphashx24_BYTES","crypto_shorthash_siphashx24_KEYBYTES","crypto_sign_BYTES","crypto_sign_MESSAGEBYTES_MAX","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_sign_ed25519_BYTES","crypto_sign_ed25519_MESSAGEBYTES_MAX","crypto_sign_ed25519_PUBLICKEYBYTES","crypto_sign_ed25519_SECRETKEYBYTES","crypto_sign_ed25519_SEEDBYTES","crypto_stream_KEYBYTES","crypto_stream_MESSAGEBYTES_MAX","crypto_stream_NONCEBYTES","crypto_stream_chacha20_IETF_KEYBYTES","crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX","crypto_stream_chacha20_IETF_NONCEBYTES","crypto_stream_chacha20_KEYBYTES","crypto_stream_chacha20_MESSAGEBYTES_MAX","crypto_stream_chacha20_NONCEBYTES","crypto_stream_chacha20_ietf_KEYBYTES","crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX","crypto_stream_chacha20_ietf_NONCEBYTES","crypto_stream_salsa2012_KEYBYTES","crypto_stream_salsa2012_MESSAGEBYTES_MAX","crypto_stream_salsa2012_NONCEBYTES","crypto_stream_salsa208_KEYBYTES","crypto_stream_salsa208_MESSAGEBYTES_MAX","crypto_stream_salsa208_NONCEBYTES","crypto_stream_salsa20_KEYBYTES","crypto_stream_salsa20_MESSAGEBYTES_MAX","crypto_stream_salsa20_NONCEBYTES","crypto_stream_xchacha20_KEYBYTES","crypto_stream_xchacha20_MESSAGEBYTES_MAX","crypto_stream_xchacha20_NONCEBYTES","crypto_stream_xsalsa20_KEYBYTES","crypto_stream_xsalsa20_MESSAGEBYTES_MAX","crypto_stream_xsalsa20_NONCEBYTES","crypto_verify_16_BYTES","crypto_verify_32_BYTES","crypto_verify_64_BYTES"];for(_=0;_<s.length;_++)"function"==typeof(c=t["_"+s[_].toLowerCase()])&&(e[s[_]]=c());var n=["SODIUM_VERSION_STRING","crypto_pwhash_STRPREFIX","crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];for(_=0;_<n.length;_++){var c;"function"==typeof(c=t["_"+n[_].toLowerCase()])&&(e[n[_]]=t.UTF8ToString(c()));}}t=r;try{a();var _=new Uint8Array([98,97,108,108,115]),s=e.randombytes_buf(e.crypto_secretbox_NONCEBYTES),n=e.randombytes_buf(e.crypto_secretbox_KEYBYTES),c=e.crypto_secretbox_easy(_,s,n),o=e.crypto_secretbox_open_easy(c,s,n);if(e.memcmp(_,o))return}catch(e){if(null==t.useBackupModule)throw new Error("Both wasm and asm failed to load"+e)}t.useBackupModule(),a();}));function _(e){if("function"==typeof TextEncoder)return (new TextEncoder).encode(e);e=unescape(encodeURIComponent(e));for(var r=new Uint8Array(e.length),t=0,a=e.length;t<a;t++)r[t]=e.charCodeAt(t);return r}function s(e){if("function"==typeof TextDecoder)return new TextDecoder("utf-8",{fatal:!0}).decode(e);var r=8192,t=Math.ceil(e.length/r);if(t<=1)try{return decodeURIComponent(escape(String.fromCharCode.apply(null,e)))}catch(e){throw new TypeError("The encoded data was not valid.")}for(var a="",_=0,n=0;n<t;n++){var c=Array.prototype.slice.call(e,n*r+_,(n+1)*r+_);if(0!=c.length){var o,h=c.length,p=0;do{var y=c[--h];y>=240?(p=4,o=!0):y>=224?(p=3,o=!0):y>=192?(p=2,o=!0):y<128&&(p=1,o=!0);}while(!o);for(var i=p-(c.length-h),l=0;l<i;l++)_--,c.pop();a+=s(c);}}return a}function n(e){e=m(null,e,"input");for(var r,t,a,_="",s=0;s<e.length;s++)a=87+(t=15&e[s])+(t-10>>8&-39)<<8|87+(r=e[s]>>>4)+(r-10>>8&-39),_+=String.fromCharCode(255&a)+String.fromCharCode(a>>>8);return _}var c={ORIGINAL:1,ORIGINAL_NO_PADDING:3,URLSAFE:5,URLSAFE_NO_PADDING:7};function o(e){if(null==e)return c.URLSAFE_NO_PADDING;if(e!==c.ORIGINAL&&e!==c.ORIGINAL_NO_PADDING&&e!==c.URLSAFE&&e!=c.URLSAFE_NO_PADDING)throw new Error("unsupported base64 variant");return e}function h(e,r){r=o(r),e=m(_,e,"input");var a,_=[],n=0|Math.floor(e.length/3),c=e.length-3*n,h=4*n+(0!==c?0==(2&r)?4:2+(c>>>1):0),p=new l(h+1),y=u(e);return _.push(y),_.push(p.address),0===t._sodium_bin2base64(p.address,p.length,y,e.length,r)&&g(_,"conversion failed"),p.length=h,a=s(p.to_Uint8Array()),v(_),a}function p(e,r){var t=r||"uint8array";if(!y(t))throw new Error(t+" output format is not available");if(e instanceof l){if("uint8array"===t)return e.to_Uint8Array();if("text"===t)return s(e.to_Uint8Array());if("hex"===t)return n(e.to_Uint8Array());if("base64"===t)return h(e.to_Uint8Array(),c.URLSAFE_NO_PADDING);throw new Error('What is output format "'+t+'"?')}if("object"==typeof e){for(var a=Object.keys(e),_={},o=0;o<a.length;o++)_[a[o]]=p(e[a[o]],t);return _}if("string"==typeof e)return e;throw new TypeError("Cannot format output")}function y(e){for(var r=["uint8array","text","hex","base64"],t=0;t<r.length;t++)if(r[t]===e)return !0;return !1}function i(e){if(e){if("string"!=typeof e)throw new TypeError("When defined, the output format must be a string");if(!y(e))throw new Error(e+" is not a supported output format")}}function l(e){this.length=e,this.address=d(e);}function u(e){var r=d(e.length);return t.HEAPU8.set(e,r),r}function d(e){var r=t._malloc(e);if(0===r)throw {message:"_malloc() failed",length:e};return r}function v(e){if(e)for(var r=0;r<e.length;r++)a=e[r],t._free(a);var a;}function g(e,r){throw v(e),new Error(r)}function b(e,r){throw v(e),new TypeError(r)}function f(e,r,t){null==r&&b(e,t+" cannot be null or undefined");}function m(e,r,t){return f(e,r,t),r instanceof Uint8Array?r:"string"==typeof r?_(r):void b(e,"unsupported input type for "+t)}function E(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),r=m(c,r,"ciphertext");var h,y=t._crypto_aead_chacha20poly1305_abytes(),d=r.length;d<y&&b(c,"ciphertext is too short"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),s=m(c,s,"key");var S,T=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==T&&b(c,"invalid key length"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_chacha20poly1305_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_chacha20poly1305_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,"ciphertext cannot be decrypted using that key");}function x(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(r=m(o,r,"ciphertext")),d=r.length;o.push(y),a=m(o,a,"mac");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),s=m(o,s,"public_nonce");var S,T=0|t._crypto_aead_chacha20poly1305_npubbytes();s.length!==T&&b(o,"invalid public_nonce length"),S=u(s),o.push(S),n=m(o,n,"key");var w,Y=0|t._crypto_aead_chacha20poly1305_keybytes();n.length!==Y&&b(o,"invalid key length"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_chacha20poly1305_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key");}function k(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_chacha20poly1305_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_chacha20poly1305_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,"invalid usage");}function S(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_chacha20poly1305_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_chacha20poly1305_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,"invalid usage");}function T(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),r=m(c,r,"ciphertext");var h,y=t._crypto_aead_chacha20poly1305_ietf_abytes(),d=r.length;d<y&&b(c,"ciphertext is too short"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),s=m(c,s,"key");var S,T=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==T&&b(c,"invalid key length"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_chacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_chacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,"ciphertext cannot be decrypted using that key");}function w(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(r=m(o,r,"ciphertext")),d=r.length;o.push(y),a=m(o,a,"mac");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),s=m(o,s,"public_nonce");var S,T=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();s.length!==T&&b(o,"invalid public_nonce length"),S=u(s),o.push(S),n=m(o,n,"key");var w,Y=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==Y&&b(o,"invalid key length"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key");}function Y(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_chacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_chacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,"invalid usage");}function B(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_chacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,"invalid usage");}function A(e){var r=[];i(e);var a=new l(0|t._crypto_aead_chacha20poly1305_ietf_keybytes()),_=a.address;r.push(_),t._crypto_aead_chacha20poly1305_ietf_keygen(_);var s=p(a,e);return v(r),s}function K(e){var r=[];i(e);var a=new l(0|t._crypto_aead_chacha20poly1305_keybytes()),_=a.address;r.push(_),t._crypto_aead_chacha20poly1305_keygen(_);var s=p(a,e);return v(r),s}function M(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,"secret_nonce")),e.length,c.push(o)),r=m(c,r,"ciphertext");var h,y=t._crypto_aead_xchacha20poly1305_ietf_abytes(),d=r.length;d<y&&b(c,"ciphertext is too short"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,"additional_data")),E=a.length,c.push(f)),_=m(c,_,"public_nonce");var x,k=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,"invalid public_nonce length"),x=u(_),c.push(x),s=m(c,s,"key");var S,T=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==T&&b(c,"invalid key length"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_xchacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_xchacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,"ciphertext cannot be decrypted using that key");}function I(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,"secret_nonce")),e.length,o.push(h));var y=u(r=m(o,r,"ciphertext")),d=r.length;o.push(y),a=m(o,a,"mac");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,"invalid mac length"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,"additional_data")),k=_.length,o.push(x)),s=m(o,s,"public_nonce");var S,T=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();s.length!==T&&b(o,"invalid public_nonce length"),S=u(s),o.push(S),n=m(o,n,"key");var w,Y=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==Y&&b(o,"invalid key length"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,"ciphertext cannot be decrypted using that key");}function N(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_xchacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_xchacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,"invalid usage");}function L(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"message")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,"additional_data")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,"secret_nonce")),a.length,c.push(f)),_=m(c,_,"public_nonce");var E,x=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,"invalid public_nonce length"),E=u(_),c.push(E),s=m(c,s,"key");var k,S=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==S&&b(c,"invalid key length"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_xchacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,"invalid usage");}function U(e){var r=[];i(e);var a=new l(0|t._crypto_aead_xchacha20poly1305_ietf_keybytes()),_=a.address;r.push(_),t._crypto_aead_xchacha20poly1305_ietf_keygen(_);var s=p(a,e);return v(r),s}function O(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_auth_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function C(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_auth_hmacsha256_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_hmacsha256_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth_hmacsha256(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function R(e){var r=[];i(e);var a=new l(0|t._crypto_auth_hmacsha256_keybytes()),_=a.address;r.push(_),t._crypto_auth_hmacsha256_keygen(_);var s=p(a,e);return v(r),s}function P(e,r,a){var _=[];e=m(_,e,"tag");var s,n=0|t._crypto_auth_hmacsha256_bytes();e.length!==n&&b(_,"invalid tag length"),s=u(e),_.push(s);var c=u(r=m(_,r,"message")),o=r.length;_.push(c),a=m(_,a,"key");var h,p=0|t._crypto_auth_hmacsha256_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_hmacsha256_verify(s,c,o,0,h));return v(_),y}function G(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_auth_hmacsha512_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_hmacsha512_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth_hmacsha512(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function X(e){var r=[];i(e);var a=new l(0|t._crypto_auth_hmacsha512_keybytes()),_=a.address;r.push(_),t._crypto_auth_hmacsha512_keygen(_);var s=p(a,e);return v(r),s}function D(e,r,a){var _=[];e=m(_,e,"tag");var s,n=0|t._crypto_auth_hmacsha512_bytes();e.length!==n&&b(_,"invalid tag length"),s=u(e),_.push(s);var c=u(r=m(_,r,"message")),o=r.length;_.push(c),a=m(_,a,"key");var h,p=0|t._crypto_auth_hmacsha512_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_hmacsha512_verify(s,c,o,0,h));return v(_),y}function F(e){var r=[];i(e);var a=new l(0|t._crypto_auth_keybytes()),_=a.address;r.push(_),t._crypto_auth_keygen(_);var s=p(a,e);return v(r),s}function V(e,r,a){var _=[];e=m(_,e,"tag");var s,n=0|t._crypto_auth_bytes();e.length!==n&&b(_,"invalid tag length"),s=u(e),_.push(s);var c=u(r=m(_,r,"message")),o=r.length;_.push(c),a=m(_,a,"key");var h,p=0|t._crypto_auth_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_verify(s,c,o,0,h));return v(_),y}function H(e,r,a){var _=[];i(a),e=m(_,e,"publicKey");var s,n=0|t._crypto_box_publickeybytes();e.length!==n&&b(_,"invalid publicKey length"),s=u(e),_.push(s),r=m(_,r,"privateKey");var c,o=0|t._crypto_box_secretkeybytes();r.length!==o&&b(_,"invalid privateKey length"),c=u(r),_.push(c);var h=new l(0|t._crypto_box_beforenmbytes()),y=h.address;if(_.push(y),0==(0|t._crypto_box_beforenm(y,s,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function q(e){var r=[];i(e);var a=new l(0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_box_curve25519xchacha20poly1305_secretkeybytes()),n=s.address;r.push(n),t._crypto_box_curve25519xchacha20poly1305_keypair(_,n);var c=p({publicKey:a,privateKey:s,keyType:"curve25519"},e);return v(r),c}function j(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"publicKey");var c,o=0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes();r.length!==o&&b(_,"invalid publicKey length"),c=u(r),_.push(c);var h=new l(n+t._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),y=h.address;_.push(y),t._crypto_box_curve25519xchacha20poly1305_seal(y,s,n,0,c);var d=p(h,a);return v(_),d}function z(e,r,a,_){var s=[];i(_),e=m(s,e,"ciphertext");var n,c=t._crypto_box_curve25519xchacha20poly1305_sealbytes(),o=e.length;o<c&&b(s,"ciphertext is too short"),n=u(e),s.push(n),r=m(s,r,"publicKey");var h,y=0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes();r.length!==y&&b(s,"invalid publicKey length"),h=u(r),s.push(h),a=m(s,a,"secretKey");var d,g=0|t._crypto_box_curve25519xchacha20poly1305_secretkeybytes();a.length!==g&&b(s,"invalid secretKey length"),d=u(a),s.push(d);var f=new l(o-t._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),E=f.address;s.push(E),t._crypto_box_curve25519xchacha20poly1305_seal_open(E,n,o,0,h,d);var x=p(f,_);return v(s),x}function W(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"message")),o=e.length;n.push(c),r=m(n,r,"nonce");var h,y=0|t._crypto_box_noncebytes();r.length!==y&&b(n,"invalid nonce length"),h=u(r),n.push(h),a=m(n,a,"publicKey");var d,f=0|t._crypto_box_publickeybytes();a.length!==f&&b(n,"invalid publicKey length"),d=u(a),n.push(d),_=m(n,_,"privateKey");var E,x=0|t._crypto_box_secretkeybytes();_.length!==x&&b(n,"invalid privateKey length"),E=u(_),n.push(E);var k=new l(0|o),S=k.address;n.push(S);var T=new l(0|t._crypto_box_macbytes()),w=T.address;if(n.push(w),0==(0|t._crypto_box_detached(S,w,c,o,0,h,d,E))){var Y=p({ciphertext:k,mac:T},s);return v(n),Y}g(n,"invalid usage");}function J(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"message")),o=e.length;n.push(c),r=m(n,r,"nonce");var h,y=0|t._crypto_box_noncebytes();r.length!==y&&b(n,"invalid nonce length"),h=u(r),n.push(h),a=m(n,a,"publicKey");var d,f=0|t._crypto_box_publickeybytes();a.length!==f&&b(n,"invalid publicKey length"),d=u(a),n.push(d),_=m(n,_,"privateKey");var E,x=0|t._crypto_box_secretkeybytes();_.length!==x&&b(n,"invalid privateKey length"),E=u(_),n.push(E);var k=new l(o+t._crypto_box_macbytes()|0),S=k.address;if(n.push(S),0==(0|t._crypto_box_easy(S,c,o,0,h,d,E))){var T=p(k,s);return v(n),T}g(n,"invalid usage");}function Q(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_box_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"sharedKey");var y,d=0|t._crypto_box_beforenmbytes();a.length!==d&&b(s,"invalid sharedKey length"),y=u(a),s.push(y);var f=new l(c+t._crypto_box_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_box_easy_afternm(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,"invalid usage");}function Z(e){var r=[];i(e);var a=new l(0|t._crypto_box_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_box_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_box_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:"x25519"};return v(r),c}g(r,"internal error");}function $(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,"ciphertext")),h=e.length;c.push(o),r=m(c,r,"mac");var y,d=0|t._crypto_box_macbytes();r.length!==d&&b(c,"invalid mac length"),y=u(r),c.push(y),a=m(c,a,"nonce");var f,E=0|t._crypto_box_noncebytes();a.length!==E&&b(c,"invalid nonce length"),f=u(a),c.push(f),_=m(c,_,"publicKey");var x,k=0|t._crypto_box_publickeybytes();_.length!==k&&b(c,"invalid publicKey length"),x=u(_),c.push(x),s=m(c,s,"privateKey");var S,T=0|t._crypto_box_secretkeybytes();s.length!==T&&b(c,"invalid privateKey length"),S=u(s),c.push(S);var w=new l(0|h),Y=w.address;if(c.push(Y),0==(0|t._crypto_box_open_detached(Y,o,y,h,0,f,x,S))){var B=p(w,n);return v(c),B}g(c,"incorrect key pair for the given ciphertext");}function ee(e,r,a,_,s){var n=[];i(s),e=m(n,e,"ciphertext");var c,o=t._crypto_box_macbytes(),h=e.length;h<o&&b(n,"ciphertext is too short"),c=u(e),n.push(c),r=m(n,r,"nonce");var y,d=0|t._crypto_box_noncebytes();r.length!==d&&b(n,"invalid nonce length"),y=u(r),n.push(y),a=m(n,a,"publicKey");var f,E=0|t._crypto_box_publickeybytes();a.length!==E&&b(n,"invalid publicKey length"),f=u(a),n.push(f),_=m(n,_,"privateKey");var x,k=0|t._crypto_box_secretkeybytes();_.length!==k&&b(n,"invalid privateKey length"),x=u(_),n.push(x);var S=new l(h-t._crypto_box_macbytes()|0),T=S.address;if(n.push(T),0==(0|t._crypto_box_open_easy(T,c,h,0,y,f,x))){var w=p(S,s);return v(n),w}g(n,"incorrect key pair for the given ciphertext");}function re(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"ciphertext")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_box_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"sharedKey");var y,d=0|t._crypto_box_beforenmbytes();a.length!==d&&b(s,"invalid sharedKey length"),y=u(a),s.push(y);var f=new l(c-t._crypto_box_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_box_open_easy_afternm(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,"incorrect secret key for the given ciphertext");}function te(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"publicKey");var c,o=0|t._crypto_box_publickeybytes();r.length!==o&&b(_,"invalid publicKey length"),c=u(r),_.push(c);var h=new l(n+t._crypto_box_sealbytes()|0),y=h.address;if(_.push(y),0==(0|t._crypto_box_seal(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function ae(e,r,a,_){var s=[];i(_),e=m(s,e,"ciphertext");var n,c=t._crypto_box_sealbytes(),o=e.length;o<c&&b(s,"ciphertext is too short"),n=u(e),s.push(n),r=m(s,r,"publicKey");var h,y=0|t._crypto_box_publickeybytes();r.length!==y&&b(s,"invalid publicKey length"),h=u(r),s.push(h),a=m(s,a,"privateKey");var d,f=0|t._crypto_box_secretkeybytes();a.length!==f&&b(s,"invalid privateKey length"),d=u(a),s.push(d);var E=new l(o-t._crypto_box_sealbytes()|0),x=E.address;if(s.push(x),0==(0|t._crypto_box_seal_open(x,n,o,0,h,d))){var k=p(E,_);return v(s),k}g(s,"incorrect key pair for the given ciphertext");}function _e(e,r){var a=[];i(r),e=m(a,e,"seed");var _,s=0|t._crypto_box_seedbytes();e.length!==s&&b(a,"invalid seed length"),_=u(e),a.push(_);var n=new l(0|t._crypto_box_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_box_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_box_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:"x25519"};return v(a),y}g(a,"invalid usage");}function se(e,r,a){var _=[];i(a),e=m(_,e,"p");var s,n=0|t._crypto_core_ed25519_bytes();e.length!==n&&b(_,"invalid p length"),s=u(e),_.push(s),r=m(_,r,"q");var c,o=0|t._crypto_core_ed25519_bytes();r.length!==o&&b(_,"invalid q length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ed25519_add(y,s,c))){var d=p(h,a);return v(_),d}g(_,"input is an invalid element");}function ne(e,r){var a=[];i(r);var _=u(e=m(a,e,"r"));e.length,a.push(_);var s=new l(0|t._crypto_core_ed25519_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ed25519_from_hash(n,_))){var c=p(s,r);return v(a),c}g(a,"invalid usage");}function ce(e,r){var a=[];i(r);var _=u(e=m(a,e,"r"));e.length,a.push(_);var s=new l(0|t._crypto_core_ed25519_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ed25519_from_uniform(n,_))){var c=p(s,r);return v(a),c}g(a,"invalid usage");}function oe(e,r){var a=[];i(r),e=m(a,e,"repr");var _,s=0|t._crypto_core_ed25519_bytes();e.length!==s&&b(a,"invalid repr length"),_=u(e),a.push(_);var n=1==(0|t._crypto_core_ed25519_is_valid_point(_));return v(a),n}function he(e){var r=[];i(e);var a=new l(0|t._crypto_core_ed25519_bytes()),_=a.address;r.push(_),t._crypto_core_ed25519_random(_);var s=p(a,e);return v(r),s}function pe(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_add(y,s,c);var d=p(h,a);return v(_),d}function ye(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_complement(c,_);var o=p(n,r);return v(a),o}function ie(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_core_ed25519_scalar_invert(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid reciprocate");}function le(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_mul(y,s,c);var d=p(h,a);return v(_),d}function ue(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_negate(c,_);var o=p(n,r);return v(a),o}function de(e){var r=[];i(e);var a=new l(0|t._crypto_core_ed25519_scalarbytes()),_=a.address;r.push(_),t._crypto_core_ed25519_scalar_random(_);var s=p(a,e);return v(r),s}function ve(e,r){var a=[];i(r),e=m(a,e,"sample");var _,s=0|t._crypto_core_ed25519_nonreducedscalarbytes();e.length!==s&&b(a,"invalid sample length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_reduce(c,_);var o=p(n,r);return v(a),o}function ge(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_sub(y,s,c);var d=p(h,a);return v(_),d}function be(e,r,a){var _=[];i(a),e=m(_,e,"p");var s,n=0|t._crypto_core_ed25519_bytes();e.length!==n&&b(_,"invalid p length"),s=u(e),_.push(s),r=m(_,r,"q");var c,o=0|t._crypto_core_ed25519_bytes();r.length!==o&&b(_,"invalid q length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ed25519_sub(y,s,c))){var d=p(h,a);return v(_),d}g(_,"input is an invalid element");}function fe(e,r,a){var _=[];i(a),e=m(_,e,"p");var s,n=0|t._crypto_core_ristretto255_bytes();e.length!==n&&b(_,"invalid p length"),s=u(e),_.push(s),r=m(_,r,"q");var c,o=0|t._crypto_core_ristretto255_bytes();r.length!==o&&b(_,"invalid q length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ristretto255_add(y,s,c))){var d=p(h,a);return v(_),d}g(_,"input is an invalid element");}function me(e,r){var a=[];i(r);var _=u(e=m(a,e,"r"));e.length,a.push(_);var s=new l(0|t._crypto_core_ristretto255_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ristretto255_from_hash(n,_))){var c=p(s,r);return v(a),c}g(a,"invalid usage");}function Ee(e,r){var a=[];i(r),e=m(a,e,"repr");var _,s=0|t._crypto_core_ristretto255_bytes();e.length!==s&&b(a,"invalid repr length"),_=u(e),a.push(_);var n=1==(0|t._crypto_core_ristretto255_is_valid_point(_));return v(a),n}function xe(e){var r=[];i(e);var a=new l(0|t._crypto_core_ristretto255_bytes()),_=a.address;r.push(_),t._crypto_core_ristretto255_random(_);var s=p(a,e);return v(r),s}function ke(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_add(y,s,c);var d=p(h,a);return v(_),d}function Se(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_complement(c,_);var o=p(n,r);return v(a),o}function Te(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_core_ristretto255_scalar_invert(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid reciprocate");}function we(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_mul(y,s,c);var d=p(h,a);return v(_),d}function Ye(e,r){var a=[];i(r),e=m(a,e,"s");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,"invalid s length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_negate(c,_);var o=p(n,r);return v(a),o}function Be(e){var r=[];i(e);var a=new l(0|t._crypto_core_ristretto255_scalarbytes()),_=a.address;r.push(_),t._crypto_core_ristretto255_scalar_random(_);var s=p(a,e);return v(r),s}function Ae(e,r){var a=[];i(r),e=m(a,e,"sample");var _,s=0|t._crypto_core_ristretto255_nonreducedscalarbytes();e.length!==s&&b(a,"invalid sample length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_reduce(c,_);var o=p(n,r);return v(a),o}function Ke(e,r,a){var _=[];i(a),e=m(_,e,"x");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,"invalid x length"),s=u(e),_.push(s),r=m(_,r,"y");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,"invalid y length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_sub(y,s,c);var d=p(h,a);return v(_),d}function Me(e,r,a){var _=[];i(a),e=m(_,e,"p");var s,n=0|t._crypto_core_ristretto255_bytes();e.length!==n&&b(_,"invalid p length"),s=u(e),_.push(s),r=m(_,r,"q");var c,o=0|t._crypto_core_ristretto255_bytes();r.length!==o&&b(_,"invalid q length"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ristretto255_sub(y,s,c))){var d=p(h,a);return v(_),d}g(_,"input is an invalid element");}function Ie(e,r,a,_){var s=[];i(_),f(s,e,"hash_length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(s,"hash_length must be an unsigned integer");var n=u(r=m(s,r,"message")),c=r.length;s.push(n);var o=null,h=0;null!=a&&(o=u(a=m(s,a,"key")),h=a.length,s.push(o));var y=new l(e|=0),d=y.address;if(s.push(d),0==(0|t._crypto_generichash(d,e,n,c,0,o,h))){var E=p(y,_);return v(s),E}g(s,"invalid usage");}function Ne(e,r,a,_,s){var n=[];i(s),f(n,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&b(n,"subkey_len must be an unsigned integer");var c=null,o=0;null!=r&&(c=u(r=m(n,r,"key")),o=r.length,n.push(c)),a=m(n,a,"id");var h,y=0|t._crypto_generichash_blake2b_saltbytes();a.length!==y&&b(n,"invalid id length"),h=u(a),n.push(h),_=m(n,_,"ctx");var d,E=0|t._crypto_generichash_blake2b_personalbytes();_.length!==E&&b(n,"invalid ctx length"),d=u(_),n.push(d);var x=new l(0|e),k=x.address;if(n.push(k),0==(0|t._crypto_generichash_blake2b_salt_personal(k,e,null,0,0,c,o,h,d))){var S=p(x,s);return v(n),S}g(n,"invalid usage");}function Le(e,r,a){var _=[];i(a),f(_,e,"state_address"),f(_,r,"hash_length"),("number"!=typeof r||(0|r)!==r||r<0)&&b(_,"hash_length must be an unsigned integer");var s=new l(r|=0),n=s.address;if(_.push(n),0==(0|t._crypto_generichash_final(e,n,r))){var c=(t._free(e),p(s,a));return v(_),c}g(_,"invalid usage");}function Ue(e,r,a){var _=[];i(a);var s=null,n=0;null!=e&&(s=u(e=m(_,e,"key")),n=e.length,_.push(s)),f(_,r,"hash_length"),("number"!=typeof r||(0|r)!==r||r<0)&&b(_,"hash_length must be an unsigned integer");var c=new l(357).address;if(0==(0|t._crypto_generichash_init(c,s,n,r))){var o=c;return v(_),o}g(_,"invalid usage");}function Oe(e){var r=[];i(e);var a=new l(0|t._crypto_generichash_keybytes()),_=a.address;r.push(_),t._crypto_generichash_keygen(_);var s=p(a,e);return v(r),s}function Ce(e,r,a){var _=[];i(a),f(_,e,"state_address");var s=u(r=m(_,r,"message_chunk")),n=r.length;_.push(s),0!=(0|t._crypto_generichash_update(e,s,n))&&g(_,"invalid usage"),v(_);}function Re(e,r){var a=[];i(r);var _=u(e=m(a,e,"message")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,"invalid usage");}function Pe(e,r){var a=[];i(r);var _=u(e=m(a,e,"message")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_sha256_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash_sha256(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,"invalid usage");}function Ge(e,r){var a=[];i(r),f(a,e,"state_address");var _=new l(0|t._crypto_hash_sha256_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_hash_sha256_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,"invalid usage");}function Xe(e){var r=[];i(e);var a=new l(104).address;if(0==(0|t._crypto_hash_sha256_init(a))){var _=a;return v(r),_}g(r,"invalid usage");}function De(e,r,a){var _=[];i(a),f(_,e,"state_address");var s=u(r=m(_,r,"message_chunk")),n=r.length;_.push(s),0!=(0|t._crypto_hash_sha256_update(e,s,n))&&g(_,"invalid usage"),v(_);}function Fe(e,r){var a=[];i(r);var _=u(e=m(a,e,"message")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_sha512_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash_sha512(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,"invalid usage");}function Ve(e,r){var a=[];i(r),f(a,e,"state_address");var _=new l(0|t._crypto_hash_sha512_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_hash_sha512_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,"invalid usage");}function He(e){var r=[];i(e);var a=new l(208).address;if(0==(0|t._crypto_hash_sha512_init(a))){var _=a;return v(r),_}g(r,"invalid usage");}function qe(e,r,a){var _=[];i(a),f(_,e,"state_address");var s=u(r=m(_,r,"message_chunk")),n=r.length;_.push(s),0!=(0|t._crypto_hash_sha512_update(e,s,n))&&g(_,"invalid usage"),v(_);}function je(e,r,a,s,n){var c=[];i(n),f(c,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&b(c,"subkey_len must be an unsigned integer"),f(c,r,"subkey_id"),("number"!=typeof r||(0|r)!==r||r<0)&&b(c,"subkey_id must be an unsigned integer"),"string"!=typeof a&&b(c,"ctx must be a string"),a=_(a+"\0"),null!=h&&a.length-1!==h&&b(c,"invalid ctx length");var o=u(a),h=a.length-1;c.push(o),s=m(c,s,"key");var y,d=0|t._crypto_kdf_keybytes();s.length!==d&&b(c,"invalid key length"),y=u(s),c.push(y);var g=new l(0|e),E=g.address;c.push(E),t._crypto_kdf_derive_from_key(E,e,r,r>>>24>>>8,o,y);var x=p(g,n);return v(c),x}function ze(e){var r=[];i(e);var a=new l(0|t._crypto_kdf_keybytes()),_=a.address;r.push(_),t._crypto_kdf_keygen(_);var s=p(a,e);return v(r),s}function We(e,r,a,_){var s=[];i(_),e=m(s,e,"clientPublicKey");var n,c=0|t._crypto_kx_publickeybytes();e.length!==c&&b(s,"invalid clientPublicKey length"),n=u(e),s.push(n),r=m(s,r,"clientSecretKey");var o,h=0|t._crypto_kx_secretkeybytes();r.length!==h&&b(s,"invalid clientSecretKey length"),o=u(r),s.push(o),a=m(s,a,"serverPublicKey");var y,d=0|t._crypto_kx_publickeybytes();a.length!==d&&b(s,"invalid serverPublicKey length"),y=u(a),s.push(y);var f=new l(0|t._crypto_kx_sessionkeybytes()),E=f.address;s.push(E);var x=new l(0|t._crypto_kx_sessionkeybytes()),k=x.address;if(s.push(k),0==(0|t._crypto_kx_client_session_keys(E,k,n,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(s),S}g(s,"invalid usage");}function Je(e){var r=[];i(e);var a=new l(0|t._crypto_kx_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_kx_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_kx_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:"x25519"};return v(r),c}g(r,"internal error");}function Qe(e,r){var a=[];i(r),e=m(a,e,"seed");var _,s=0|t._crypto_kx_seedbytes();e.length!==s&&b(a,"invalid seed length"),_=u(e),a.push(_);var n=new l(0|t._crypto_kx_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_kx_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_kx_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:"x25519"};return v(a),y}g(a,"internal error");}function Ze(e,r,a,_){var s=[];i(_),e=m(s,e,"serverPublicKey");var n,c=0|t._crypto_kx_publickeybytes();e.length!==c&&b(s,"invalid serverPublicKey length"),n=u(e),s.push(n),r=m(s,r,"serverSecretKey");var o,h=0|t._crypto_kx_secretkeybytes();r.length!==h&&b(s,"invalid serverSecretKey length"),o=u(r),s.push(o),a=m(s,a,"clientPublicKey");var y,d=0|t._crypto_kx_publickeybytes();a.length!==d&&b(s,"invalid clientPublicKey length"),y=u(a),s.push(y);var f=new l(0|t._crypto_kx_sessionkeybytes()),E=f.address;s.push(E);var x=new l(0|t._crypto_kx_sessionkeybytes()),k=x.address;if(s.push(k),0==(0|t._crypto_kx_server_session_keys(E,k,n,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(s),S}g(s,"invalid usage");}function $e(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_onetimeauth_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_onetimeauth_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_onetimeauth(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function er(e,r){var a=[];i(r),f(a,e,"state_address");var _=new l(0|t._crypto_onetimeauth_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_onetimeauth_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,"invalid usage");}function rr(e,r){var a=[];i(r);var _=null;null!=e&&(_=u(e=m(a,e,"key")),e.length,a.push(_));var s=new l(144).address;if(0==(0|t._crypto_onetimeauth_init(s,_))){var n=s;return v(a),n}g(a,"invalid usage");}function tr(e){var r=[];i(e);var a=new l(0|t._crypto_onetimeauth_keybytes()),_=a.address;r.push(_),t._crypto_onetimeauth_keygen(_);var s=p(a,e);return v(r),s}function ar(e,r,a){var _=[];i(a),f(_,e,"state_address");var s=u(r=m(_,r,"message_chunk")),n=r.length;_.push(s),0!=(0|t._crypto_onetimeauth_update(e,s,n))&&g(_,"invalid usage"),v(_);}function _r(e,r,a){var _=[];e=m(_,e,"hash");var s,n=0|t._crypto_onetimeauth_bytes();e.length!==n&&b(_,"invalid hash length"),s=u(e),_.push(s);var c=u(r=m(_,r,"message")),o=r.length;_.push(c),a=m(_,a,"key");var h,p=0|t._crypto_onetimeauth_keybytes();a.length!==p&&b(_,"invalid key length"),h=u(a),_.push(h);var y=0==(0|t._crypto_onetimeauth_verify(s,c,o,0,h));return v(_),y}function sr(e,r,a,_,s,n,c){var o=[];i(c),f(o,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(o,"keyLength must be an unsigned integer");var h=u(r=m(o,r,"password")),y=r.length;o.push(h),a=m(o,a,"salt");var d,E=0|t._crypto_pwhash_saltbytes();a.length!==E&&b(o,"invalid salt length"),d=u(a),o.push(d),f(o,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&b(o,"opsLimit must be an unsigned integer"),f(o,s,"memLimit"),("number"!=typeof s||(0|s)!==s||s<0)&&b(o,"memLimit must be an unsigned integer"),f(o,n,"algorithm"),("number"!=typeof n||(0|n)!==n||n<0)&&b(o,"algorithm must be an unsigned integer");var x=new l(0|e),k=x.address;if(o.push(k),0==(0|t._crypto_pwhash(k,e,0,h,y,0,d,_,0,s,n))){var S=p(x,c);return v(o),S}g(o,"invalid usage");}function nr(e,r,a,_,s,n){var c=[];i(n),f(c,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(c,"keyLength must be an unsigned integer");var o=u(r=m(c,r,"password")),h=r.length;c.push(o),a=m(c,a,"salt");var y,d=0|t._crypto_pwhash_scryptsalsa208sha256_saltbytes();a.length!==d&&b(c,"invalid salt length"),y=u(a),c.push(y),f(c,_,"opsLimit"),("number"!=typeof _||(0|_)!==_||_<0)&&b(c,"opsLimit must be an unsigned integer"),f(c,s,"memLimit"),("number"!=typeof s||(0|s)!==s||s<0)&&b(c,"memLimit must be an unsigned integer");var E=new l(0|e),x=E.address;if(c.push(x),0==(0|t._crypto_pwhash_scryptsalsa208sha256(x,e,0,o,h,0,y,_,0,s))){var k=p(E,n);return v(c),k}g(c,"invalid usage");}function cr(e,r,a,_,s,n,c){var o=[];i(c);var h=u(e=m(o,e,"password")),y=e.length;o.push(h);var d=u(r=m(o,r,"salt")),E=r.length;o.push(d),f(o,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(o,"opsLimit must be an unsigned integer"),f(o,_,"r"),("number"!=typeof _||(0|_)!==_||_<0)&&b(o,"r must be an unsigned integer"),f(o,s,"p"),("number"!=typeof s||(0|s)!==s||s<0)&&b(o,"p must be an unsigned integer"),f(o,n,"keyLength"),("number"!=typeof n||(0|n)!==n||n<0)&&b(o,"keyLength must be an unsigned integer");var x=new l(0|n),k=x.address;if(o.push(k),0==(0|t._crypto_pwhash_scryptsalsa208sha256_ll(h,y,d,E,a,0,_,s,k,n))){var S=p(x,c);return v(o),S}g(o,"invalid usage");}function or(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"password")),c=e.length;s.push(n),f(s,r,"opsLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&b(s,"opsLimit must be an unsigned integer"),f(s,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"memLimit must be an unsigned integer");var o=new l(0|t._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;if(s.push(o),0==(0|t._crypto_pwhash_scryptsalsa208sha256_str(o,n,c,0,r,0,a))){var h=t.UTF8ToString(o);return v(s),h}g(s,"invalid usage");}function hr(e,r,a){var s=[];i(a),"string"!=typeof e&&b(s,"hashed_password must be a string"),e=_(e+"\0"),null!=c&&e.length-1!==c&&b(s,"invalid hashed_password length");var n=u(e),c=e.length-1;s.push(n);var o=u(r=m(s,r,"password")),h=r.length;s.push(o);var p=0==(0|t._crypto_pwhash_scryptsalsa208sha256_str_verify(n,o,h,0));return v(s),p}function pr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"password")),c=e.length;s.push(n),f(s,r,"opsLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&b(s,"opsLimit must be an unsigned integer"),f(s,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(s,"memLimit must be an unsigned integer");var o=new l(0|t._crypto_pwhash_strbytes()).address;if(s.push(o),0==(0|t._crypto_pwhash_str(o,n,c,0,r,0,a))){var h=t.UTF8ToString(o);return v(s),h}g(s,"invalid usage");}function yr(e,r,a,s){var n=[];i(s),"string"!=typeof e&&b(n,"hashed_password must be a string"),e=_(e+"\0"),null!=o&&e.length-1!==o&&b(n,"invalid hashed_password length");var c=u(e),o=e.length-1;n.push(c),f(n,r,"opsLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&b(n,"opsLimit must be an unsigned integer"),f(n,a,"memLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"memLimit must be an unsigned integer");var h=0!=(0|t._crypto_pwhash_str_needs_rehash(c,r,0,a));return v(n),h}function ir(e,r,a){var s=[];i(a),"string"!=typeof e&&b(s,"hashed_password must be a string"),e=_(e+"\0"),null!=c&&e.length-1!==c&&b(s,"invalid hashed_password length");var n=u(e),c=e.length-1;s.push(n);var o=u(r=m(s,r,"password")),h=r.length;s.push(o);var p=0==(0|t._crypto_pwhash_str_verify(n,o,h,0));return v(s),p}function lr(e,r,a){var _=[];i(a),e=m(_,e,"privateKey");var s,n=0|t._crypto_scalarmult_scalarbytes();e.length!==n&&b(_,"invalid privateKey length"),s=u(e),_.push(s),r=m(_,r,"publicKey");var c,o=0|t._crypto_scalarmult_bytes();r.length!==o&&b(_,"invalid publicKey length"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult(y,s,c))){var d=p(h,a);return v(_),d}g(_,"weak public key");}function ur(e,r){var a=[];i(r),e=m(a,e,"privateKey");var _,s=0|t._crypto_scalarmult_scalarbytes();e.length!==s&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_base(c,_))){var o=p(n,r);return v(a),o}g(a,"unknown error");}function dr(e,r,a){var _=[];i(a),e=m(_,e,"n");var s,n=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&b(_,"invalid n length"),s=u(e),_.push(s),r=m(_,r,"p");var c,o=0|t._crypto_scalarmult_ed25519_bytes();r.length!==o&&b(_,"invalid p length"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ed25519(y,s,c))){var d=p(h,a);return v(_),d}g(_,"invalid point or scalar is 0");}function vr(e,r){var a=[];i(r),e=m(a,e,"scalar");var _,s=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&b(a,"invalid scalar length"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_ed25519_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ed25519_base(c,_))){var o=p(n,r);return v(a),o}g(a,"scalar is 0");}function gr(e,r){var a=[];i(r),e=m(a,e,"scalar");var _,s=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&b(a,"invalid scalar length"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_ed25519_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ed25519_base_noclamp(c,_))){var o=p(n,r);return v(a),o}g(a,"scalar is 0");}function br(e,r,a){var _=[];i(a),e=m(_,e,"n");var s,n=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&b(_,"invalid n length"),s=u(e),_.push(s),r=m(_,r,"p");var c,o=0|t._crypto_scalarmult_ed25519_bytes();r.length!==o&&b(_,"invalid p length"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ed25519_noclamp(y,s,c))){var d=p(h,a);return v(_),d}g(_,"invalid point or scalar is 0");}function fr(e,r,a){var _=[];i(a),e=m(_,e,"scalar");var s,n=0|t._crypto_scalarmult_ristretto255_scalarbytes();e.length!==n&&b(_,"invalid scalar length"),s=u(e),_.push(s),r=m(_,r,"element");var c,o=0|t._crypto_scalarmult_ristretto255_bytes();r.length!==o&&b(_,"invalid element length"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ristretto255(y,s,c))){var d=p(h,a);return v(_),d}g(_,"result is identity element");}function mr(e,r){var a=[];i(r),e=m(a,e,"scalar");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,"invalid scalar length"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ristretto255_base(c,_))){var o=p(n,r);return v(a),o}g(a,"scalar is 0");}function Er(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_secretbox_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"key");var y,d=0|t._crypto_secretbox_keybytes();a.length!==d&&b(s,"invalid key length"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;s.push(E);var x=new l(0|t._crypto_secretbox_macbytes()),k=x.address;if(s.push(k),0==(0|t._crypto_secretbox_detached(E,k,n,c,0,o,y))){var S=p({mac:x,cipher:f},_);return v(s),S}g(s,"invalid usage");}function xr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_secretbox_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"key");var y,d=0|t._crypto_secretbox_keybytes();a.length!==d&&b(s,"invalid key length"),y=u(a),s.push(y);var f=new l(c+t._crypto_secretbox_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_secretbox_easy(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,"invalid usage");}function kr(e){var r=[];i(e);var a=new l(0|t._crypto_secretbox_keybytes()),_=a.address;r.push(_),t._crypto_secretbox_keygen(_);var s=p(a,e);return v(r),s}function Sr(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"ciphertext")),o=e.length;n.push(c),r=m(n,r,"mac");var h,y=0|t._crypto_secretbox_macbytes();r.length!==y&&b(n,"invalid mac length"),h=u(r),n.push(h),a=m(n,a,"nonce");var d,f=0|t._crypto_secretbox_noncebytes();a.length!==f&&b(n,"invalid nonce length"),d=u(a),n.push(d),_=m(n,_,"key");var E,x=0|t._crypto_secretbox_keybytes();_.length!==x&&b(n,"invalid key length"),E=u(_),n.push(E);var k=new l(0|o),S=k.address;if(n.push(S),0==(0|t._crypto_secretbox_open_detached(S,c,h,o,0,d,E))){var T=p(k,s);return v(n),T}g(n,"wrong secret key for the given ciphertext");}function Tr(e,r,a,_){var s=[];i(_),e=m(s,e,"ciphertext");var n,c=t._crypto_secretbox_macbytes(),o=e.length;o<c&&b(s,"ciphertext is too short"),n=u(e),s.push(n),r=m(s,r,"nonce");var h,y=0|t._crypto_secretbox_noncebytes();r.length!==y&&b(s,"invalid nonce length"),h=u(r),s.push(h),a=m(s,a,"key");var d,f=0|t._crypto_secretbox_keybytes();a.length!==f&&b(s,"invalid key length"),d=u(a),s.push(d);var E=new l(o-t._crypto_secretbox_macbytes()|0),x=E.address;if(s.push(x),0==(0|t._crypto_secretbox_open_easy(x,n,o,0,h,d))){var k=p(E,_);return v(s),k}g(s,"wrong secret key for the given ciphertext");}function wr(e,r,a){var _=[];i(a),e=m(_,e,"header");var s,n=0|t._crypto_secretstream_xchacha20poly1305_headerbytes();e.length!==n&&b(_,"invalid header length"),s=u(e),_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_secretstream_xchacha20poly1305_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(52).address;if(0==(0|t._crypto_secretstream_xchacha20poly1305_init_pull(h,s,c))){var p=h;return v(_),p}g(_,"invalid usage");}function Yr(e,r){var a=[];i(r),e=m(a,e,"key");var _,s=0|t._crypto_secretstream_xchacha20poly1305_keybytes();e.length!==s&&b(a,"invalid key length"),_=u(e),a.push(_);var n=new l(52).address,c=new l(0|t._crypto_secretstream_xchacha20poly1305_headerbytes()),o=c.address;if(a.push(o),0==(0|t._crypto_secretstream_xchacha20poly1305_init_push(n,o,_))){var h={state:n,header:p(c,r)};return v(a),h}g(a,"invalid usage");}function Br(e){var r=[];i(e);var a=new l(0|t._crypto_secretstream_xchacha20poly1305_keybytes()),_=a.address;r.push(_),t._crypto_secretstream_xchacha20poly1305_keygen(_);var s=p(a,e);return v(r),s}function Ar(e,r,a,_){var s=[];i(_),f(s,e,"state_address"),r=m(s,r,"cipher");var n,c=t._crypto_secretstream_xchacha20poly1305_abytes(),o=r.length;o<c&&b(s,"cipher is too short"),n=u(r),s.push(n);var h=null,y=0;null!=a&&(h=u(a=m(s,a,"ad")),y=a.length,s.push(h));var g=new l(o-t._crypto_secretstream_xchacha20poly1305_abytes()|0),E=g.address;s.push(E);var x,k=(x=d(1),s.push(x),(k=0===t._crypto_secretstream_xchacha20poly1305_pull(e,E,0,x,n,o,0,h,y)&&{tag:t.HEAPU8[x],message:g})&&{message:p(k.message,_),tag:k.tag});return v(s),k}function Kr(e,r,a,_,s){var n=[];i(s),f(n,e,"state_address");var c=u(r=m(n,r,"message_chunk")),o=r.length;n.push(c);var h=null,y=0;null!=a&&(h=u(a=m(n,a,"ad")),y=a.length,n.push(h)),f(n,_,"tag"),("number"!=typeof _||(0|_)!==_||_<0)&&b(n,"tag must be an unsigned integer");var d=new l(o+t._crypto_secretstream_xchacha20poly1305_abytes()|0),E=d.address;if(n.push(E),0==(0|t._crypto_secretstream_xchacha20poly1305_push(e,E,0,c,o,0,h,y,0,_))){var x=p(d,s);return v(n),x}g(n,"invalid usage");}function Mr(e,r){var a=[];return i(r),f(a,e,"state_address"),t._crypto_secretstream_xchacha20poly1305_rekey(e),v(a),!0}function Ir(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_shorthash_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_shorthash_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_shorthash(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function Nr(e){var r=[];i(e);var a=new l(0|t._crypto_shorthash_keybytes()),_=a.address;r.push(_),t._crypto_shorthash_keygen(_);var s=p(a,e);return v(r),s}function Lr(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"key");var c,o=0|t._crypto_shorthash_siphashx24_keybytes();r.length!==o&&b(_,"invalid key length"),c=u(r),_.push(c);var h=new l(0|t._crypto_shorthash_siphashx24_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_shorthash_siphashx24(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function Ur(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"privateKey");var c,o=0|t._crypto_sign_secretkeybytes();r.length!==o&&b(_,"invalid privateKey length"),c=u(r),_.push(c);var h=new l(e.length+t._crypto_sign_bytes()|0),y=h.address;if(_.push(y),0==(0|t._crypto_sign(y,null,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function Or(e,r,a){var _=[];i(a);var s=u(e=m(_,e,"message")),n=e.length;_.push(s),r=m(_,r,"privateKey");var c,o=0|t._crypto_sign_secretkeybytes();r.length!==o&&b(_,"invalid privateKey length"),c=u(r),_.push(c);var h=new l(0|t._crypto_sign_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_sign_detached(y,null,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,"invalid usage");}function Cr(e,r){var a=[];i(r),e=m(a,e,"edPk");var _,s=0|t._crypto_sign_publickeybytes();e.length!==s&&b(a,"invalid edPk length"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_pk_to_curve25519(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid key");}function Rr(e,r){var a=[];i(r),e=m(a,e,"edSk");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,"invalid edSk length"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_curve25519(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid key");}function Pr(e,r){var a=[];i(r),e=m(a,e,"privateKey");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_publickeybytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_pk(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid key");}function Gr(e,r){var a=[];i(r),e=m(a,e,"privateKey");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,"invalid privateKey length"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_seedbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_seed(c,_))){var o=p(n,r);return v(a),o}g(a,"invalid key");}function Xr(e,r,a){var _=[];i(a),f(_,e,"state_address"),r=m(_,r,"privateKey");var s,n=0|t._crypto_sign_secretkeybytes();r.length!==n&&b(_,"invalid privateKey length"),s=u(r),_.push(s);var c=new l(0|t._crypto_sign_bytes()),o=c.address;if(_.push(o),0==(0|t._crypto_sign_final_create(e,o,null,s))){var h=(t._free(e),p(c,a));return v(_),h}g(_,"invalid usage");}function Dr(e,r,a,_){var s=[];i(_),f(s,e,"state_address"),r=m(s,r,"signature");var n,c=0|t._crypto_sign_bytes();r.length!==c&&b(s,"invalid signature length"),n=u(r),s.push(n),a=m(s,a,"publicKey");var o,h=0|t._crypto_sign_publickeybytes();a.length!==h&&b(s,"invalid publicKey length"),o=u(a),s.push(o);var p=0==(0|t._crypto_sign_final_verify(e,n,o));return v(s),p}function Fr(e){var r=[];i(e);var a=new l(208).address;if(0==(0|t._crypto_sign_init(a))){var _=a;return v(r),_}g(r,"internal error");}function Vr(e){var r=[];i(e);var a=new l(0|t._crypto_sign_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_sign_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_sign_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:"ed25519"};return v(r),c}g(r,"internal error");}function Hr(e,r,a){var _=[];i(a),e=m(_,e,"signedMessage");var s,n=t._crypto_sign_bytes(),c=e.length;c<n&&b(_,"signedMessage is too short"),s=u(e),_.push(s),r=m(_,r,"publicKey");var o,h=0|t._crypto_sign_publickeybytes();r.length!==h&&b(_,"invalid publicKey length"),o=u(r),_.push(o);var y=new l(c-t._crypto_sign_bytes()|0),d=y.address;if(_.push(d),0==(0|t._crypto_sign_open(d,null,s,c,0,o))){var f=p(y,a);return v(_),f}g(_,"incorrect signature for the given public key");}function qr(e,r){var a=[];i(r),e=m(a,e,"seed");var _,s=0|t._crypto_sign_seedbytes();e.length!==s&&b(a,"invalid seed length"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_sign_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_sign_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:"ed25519"};return v(a),y}g(a,"invalid usage");}function jr(e,r,a){var _=[];i(a),f(_,e,"state_address");var s=u(r=m(_,r,"message_chunk")),n=r.length;_.push(s),0!=(0|t._crypto_sign_update(e,s,n))&&g(_,"invalid usage"),v(_);}function zr(e,r,a){var _=[];e=m(_,e,"signature");var s,n=0|t._crypto_sign_bytes();e.length!==n&&b(_,"invalid signature length"),s=u(e),_.push(s);var c=u(r=m(_,r,"message")),o=r.length;_.push(c),a=m(_,a,"publicKey");var h,p=0|t._crypto_sign_publickeybytes();a.length!==p&&b(_,"invalid publicKey length"),h=u(a),_.push(h);var y=0==(0|t._crypto_sign_verify_detached(s,c,o,0,h));return v(_),y}function Wr(e,r,a,_){var s=[];i(_),f(s,e,"outLength"),("number"!=typeof e||(0|e)!==e||e<0)&&b(s,"outLength must be an unsigned integer"),r=m(s,r,"key");var n,c=0|t._crypto_stream_chacha20_keybytes();r.length!==c&&b(s,"invalid key length"),n=u(r),s.push(n),a=m(s,a,"nonce");var o,h=0|t._crypto_stream_chacha20_noncebytes();a.length!==h&&b(s,"invalid nonce length"),o=u(a),s.push(o);var y=new l(0|e),d=y.address;s.push(d),t._crypto_stream_chacha20(d,e,0,o,n);var g=p(y,_);return v(s),g}function Jr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"input_message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_stream_chacha20_ietf_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"key");var y,d=0|t._crypto_stream_chacha20_ietf_keybytes();a.length!==d&&b(s,"invalid key length"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_chacha20_ietf_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,"invalid usage");}function Qr(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"input_message")),o=e.length;n.push(c),r=m(n,r,"nonce");var h,y=0|t._crypto_stream_chacha20_ietf_noncebytes();r.length!==y&&b(n,"invalid nonce length"),h=u(r),n.push(h),f(n,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"nonce_increment must be an unsigned integer"),_=m(n,_,"key");var d,E=0|t._crypto_stream_chacha20_ietf_keybytes();_.length!==E&&b(n,"invalid key length"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_chacha20_ietf_xor_ic(k,c,o,0,h,a,d)){var S=p(x,s);return v(n),S}g(n,"invalid usage");}function Zr(e){var r=[];i(e);var a=new l(0|t._crypto_stream_chacha20_keybytes()),_=a.address;r.push(_),t._crypto_stream_chacha20_keygen(_);var s=p(a,e);return v(r),s}function $r(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"input_message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_stream_chacha20_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"key");var y,d=0|t._crypto_stream_chacha20_keybytes();a.length!==d&&b(s,"invalid key length"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_chacha20_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,"invalid usage");}function et(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"input_message")),o=e.length;n.push(c),r=m(n,r,"nonce");var h,y=0|t._crypto_stream_chacha20_noncebytes();r.length!==y&&b(n,"invalid nonce length"),h=u(r),n.push(h),f(n,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"nonce_increment must be an unsigned integer"),_=m(n,_,"key");var d,E=0|t._crypto_stream_chacha20_keybytes();_.length!==E&&b(n,"invalid key length"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_chacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,s);return v(n),S}g(n,"invalid usage");}function rt(e){var r=[];i(e);var a=new l(0|t._crypto_stream_keybytes()),_=a.address;r.push(_),t._crypto_stream_keygen(_);var s=p(a,e);return v(r),s}function tt(e){var r=[];i(e);var a=new l(0|t._crypto_stream_xchacha20_keybytes()),_=a.address;r.push(_),t._crypto_stream_xchacha20_keygen(_);var s=p(a,e);return v(r),s}function at(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,"input_message")),c=e.length;s.push(n),r=m(s,r,"nonce");var o,h=0|t._crypto_stream_xchacha20_noncebytes();r.length!==h&&b(s,"invalid nonce length"),o=u(r),s.push(o),a=m(s,a,"key");var y,d=0|t._crypto_stream_xchacha20_keybytes();a.length!==d&&b(s,"invalid key length"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_xchacha20_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,"invalid usage");}function _t(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,"input_message")),o=e.length;n.push(c),r=m(n,r,"nonce");var h,y=0|t._crypto_stream_xchacha20_noncebytes();r.length!==y&&b(n,"invalid nonce length"),h=u(r),n.push(h),f(n,a,"nonce_increment"),("number"!=typeof a||(0|a)!==a||a<0)&&b(n,"nonce_increment must be an unsigned integer"),_=m(n,_,"key");var d,E=0|t._crypto_stream_xchacha20_keybytes();_.length!==E&&b(n,"invalid key length"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_xchacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,s);return v(n),S}g(n,"invalid usage");}function st(e,r){var a=[];i(r),f(a,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(a,"length must be an unsigned integer");var _=new l(0|e),s=_.address;a.push(s),t._randombytes_buf(s,e);var n=p(_,r);return v(a),n}function nt(e,r,a){var _=[];i(a),f(_,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&b(_,"length must be an unsigned integer"),r=m(_,r,"seed");var s,n=0|t._randombytes_seedbytes();r.length!==n&&b(_,"invalid seed length"),s=u(r),_.push(s);var c=new l(0|e),o=c.address;_.push(o),t._randombytes_buf_deterministic(o,e,s);var h=p(c,a);return v(_),h}function ct(e){i(e),t._randombytes_close();}function ot(e){i(e);var r=t._randombytes_random()>>>0;return v([]),r}function ht(e,r){var a=[];i(r);for(var _=t._malloc(24),s=0;s<6;s++)t.setValue(_+4*s,t.Runtime.addFunction(e[["implementation_name","random","stir","uniform","buf","close"][s]]),"i32");0!=(0|t._randombytes_set_implementation(_))&&g(a,"unsupported implementation"),v(a);}function pt(e){i(e),t._randombytes_stir();}function yt(e,r){var a=[];i(r),f(a,e,"upper_bound"),("number"!=typeof e||(0|e)!==e||e<0)&&b(a,"upper_bound must be an unsigned integer");var _=t._randombytes_uniform(e)>>>0;return v(a),_}function it(){var e=t._sodium_version_string(),r=t.UTF8ToString(e);return v([]),r}return l.prototype.to_Uint8Array=function(){var e=new Uint8Array(this.length);return e.set(t.HEAPU8.subarray(this.address,this.address+this.length)),e},e.add=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can added");var t=e.length,a=0,_=0;if(r.length!=e.length)throw new TypeError("Arguments must have the same length");for(_=0;_<t;_++)a>>=8,a+=e[_]+r[_],e[_]=255&a;},e.base64_variants=c,e.compare=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==r.length)throw new TypeError("Only instances of identical length can be compared");for(var t=0,a=1,_=e.length;_-- >0;)t|=r[_]-e[_]>>8&a,a&=(r[_]^e[_])-1>>8;return t+t+a-1},e.from_base64=function(e,r){r=o(r);var a,_=[],s=new l(3*(e=m(_,e,"input")).length/4),n=u(e),c=d(4),h=d(4);return _.push(n),_.push(s.address),_.push(s.result_bin_len_p),_.push(s.b64_end_p),0!==t._sodium_base642bin(s.address,s.length,n,e.length,0,c,h,r)&&g(_,"invalid input"),t.getValue(h,"i32")-n!==e.length&&g(_,"incomplete input"),s.length=t.getValue(c,"i32"),a=s.to_Uint8Array(),v(_),a},e.from_hex=function(e){var r,a=[],_=new l((e=m(a,e,"input")).length/2),s=u(e),n=d(4);return a.push(s),a.push(_.address),a.push(_.hex_end_p),0!==t._sodium_hex2bin(_.address,_.length,s,e.length,0,0,n)&&g(a,"invalid input"),t.getValue(n,"i32")-s!==e.length&&g(a,"incomplete input"),r=_.to_Uint8Array(),v(a),r},e.from_string=_,e.increment=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be incremented");for(var r=256,t=0,a=e.length;t<a;t++)r>>=8,r+=e[t],e[t]=255&r;},e.is_zero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be checked");for(var r=0,t=0,a=e.length;t<a;t++)r|=e[t];return 0===r},e.libsodium=r,e.memcmp=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==r.length)throw new TypeError("Only instances of identical length can be compared");for(var t=0,a=0,_=e.length;a<_;a++)t|=e[a]^r[a];return 0===t},e.memzero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be wiped");for(var r=0,t=e.length;r<t;r++)e[r]=0;},e.output_formats=function(){return ["uint8array","text","hex","base64"]},e.pad=function(e,r){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((r|=0)<=0)throw new Error("block size must be > 0");var a,_=[],s=d(4),n=1,c=0,o=0|e.length,h=new l(o+r);_.push(s),_.push(h.address);for(var p=h.address,y=h.address+o+r;p<y;p++)t.HEAPU8[p]=e[c],c+=n=1&~((65535&((o-=n)>>>48|o>>>32|o>>>16|o))-1>>16);return 0!==t._sodium_pad(s,h.address,e.length,r,h.length)&&g(_,"internal error"),h.length=t.getValue(s,"i32"),a=h.to_Uint8Array(),v(_),a},e.unpad=function(e,r){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((r|=0)<=0)throw new Error("block size must be > 0");var a=[],_=u(e),s=d(4);return a.push(_),a.push(s),0!==t._sodium_unpad(s,_,e.length,r)&&g(a,"unsupported/invalid padding"),e=(e=new Uint8Array(e)).subarray(0,t.getValue(s,"i32")),v(a),e},e.ready=a,e.symbols=function(){return Object.keys(e).sort()},e.to_base64=h,e.to_hex=n,e.to_string=s,e}var t="object"==typeof e.sodium&&"function"==typeof e.sodium.onload?e.sodium.onload:null;"string"!=typeof exports.nodeName?r(exports,require$$0):e.sodium=r(e.commonJsStrict={},e.libsodium),t&&e.sodium.ready.then((function(){t(e.sodium);}));}(commonjsGlobal);
});

var libsodium = createCommonjsModule(function (module, exports) {
// Keep all classes requiring libsodium-js in one file as having multiple
// requiring of the libsodium-wrappers module currently crashes browsers
//
// libsodium.js API: https://gist.github.com/webmaster128/b2dbe6d54d36dd168c9fabf441b9b09c
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;

const libsodium_wrappers_1 = __importDefault(libsodiumWrappers);
function isArgon2idOptions(thing) {
    if (!build$2.isNonNullObject(thing))
        return false;
    if (typeof thing.outputLength !== "number")
        return false;
    if (typeof thing.opsLimit !== "number")
        return false;
    if (typeof thing.memLimitKib !== "number")
        return false;
    return true;
}
exports.isArgon2idOptions = isArgon2idOptions;
class Argon2id {
    static async execute(password, salt, options) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_pwhash(options.outputLength, password, salt, // libsodium only supports 16 byte salts and will throw when you don't respect that
        options.opsLimit, options.memLimitKib * 1024, libsodium_wrappers_1.default.crypto_pwhash_ALG_ARGON2ID13);
    }
}
exports.Argon2id = Argon2id;
class Ed25519Keypair {
    constructor(privkey, pubkey) {
        this.privkey = privkey;
        this.pubkey = pubkey;
    }
    // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`
    static fromLibsodiumPrivkey(libsodiumPrivkey) {
        if (libsodiumPrivkey.length !== 64) {
            throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);
        }
        return new Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));
    }
    toLibsodiumPrivkey() {
        return new Uint8Array([...this.privkey, ...this.pubkey]);
    }
}
exports.Ed25519Keypair = Ed25519Keypair;
class Ed25519 {
    /**
     * Generates a keypair deterministically from a given 32 bytes seed.
     *
     * This seed equals the Ed25519 private key.
     * For implementation details see crypto_sign_seed_keypair in
     * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html
     * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/
     */
    static async makeKeypair(seed) {
        await libsodium_wrappers_1.default.ready;
        const keypair = libsodium_wrappers_1.default.crypto_sign_seed_keypair(seed);
        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);
    }
    static async createSignature(message, keyPair) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());
    }
    static async verifySignature(signature, message, pubkey) {
        await libsodium_wrappers_1.default.ready;
        return libsodium_wrappers_1.default.crypto_sign_verify_detached(signature, message, pubkey);
    }
}
exports.Ed25519 = Ed25519;
/**
 * Nonce length in bytes for all flavours of XChaCha20.
 *
 * @see https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xchacha20#notes
 */
exports.xchacha20NonceLength = 24;
class Xchacha20poly1305Ietf {
    static async encrypt(message, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(message, additionalData, null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
        nonce, key);
    }
    static async decrypt(ciphertext, key, nonce) {
        await libsodium_wrappers_1.default.ready;
        const additionalData = null;
        return libsodium_wrappers_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)
        ciphertext, additionalData, nonce, key);
    }
}
exports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;
//# sourceMappingURL=libsodium.js.map
});

unwrapExports(libsodium);
libsodium.Xchacha20poly1305Ietf;
libsodium.xchacha20NonceLength;
libsodium.Ed25519;
libsodium.Ed25519Keypair;
libsodium.Argon2id;
libsodium.isArgon2idOptions;

var random = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Random = void 0;
class Random {
    /**
     * Returns `count` cryptographically secure random bytes
     */
    static getBytes(count) {
        try {
            const globalObject = typeof window === "object" ? window : self;
            const cryptoApi = typeof globalObject.crypto !== "undefined" ? globalObject.crypto : globalObject.msCrypto;
            const out = new Uint8Array(count);
            cryptoApi.getRandomValues(out);
            return out;
        }
        catch (_a) {
            try {
                // eslint-disable-next-line @typescript-eslint/no-var-requires
                const crypto = crypto__default['default'];
                return new Uint8Array([...crypto.randomBytes(count)]);
            }
            catch (_b) {
                throw new Error("No secure random number generator found");
            }
        }
    }
}
exports.Random = Random;
//# sourceMappingURL=random.js.map
});

unwrapExports(random);
random.Random;

var inherits_browser = createCommonjsModule(function (module) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function () {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
});

var inherits = createCommonjsModule(function (module) {
try {
  var util = util__default['default'];
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = inherits_browser;
}
});

var Buffer$2 = safeBuffer.Buffer;
var Transform = readableStream__default['default'].Transform;


function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer$2.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this);

  this._block = Buffer$2.allocUnsafe(blockSize);
  this._blockSize = blockSize;
  this._blockOffset = 0;
  this._length = [0, 0, 0, 0];

  this._finalized = false;
}

inherits(HashBase, Transform);

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null;
  try {
    this.update(chunk, encoding);
  } catch (err) {
    error = err;
  }

  callback(error);
};

HashBase.prototype._flush = function (callback) {
  var error = null;
  try {
    this.push(this.digest());
  } catch (err) {
    error = err;
  }

  callback(error);
};

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data');
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer$2.isBuffer(data)) data = Buffer$2.from(data, encoding);

  // consume data
  var block = this._block;
  var offset = 0;
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];
    this._update();
    this._blockOffset = 0;
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++];

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry;
    carry = (this._length[j] / 0x0100000000) | 0;
    if (carry > 0) this._length[j] -= 0x0100000000 * carry;
  }

  return this
};

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
};

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true;

  var digest = this._digest();
  if (encoding !== undefined) digest = digest.toString(encoding);

  // reset state
  this._block.fill(0);
  this._blockOffset = 0;
  for (var i = 0; i < 4; ++i) this._length[i] = 0;

  return digest
};

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
};

var hashBase = HashBase;

var Buffer$1 = buffer__default['default'].Buffer;



var ARRAY16 = new Array(16);

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];

function RIPEMD160 () {
  hashBase.call(this, 64);

  // state
  this._a = 0x67452301;
  this._b = 0xefcdab89;
  this._c = 0x98badcfe;
  this._d = 0x10325476;
  this._e = 0xc3d2e1f0;
}

inherits(RIPEMD160, hashBase);

RIPEMD160.prototype._update = function () {
  var words = ARRAY16;
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4);

  var al = this._a | 0;
  var bl = this._b | 0;
  var cl = this._c | 0;
  var dl = this._d | 0;
  var el = this._e | 0;

  var ar = this._a | 0;
  var br = this._b | 0;
  var cr = this._c | 0;
  var dr = this._d | 0;
  var er = this._e | 0;

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl;
    var tr;
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
    }

    al = el;
    el = dl;
    dl = rotl(cl, 10);
    cl = bl;
    bl = tl;

    ar = er;
    er = dr;
    dr = rotl(cr, 10);
    cr = br;
    br = tr;
  }

  // update state
  var t = (this._b + cl + dr) | 0;
  this._b = (this._c + dl + er) | 0;
  this._c = (this._d + el + ar) | 0;
  this._d = (this._e + al + br) | 0;
  this._e = (this._a + bl + cr) | 0;
  this._a = t;
};

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80;
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64);
    this._update();
    this._blockOffset = 0;
  }

  this._block.fill(0, this._blockOffset, 56);
  this._block.writeUInt32LE(this._length[0], 56);
  this._block.writeUInt32LE(this._length[1], 60);
  this._update();

  // produce result
  var buffer = Buffer$1.alloc ? Buffer$1.alloc(20) : new Buffer$1(20);
  buffer.writeInt32LE(this._a, 0);
  buffer.writeInt32LE(this._b, 4);
  buffer.writeInt32LE(this._c, 8);
  buffer.writeInt32LE(this._d, 12);
  buffer.writeInt32LE(this._e, 16);
  return buffer
};

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

var ripemd160 = RIPEMD160;

var ripemd = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ripemd160 = exports.Ripemd160 = void 0;
const ripemd160_1 = __importDefault(ripemd160);
class Ripemd160 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = new ripemd160_1.default();
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update(Buffer.from(data));
        return this;
    }
    digest() {
        return Uint8Array.from(this.impl.digest());
    }
}
exports.Ripemd160 = Ripemd160;
/** Convenience function equivalent to `new Ripemd160(data).digest()` */
function ripemd160$1(data) {
    return new Ripemd160(data).digest();
}
exports.ripemd160 = ripemd160$1;
//# sourceMappingURL=ripemd.js.map
});

var ripemd$1 = unwrapExports(ripemd);
var ripemd_1$1 = ripemd.ripemd160;
var ripemd_2 = ripemd.Ripemd160;

var ripemd$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': ripemd$1,
    __moduleExports: ripemd,
    ripemd160: ripemd_1$1,
    Ripemd160: ripemd_2
});

var bn = createCommonjsModule(function (module) {
(function (module, exports) {

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = buffer__default['default'].Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) ; else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(module, commonjsGlobal);
});

var secp256k1signature = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;
function trimLeadingNullBytes(inData) {
    let numberOfLeadingNullBytes = 0;
    for (const byte of inData) {
        if (byte === 0x00) {
            numberOfLeadingNullBytes++;
        }
        else {
            break;
        }
    }
    return inData.slice(numberOfLeadingNullBytes);
}
const derTagInteger = 0x02;
class Secp256k1Signature {
    constructor(r, s) {
        if (r.length > 32 || r.length === 0 || r[0] === 0x00) {
            throw new Error("Unsigned integer r must be encoded as unpadded big endian.");
        }
        if (s.length > 32 || s.length === 0 || s[0] === 0x00) {
            throw new Error("Unsigned integer s must be encoded as unpadded big endian.");
        }
        this.data = {
            r: r,
            s: s,
        };
    }
    /**
     * Takes the pair of integers (r, s) as 2x32 byte of binary data.
     *
     * Note: This is the format Cosmos SDK uses natively.
     *
     * @param data a 64 byte value containing integers r and s.
     */
    static fromFixedLength(data) {
        if (data.length !== 64) {
            throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);
        }
        return new Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));
    }
    static fromDer(data) {
        let pos = 0;
        if (data[pos++] !== 0x30) {
            throw new Error("Prefix 0x30 expected");
        }
        const bodyLength = data[pos++];
        if (data.length - pos !== bodyLength) {
            throw new Error("Data length mismatch detected");
        }
        // r
        const rTag = data[pos++];
        if (rTag !== derTagInteger) {
            throw new Error("INTEGER tag expected");
        }
        const rLength = data[pos++];
        if (rLength >= 0x80) {
            throw new Error("Decoding length values above 127 not supported");
        }
        const rData = data.slice(pos, pos + rLength);
        pos += rLength;
        // s
        const sTag = data[pos++];
        if (sTag !== derTagInteger) {
            throw new Error("INTEGER tag expected");
        }
        const sLength = data[pos++];
        if (sLength >= 0x80) {
            throw new Error("Decoding length values above 127 not supported");
        }
        const sData = data.slice(pos, pos + sLength);
        pos += sLength;
        return new Secp256k1Signature(
        // r/s data can contain leading 0 bytes to express integers being non-negative in DER
        trimLeadingNullBytes(rData), trimLeadingNullBytes(sData));
    }
    r(length) {
        if (length === undefined) {
            return this.data.r;
        }
        else {
            const paddingLength = length - this.data.r.length;
            if (paddingLength < 0) {
                throw new Error("Length too small to hold parameter r");
            }
            const padding = new Uint8Array(paddingLength);
            return new Uint8Array([...padding, ...this.data.r]);
        }
    }
    s(length) {
        if (length === undefined) {
            return this.data.s;
        }
        else {
            const paddingLength = length - this.data.s.length;
            if (paddingLength < 0) {
                throw new Error("Length too small to hold parameter s");
            }
            const padding = new Uint8Array(paddingLength);
            return new Uint8Array([...padding, ...this.data.s]);
        }
    }
    toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32)]);
    }
    toDer() {
        // DER supports negative integers but our data is unsigned. Thus we need to prepend
        // a leading 0 byte when the higest bit is set to differentiate nagative values
        const rEncoded = this.data.r[0] >= 0x80 ? new Uint8Array([0, ...this.data.r]) : this.data.r;
        const sEncoded = this.data.s[0] >= 0x80 ? new Uint8Array([0, ...this.data.s]) : this.data.s;
        const rLength = rEncoded.length;
        const sLength = sEncoded.length;
        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);
        return new Uint8Array([0x30, data.length, ...data]);
    }
}
exports.Secp256k1Signature = Secp256k1Signature;
/**
 * A Secp256k1Signature plus the recovery parameter
 */
class ExtendedSecp256k1Signature extends Secp256k1Signature {
    constructor(r, s, recovery) {
        super(r, s);
        if (!Number.isInteger(recovery)) {
            throw new Error("The recovery parameter must be an integer.");
        }
        if (recovery < 0 || recovery > 4) {
            throw new Error("The recovery parameter must be one of 0, 1, 2, 3.");
        }
        this.recovery = recovery;
    }
    /**
     * Decode extended signature from the simple fixed length encoding
     * described in toFixedLength().
     */
    static fromFixedLength(data) {
        if (data.length !== 65) {
            throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);
        }
        return new ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);
    }
    /**
     * A simple custom encoding that encodes the extended signature as
     * r (32 bytes) | s (32 bytes) | recovery param (1 byte)
     * where | denotes concatenation of bonary data.
     */
    toFixedLength() {
        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);
    }
}
exports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;
//# sourceMappingURL=secp256k1signature.js.map
});

unwrapExports(secp256k1signature);
secp256k1signature.ExtendedSecp256k1Signature;
secp256k1signature.Secp256k1Signature;

var secp256k1_1 = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Secp256k1 = void 0;

const bn_js_1 = __importDefault(bn);
const elliptic_1 = __importDefault(elliptic__default['default']);

const secp256k1 = new elliptic_1.default.ec("secp256k1");
const secp256k1N = new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "hex");
class Secp256k1 {
    static async makeKeypair(privkey) {
        if (privkey.length !== 32) {
            // is this check missing in secp256k1.validatePrivateKey?
            // https://github.com/bitjson/bitcoin-ts/issues/4
            throw new Error("input data is not a valid secp256k1 private key");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        if (keypair.validate().result !== true) {
            throw new Error("input data is not a valid secp256k1 private key");
        }
        // range test that is not part of the elliptic implementation
        const privkeyAsBigInteger = new bn_js_1.default(privkey);
        if (privkeyAsBigInteger.gte(secp256k1N)) {
            // not strictly smaller than N
            throw new Error("input data is not a valid secp256k1 private key");
        }
        const out = {
            privkey: encoding__default['default'].fromHex(keypair.getPrivate("hex")),
            // encodes uncompressed as
            // - 1-byte prefix "04"
            // - 32-byte x coordinate
            // - 32-byte y coordinate
            pubkey: Uint8Array.from(keypair.getPublic("array")),
        };
        return out;
    }
    // Creates a signature that is
    // - deterministic (RFC 6979)
    // - lowS signature
    // - DER encoded
    static async createSignature(messageHash, privkey) {
        if (messageHash.length === 0) {
            throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
            throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPrivate(privkey);
        // the `canonical` option ensures creation of lowS signature representations
        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });
        if (typeof recoveryParam !== "number")
            throw new Error("Recovery param missing");
        return new secp256k1signature.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);
    }
    static async verifySignature(signature, messageHash, pubkey) {
        if (messageHash.length === 0) {
            throw new Error("Message hash must not be empty");
        }
        if (messageHash.length > 32) {
            throw new Error("Message hash length must not exceed 32 bytes");
        }
        const keypair = secp256k1.keyFromPublic(pubkey);
        // From https://github.com/indutny/elliptic:
        //
        //     Sign the message's hash (input must be an array, or a hex-string)
        //
        //     Signature MUST be either:
        //     1) DER-encoded signature as hex-string; or
        //     2) DER-encoded signature as buffer; or
        //     3) object with two hex-string properties (r and s); or
        //     4) object with two buffer properties (r and s)
        //
        // Uint8Array is not a Buffer, but elliptic seems to be happy with the interface
        // common to both types. Uint8Array is not an array of ints but the interface is
        // similar
        try {
            return keypair.verify(messageHash, signature.toDer());
        }
        catch (error) {
            return false;
        }
    }
    static recoverPubkey(signature, messageHash) {
        const signatureForElliptic = { r: encoding__default['default'].toHex(signature.r()), s: encoding__default['default'].toHex(signature.s()) };
        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);
        const keypair = secp256k1.keyFromPublic(point);
        return encoding__default['default'].fromHex(keypair.getPublic(false, "hex"));
    }
    static compressPubkey(pubkey) {
        switch (pubkey.length) {
            case 33:
                return pubkey;
            case 65:
                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, "array"));
            default:
                throw new Error("Invalid pubkey length");
        }
    }
    static trimRecoveryByte(signature) {
        switch (signature.length) {
            case 64:
                return signature;
            case 65:
                return signature.slice(0, 64);
            default:
                throw new Error("Invalid signature length");
        }
    }
}
exports.Secp256k1 = Secp256k1;
//# sourceMappingURL=secp256k1.js.map
});

unwrapExports(secp256k1_1);
secp256k1_1.Secp256k1;

var sha = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.sha1 = exports.Sha1 = void 0;
const sha_js_1 = __importDefault(shajs__default['default']);
class Sha1 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha_js_1.default("sha1");
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update(data);
        return this;
    }
    digest() {
        return new Uint8Array(this.impl.digest());
    }
}
exports.Sha1 = Sha1;
/** Convenience function equivalent to `new Sha1(data).digest()` */
function sha1(data) {
    return new Sha1(data).digest();
}
exports.sha1 = sha1;
class Sha256 {
    constructor(firstData) {
        this.blockSize = 512 / 8;
        this.impl = sha_js_1.default("sha256");
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update(data);
        return this;
    }
    digest() {
        return new Uint8Array(this.impl.digest());
    }
}
exports.Sha256 = Sha256;
/** Convenience function equivalent to `new Sha256(data).digest()` */
function sha256(data) {
    return new Sha256(data).digest();
}
exports.sha256 = sha256;
class Sha512 {
    constructor(firstData) {
        this.blockSize = 1024 / 8;
        this.impl = sha_js_1.default("sha512");
        if (firstData) {
            this.update(firstData);
        }
    }
    update(data) {
        this.impl.update(data);
        return this;
    }
    digest() {
        return new Uint8Array(this.impl.digest());
    }
}
exports.Sha512 = Sha512;
/** Convenience function equivalent to `new Sha512(data).digest()` */
function sha512(data) {
    return new Sha512(data).digest();
}
exports.sha512 = sha512;
//# sourceMappingURL=sha.js.map
});

unwrapExports(sha);
sha.sha512;
sha.Sha512;
sha.sha256;
sha.Sha256;
sha.sha1;
sha.Sha1;

var decimal = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Decimal = void 0;
const bn_js_1 = __importDefault(bn);
// Too large values lead to massive memory usage. Limit to something sensible.
// The largest value we need is 18 (Ether).
const maxFractionalDigits = 100;
/**
 * A type for arbitrary precision, non-negative decimals.
 *
 * Instances of this class are immutable.
 */
class Decimal {
    constructor(atomics, fractionalDigits) {
        this.data = {
            atomics: new bn_js_1.default(atomics),
            fractionalDigits: fractionalDigits,
        };
    }
    static fromUserInput(input, fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        const badCharacter = input.match(/[^0-9.]/);
        if (badCharacter) {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            throw new Error(`Invalid character at position ${badCharacter.index + 1}`);
        }
        let whole;
        let fractional;
        if (input.search(/\./) === -1) {
            // integer format, no separator
            whole = input;
            fractional = "";
        }
        else {
            const parts = input.split(".");
            switch (parts.length) {
                case 0:
                case 1:
                    throw new Error("Fewer than two elements in split result. This must not happen here.");
                case 2:
                    if (!parts[1])
                        throw new Error("Fractional part missing");
                    whole = parts[0];
                    fractional = parts[1].replace(/0+$/, "");
                    break;
                default:
                    throw new Error("More than one separator found");
            }
        }
        if (fractional.length > fractionalDigits) {
            throw new Error("Got more fractional digits than supported");
        }
        const quantity = `${whole}${fractional.padEnd(fractionalDigits, "0")}`;
        return new Decimal(quantity, fractionalDigits);
    }
    static fromAtomics(atomics, fractionalDigits) {
        Decimal.verifyFractionalDigits(fractionalDigits);
        return new Decimal(atomics, fractionalDigits);
    }
    static verifyFractionalDigits(fractionalDigits) {
        if (!Number.isInteger(fractionalDigits))
            throw new Error("Fractional digits is not an integer");
        if (fractionalDigits < 0)
            throw new Error("Fractional digits must not be negative");
        if (fractionalDigits > maxFractionalDigits) {
            throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);
        }
    }
    static compare(a, b) {
        if (a.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));
    }
    get atomics() {
        return this.data.atomics.toString();
    }
    get fractionalDigits() {
        return this.data.fractionalDigits;
    }
    toString() {
        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));
        const whole = this.data.atomics.div(factor);
        const fractional = this.data.atomics.mod(factor);
        if (fractional.isZero()) {
            return whole.toString();
        }
        else {
            const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, "0");
            const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, "");
            return `${whole.toString()}.${trimmedFractionalPart}`;
        }
    }
    /**
     * Returns an approximation as a float type. Only use this if no
     * exact calculation is required.
     */
    toFloatApproximation() {
        const out = Number(this.toString());
        if (Number.isNaN(out))
            throw new Error("Conversion to number failed");
        return out;
    }
    /**
     * a.plus(b) returns a+b.
     *
     * Both values need to have the same fractional digits.
     */
    plus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));
        return new Decimal(sum.toString(), this.fractionalDigits);
    }
    /**
     * a.minus(b) returns a-b.
     *
     * Both values need to have the same fractional digits.
     * The resulting difference needs to be non-negative.
     */
    minus(b) {
        if (this.fractionalDigits !== b.fractionalDigits)
            throw new Error("Fractional digits do not match");
        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));
        if (difference.ltn(0))
            throw new Error("Difference must not be negative");
        return new Decimal(difference.toString(), this.fractionalDigits);
    }
    /**
     * a.multiply(b) returns a*b.
     *
     * We only allow multiplication by unsigned integers to avoid rounding errors.
     */
    multiply(b) {
        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));
        return new Decimal(product.toString(), this.fractionalDigits);
    }
    equals(b) {
        return Decimal.compare(this, b) === 0;
    }
    isLessThan(b) {
        return Decimal.compare(this, b) < 0;
    }
    isLessThanOrEqual(b) {
        return Decimal.compare(this, b) <= 0;
    }
    isGreaterThan(b) {
        return Decimal.compare(this, b) > 0;
    }
    isGreaterThanOrEqual(b) {
        return Decimal.compare(this, b) >= 0;
    }
}
exports.Decimal = Decimal;
//# sourceMappingURL=decimal.js.map
});

unwrapExports(decimal);
decimal.Decimal;

var integers = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;
/* eslint-disable no-bitwise */
const bn_js_1 = __importDefault(bn);
const uint64MaxValue = new bn_js_1.default("18446744073709551615", 10, "be");
class Uint32 {
    constructor(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        if (input < 0 || input > 4294967295) {
            throw new Error("Input not in uint32 range: " + input.toString());
        }
        this.data = input;
    }
    /** @deprecated use Uint32.fromBytes */
    static fromBigEndianBytes(bytes) {
        return Uint32.fromBytes(bytes);
    }
    /**
     * Creates a Uint32 from a fixed length byte array.
     *
     * @param bytes a list of exactly 4 bytes
     * @param endianess defaults to big endian
     */
    static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 4) {
            throw new Error("Invalid input length. Expected 4 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
                throw new Error("Invalid value in byte. Found: " + bytes[i]);
            }
        }
        const beBytes = endianess === "be" ? bytes : Array.from(bytes).reverse();
        // Use mulitiplication instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);
    }
    static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Uint32(Number.parseInt(str, 10));
    }
    toBytesBigEndian() {
        // Use division instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint8Array([
            Math.floor(this.data / 2 ** 24) & 0xff,
            Math.floor(this.data / 2 ** 16) & 0xff,
            Math.floor(this.data / 2 ** 8) & 0xff,
            Math.floor(this.data / 2 ** 0) & 0xff,
        ]);
    }
    toBytesLittleEndian() {
        // Use division instead of shifting since bitwise operators are defined
        // on SIGNED int32 in JavaScript and we don't want to risk surprises
        return new Uint8Array([
            Math.floor(this.data / 2 ** 0) & 0xff,
            Math.floor(this.data / 2 ** 8) & 0xff,
            Math.floor(this.data / 2 ** 16) & 0xff,
            Math.floor(this.data / 2 ** 24) & 0xff,
        ]);
    }
    toNumber() {
        return this.data;
    }
    toString() {
        return this.data.toString();
    }
}
exports.Uint32 = Uint32;
class Int53 {
    constructor(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {
            throw new Error("Input not in int53 range: " + input.toString());
        }
        this.data = input;
    }
    static fromString(str) {
        if (!str.match(/^-?[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Int53(Number.parseInt(str, 10));
    }
    toNumber() {
        return this.data;
    }
    toString() {
        return this.data.toString();
    }
}
exports.Int53 = Int53;
class Uint53 {
    constructor(input) {
        const signed = new Int53(input);
        if (signed.toNumber() < 0) {
            throw new Error("Input is negative");
        }
        this.data = signed;
    }
    static fromString(str) {
        const signed = Int53.fromString(str);
        return new Uint53(signed.toNumber());
    }
    toNumber() {
        return this.data.toNumber();
    }
    toString() {
        return this.data.toString();
    }
}
exports.Uint53 = Uint53;
class Uint64 {
    constructor(data) {
        if (data.isNeg()) {
            throw new Error("Input is negative");
        }
        if (data.gt(uint64MaxValue)) {
            throw new Error("Input exceeds uint64 range");
        }
        this.data = data;
    }
    /** @deprecated use Uint64.fromBytes */
    static fromBytesBigEndian(bytes) {
        return Uint64.fromBytes(bytes);
    }
    /**
     * Creates a Uint64 from a fixed length byte array.
     *
     * @param bytes a list of exactly 8 bytes
     * @param endianess defaults to big endian
     */
    static fromBytes(bytes, endianess = "be") {
        if (bytes.length !== 8) {
            throw new Error("Invalid input length. Expected 8 bytes.");
        }
        for (let i = 0; i < bytes.length; ++i) {
            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {
                throw new Error("Invalid value in byte. Found: " + bytes[i]);
            }
        }
        const beBytes = endianess === "be" ? Array.from(bytes) : Array.from(bytes).reverse();
        return new Uint64(new bn_js_1.default(beBytes));
    }
    static fromString(str) {
        if (!str.match(/^[0-9]+$/)) {
            throw new Error("Invalid string format");
        }
        return new Uint64(new bn_js_1.default(str, 10, "be"));
    }
    static fromNumber(input) {
        if (Number.isNaN(input)) {
            throw new Error("Input is not a number");
        }
        if (!Number.isInteger(input)) {
            throw new Error("Input is not an integer");
        }
        let bigint;
        try {
            bigint = new bn_js_1.default(input);
        }
        catch (_a) {
            throw new Error("Input is not a safe integer");
        }
        return new Uint64(bigint);
    }
    toBytesBigEndian() {
        return Uint8Array.from(this.data.toArray("be", 8));
    }
    toBytesLittleEndian() {
        return Uint8Array.from(this.data.toArray("le", 8));
    }
    toString() {
        return this.data.toString(10);
    }
    toNumber() {
        return this.data.toNumber();
    }
}
exports.Uint64 = Uint64;
//# sourceMappingURL=integers.js.map
});

unwrapExports(integers);
integers.Uint64;
integers.Uint53;
integers.Int53;
integers.Uint32;

var build$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;

Object.defineProperty(exports, "Decimal", { enumerable: true, get: function () { return decimal.Decimal; } });

Object.defineProperty(exports, "Int53", { enumerable: true, get: function () { return integers.Int53; } });
Object.defineProperty(exports, "Uint32", { enumerable: true, get: function () { return integers.Uint32; } });
Object.defineProperty(exports, "Uint53", { enumerable: true, get: function () { return integers.Uint53; } });
Object.defineProperty(exports, "Uint64", { enumerable: true, get: function () { return integers.Uint64; } });
//# sourceMappingURL=index.js.map
});

unwrapExports(build$1);
build$1.Uint64;
build$1.Uint53;
build$1.Uint32;
var build_4 = build$1.Int53;
build$1.Decimal;

var slip10 = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;


const bn_js_1 = __importDefault(bn);
const elliptic_1 = __importDefault(elliptic__default['default']);


/**
 * Raw values must match the curve string in SLIP-0010 master key generation
 *
 * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation
 */
var Slip10Curve;
(function (Slip10Curve) {
    Slip10Curve["Secp256k1"] = "Bitcoin seed";
    Slip10Curve["Ed25519"] = "ed25519 seed";
})(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));
/**
 * Reverse mapping of Slip10Curve
 */
function slip10CurveFromString(curveString) {
    switch (curveString) {
        case Slip10Curve.Ed25519:
            return Slip10Curve.Ed25519;
        case Slip10Curve.Secp256k1:
            return Slip10Curve.Secp256k1;
        default:
            throw new Error(`Unknown curve string: '${curveString}'`);
    }
}
exports.slip10CurveFromString = slip10CurveFromString;
class Slip10RawIndex extends build$1.Uint32 {
    static hardened(hardenedIndex) {
        return new Slip10RawIndex(hardenedIndex + 2 ** 31);
    }
    static normal(normalIndex) {
        return new Slip10RawIndex(normalIndex);
    }
    isHardened() {
        return this.data >= 2 ** 31;
    }
}
exports.Slip10RawIndex = Slip10RawIndex;
const secp256k1 = new elliptic_1.default.ec("secp256k1");
// Universal private key derivation accoring to
// https://github.com/satoshilabs/slips/blob/master/slip-0010.md
class Slip10 {
    static derivePath(curve, seed, path) {
        let result = this.master(curve, seed);
        for (const rawIndex of path) {
            result = this.child(curve, result.privkey, result.chainCode, rawIndex);
        }
        return result;
    }
    static master(curve, seed) {
        const i = new hmac.Hmac(sha.Sha512, encoding__default['default'].toAscii(curve)).update(seed).digest();
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {
            return this.master(curve, i);
        }
        return {
            chainCode: ir,
            privkey: il,
        };
    }
    static child(curve, parentPrivkey, parentChainCode, rawIndex) {
        let i;
        if (rawIndex.isHardened()) {
            const payload = new Uint8Array([0x00, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);
            i = new hmac.Hmac(sha.Sha512, parentChainCode).update(payload).digest();
        }
        else {
            if (curve === Slip10Curve.Ed25519) {
                throw new Error("Normal keys are not allowed with ed25519");
            }
            else {
                // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key
                // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).
                // where the functions point() and ser_p() are defined in BIP-0032
                const data = new Uint8Array([
                    ...Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),
                    ...rawIndex.toBytesBigEndian(),
                ]);
                i = new hmac.Hmac(sha.Sha512, parentChainCode).update(data).digest();
            }
        }
        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);
    }
    /**
     * Implementation of ser_P(point(k_par)) from BIP-0032
     *
     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki
     */
    static serializedPoint(curve, p) {
        switch (curve) {
            case Slip10Curve.Secp256k1:
                return encoding__default['default'].fromHex(secp256k1.g.mul(p).encodeCompressed("hex"));
            default:
                throw new Error("curve not supported");
        }
    }
    static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {
        // step 2 (of the Private parent key → private child key algorithm)
        const il = i.slice(0, 32);
        const ir = i.slice(32, 64);
        // step 3
        const returnChainCode = ir;
        // step 4
        if (curve === Slip10Curve.Ed25519) {
            return {
                chainCode: returnChainCode,
                privkey: il,
            };
        }
        // step 5
        const n = this.n(curve);
        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);
        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray("be", 32));
        // step 6
        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {
            const newI = new hmac.Hmac(sha.Sha512, parentChainCode)
                .update(new Uint8Array([0x01, ...ir, ...rawIndex.toBytesBigEndian()]))
                .digest();
            return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);
        }
        // step 7
        return {
            chainCode: returnChainCode,
            privkey: returnChildKey,
        };
    }
    static isZero(privkey) {
        return privkey.every((byte) => byte === 0);
    }
    static isGteN(curve, privkey) {
        const keyAsNumber = new bn_js_1.default(privkey);
        return keyAsNumber.gte(this.n(curve));
    }
    static n(curve) {
        switch (curve) {
            case Slip10Curve.Secp256k1:
                return new bn_js_1.default("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", 16);
            default:
                throw new Error("curve not supported");
        }
    }
}
exports.Slip10 = Slip10;
function pathToString(path) {
    return path.reduce((current, component) => {
        const componentString = component.isHardened()
            ? `${component.toNumber() - 2 ** 31}'`
            : component.toString();
        return current + "/" + componentString;
    }, "m");
}
exports.pathToString = pathToString;
function stringToPath(input) {
    if (!input.startsWith("m"))
        throw new Error("Path string must start with 'm'");
    let rest = input.slice(1);
    const out = new Array();
    while (rest) {
        const match = rest.match(/^\/([0-9]+)('?)/);
        if (!match)
            throw new Error("Syntax error while reading path component");
        const [fullMatch, numberString, apostrophe] = match;
        const value = build$1.Uint53.fromString(numberString).toNumber();
        if (value >= 2 ** 31)
            throw new Error("Component value too high. Must not exceed 2**31-1.");
        if (apostrophe)
            out.push(Slip10RawIndex.hardened(value));
        else
            out.push(Slip10RawIndex.normal(value));
        rest = rest.slice(fullMatch.length);
    }
    return out;
}
exports.stringToPath = stringToPath;
//# sourceMappingURL=slip10.js.map
});

unwrapExports(slip10);
slip10.stringToPath;
slip10.pathToString;
slip10.Slip10;
slip10.Slip10RawIndex;
slip10.slip10CurveFromString;
slip10.Slip10Curve;

var ripemd_1 = getCjsExportFromNamespace(ripemd$2);

var build = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.slip10CurveFromString = exports.Slip10RawIndex = exports.Slip10Curve = exports.Slip10 = exports.stringToPath = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.sha1 = exports.Sha1 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Ed25519Keypair = exports.Ed25519 = exports.isArgon2idOptions = exports.Argon2id = exports.xchacha20NonceLength = exports.Xchacha20poly1305Ietf = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;

Object.defineProperty(exports, "Bip39", { enumerable: true, get: function () { return bip39_1.Bip39; } });

Object.defineProperty(exports, "EnglishMnemonic", { enumerable: true, get: function () { return englishmnemonic.EnglishMnemonic; } });

Object.defineProperty(exports, "Hmac", { enumerable: true, get: function () { return hmac.Hmac; } });

Object.defineProperty(exports, "Keccak256", { enumerable: true, get: function () { return keccak.Keccak256; } });
Object.defineProperty(exports, "keccak256", { enumerable: true, get: function () { return keccak.keccak256; } });

Object.defineProperty(exports, "Xchacha20poly1305Ietf", { enumerable: true, get: function () { return libsodium.Xchacha20poly1305Ietf; } });
Object.defineProperty(exports, "xchacha20NonceLength", { enumerable: true, get: function () { return libsodium.xchacha20NonceLength; } });
Object.defineProperty(exports, "Argon2id", { enumerable: true, get: function () { return libsodium.Argon2id; } });
Object.defineProperty(exports, "isArgon2idOptions", { enumerable: true, get: function () { return libsodium.isArgon2idOptions; } });
Object.defineProperty(exports, "Ed25519", { enumerable: true, get: function () { return libsodium.Ed25519; } });
Object.defineProperty(exports, "Ed25519Keypair", { enumerable: true, get: function () { return libsodium.Ed25519Keypair; } });

Object.defineProperty(exports, "Random", { enumerable: true, get: function () { return random.Random; } });

Object.defineProperty(exports, "Ripemd160", { enumerable: true, get: function () { return ripemd_1.Ripemd160; } });
Object.defineProperty(exports, "ripemd160", { enumerable: true, get: function () { return ripemd_1.ripemd160; } });

Object.defineProperty(exports, "Secp256k1", { enumerable: true, get: function () { return secp256k1_1.Secp256k1; } });

Object.defineProperty(exports, "ExtendedSecp256k1Signature", { enumerable: true, get: function () { return secp256k1signature.ExtendedSecp256k1Signature; } });
Object.defineProperty(exports, "Secp256k1Signature", { enumerable: true, get: function () { return secp256k1signature.Secp256k1Signature; } });

Object.defineProperty(exports, "Sha1", { enumerable: true, get: function () { return sha.Sha1; } });
Object.defineProperty(exports, "sha1", { enumerable: true, get: function () { return sha.sha1; } });
Object.defineProperty(exports, "Sha256", { enumerable: true, get: function () { return sha.Sha256; } });
Object.defineProperty(exports, "sha256", { enumerable: true, get: function () { return sha.sha256; } });
Object.defineProperty(exports, "Sha512", { enumerable: true, get: function () { return sha.Sha512; } });
Object.defineProperty(exports, "sha512", { enumerable: true, get: function () { return sha.sha512; } });

Object.defineProperty(exports, "pathToString", { enumerable: true, get: function () { return slip10.pathToString; } });
Object.defineProperty(exports, "stringToPath", { enumerable: true, get: function () { return slip10.stringToPath; } });
Object.defineProperty(exports, "Slip10", { enumerable: true, get: function () { return slip10.Slip10; } });
Object.defineProperty(exports, "Slip10Curve", { enumerable: true, get: function () { return slip10.Slip10Curve; } });
Object.defineProperty(exports, "Slip10RawIndex", { enumerable: true, get: function () { return slip10.Slip10RawIndex; } });
Object.defineProperty(exports, "slip10CurveFromString", { enumerable: true, get: function () { return slip10.slip10CurveFromString; } });
//# sourceMappingURL=index.js.map
});

unwrapExports(build);
build.slip10CurveFromString;
build.Slip10RawIndex;
build.Slip10Curve;
build.Slip10;
build.stringToPath;
build.pathToString;
build.sha512;
build.Sha512;
var build_9 = build.sha256;
build.Sha256;
build.sha1;
build.Sha1;
build.Secp256k1Signature;
build.ExtendedSecp256k1Signature;
var build_15 = build.Secp256k1;
build.ripemd160;
build.Ripemd160;
build.Random;
build.Ed25519Keypair;
build.Ed25519;
build.isArgon2idOptions;
build.Argon2id;
build.xchacha20NonceLength;
build.Xchacha20poly1305Ietf;
build.keccak256;
build.Keccak256;
build.Hmac;
build.EnglishMnemonic;
build.Bip39;

const secp256k1 = new elliptic.ec('secp256k1');
class KeyPairSigner {
    constructor(privKey) {
        let key = secp256k1.keyFromPrivate(privKey, 'hex');
        let pubkey = key.getPublic(true, 'hex');
        this.privkey = privKey;
        this.pubkey = pubkey;
        this.prefix = 'mele';
    }
    getAddress() {
        return encoding.Bech32.encode(this.prefix, amino.rawSecp256k1PubkeyToRawAddress(Buffer.from(this.pubkey, 'hex')));
    }
    getPrivateKey() {
        return this.privkey;
    }
    getPublicKey() {
        return this.pubkey;
    }
    getAccounts() {
        return [
            {
                algo: 'secp256k1',
                address: this.getAddress(),
                pubkey: Buffer.from(this.pubkey, 'hex'),
            },
        ];
    }
    signDirect(address, signDoc) {
        return __awaiter(this, void 0, void 0, function* () {
            const signBytes = protoSigning.makeSignBytes(signDoc);
            if (address !== this.getAddress()) {
                throw new Error(`Address ${address} not found in wallet`);
            }
            const hashedMessage = build_9(signBytes);
            const signature = yield build_15.createSignature(hashedMessage, Buffer.from(this.privkey, 'hex'));
            const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
            const stdSignature = amino.encodeSecp256k1Signature(Buffer.from(this.pubkey, 'hex'), signatureBytes);
            return {
                signed: signDoc,
                signature: stdSignature,
            };
        });
    }
    signMessage(msg) {
        const key = elliptic.ec.keyFromPrivate(this.privkey, 'hex');
        const signByte = shajs__default['default']('sha256').update(msg).digest();
        const sig = key.sign(signByte, { canonical: true });
        return Buffer.from(JSON.stringify(sig), 'utf-8').toString('hex');
    }
}

const zero$1 = new bn(0);
const negative1 = new bn(-1);
const smallestDenom = 'umelc';
const smallestStableDenom = 'umelg';
const unitMapMelc = {
    umelc: '1',
    melc: '1000000000',
};
const unitMapMelg = {
    umelg: '1',
    melg: '1000000000',
};
function fromUmelc(input, unit = 'melc') {
    if (!bn.isBN(input) && typeof input !== 'string') {
        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');
    }
    if (typeof unit !== 'string') {
        throw new Error('Invalid unit.');
    }
    return _fromUmelc(input, unit);
}
function toUmelc(input, unit = 'melc') {
    if (!bn.isBN(input) && typeof input !== 'string') {
        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');
    }
    if (typeof unit !== 'string') {
        throw new Error('Invalid unit.');
    }
    return bn.isBN(input) ? _toUmelc(input, unit) : _toUmelc(input, unit).toString(10);
}
function _fromUmelc(umelcInput, unit) {
    unit = unit.toLowerCase();
    if (!unitMapMelc[unit]) {
        throw new Error('Invalid unit.');
    }
    let umelc = numberToBN__default['default'](umelcInput);
    let negative = umelc.lt(zero$1);
    const base = getValueOfUnit(unit);
    const baseLength = unitMapMelc[unit].length - 1 || 1;
    if (negative) {
        umelc = umelc.mul(negative1);
    }
    let fraction = umelc.mod(base).toString(10);
    while (fraction.length < baseLength) {
        fraction = `0${fraction}`;
    }
    let match = fraction.match(/^([0-9]*[1-9]|0)(0*)/);
    if (match && match.length >= 2)
        fraction = match[1];
    let whole = umelc.div(base).toString(10);
    let value = `${whole}${fraction == '0' ? '' : `.${fraction}`}`;
    if (negative) {
        value = `-${value}`;
    }
    return value;
}
function _toUmelc(melcInput, unit) {
    unit = unit.toLowerCase();
    if (!unitMapMelc[unit]) {
        throw new Error('Invalid unit.');
    }
    let melc = numberToString(melcInput);
    const base = getValueOfUnit(unit);
    const baseLength = unitMapMelc[unit].length - 1 || 1;
    let negative = melc.substring(0, 1) === '-';
    if (negative) {
        melc = melc.substring(1);
    }
    if (melc === '.') {
        throw new Error(`[mele-sdk] while converting number ${melcInput} to umelc, invalid value`);
    }
    let comps = melc.split('.');
    if (comps.length > 2) {
        throw new Error(`[mele-sdk] while converting number ${melc} to umelc, too many decimal points`);
    }
    let whole = comps[0];
    let fraction = comps[1];
    if (!whole) {
        whole = '0';
    }
    if (!fraction) {
        fraction = '0';
    }
    if (fraction.length > baseLength) {
        throw new Error(`[mele-sdk] while converting number ${melcInput} to umelc, too many decimal places`);
    }
    while (fraction.length < baseLength) {
        fraction += '0';
    }
    let wholeBN = new bn(whole);
    let fractionBN = new bn(fraction);
    let umelc = wholeBN.mul(base).add(fractionBN);
    if (negative) {
        umelc = umelc.mul(negative1);
    }
    return new bn(umelc.toString(10), 10);
}
function fromUmelg(input, unit = 'melg') {
    if (!bn.isBN(input) && typeof input !== 'string') {
        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');
    }
    if (typeof unit !== 'string') {
        throw new Error('Invalid unit.');
    }
    return _fromUmelg(input, unit);
}
function toUmelg(input, unit = 'melg') {
    if (!bn.isBN(input) && typeof input !== 'string') {
        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');
    }
    if (typeof unit !== 'string') {
        throw new Error('Invalid unit.');
    }
    return bn.isBN(input) ? _toUmelg(input, unit) : _toUmelg(input, unit).toString(10);
}
function _fromUmelg(umelgInput, unit) {
    unit = unit.toLowerCase();
    if (!unitMapMelg[unit]) {
        throw new Error('Invalid unit.');
    }
    let umelg = numberToBN__default['default'](umelgInput);
    let negative = umelg.lt(zero$1);
    const base = getValueOfUnitUmelg(unit);
    const baseLength = unitMapMelg[unit].length - 1 || 1;
    if (negative) {
        umelg = umelg.mul(negative1);
    }
    let fraction = umelg.mod(base).toString(10);
    while (fraction.length < baseLength) {
        fraction = `0${fraction}`;
    }
    let match = fraction.match(/^([0-9]*[1-9]|0)(0*)/);
    if (match && match.length >= 2)
        fraction = match[1];
    let whole = umelg.div(base).toString(10);
    let value = `${whole}${fraction == '0' ? '' : `.${fraction}`}`;
    if (negative) {
        value = `-${value}`;
    }
    return value;
}
function _toUmelg(melgInput, unit) {
    unit = unit.toLowerCase();
    if (!unitMapMelg[unit]) {
        throw new Error('Invalid unit.');
    }
    let melg = numberToString(melgInput);
    const base = getValueOfUnitUmelg(unit);
    const baseLength = unitMapMelg[unit].length - 1 || 1;
    let negative = melg.substring(0, 1) === '-';
    if (negative) {
        melg = melg.substring(1);
    }
    if (melg === '.') {
        throw new Error(`[mele-sdk] while converting number ${melgInput} to umelg, invalid value`);
    }
    let comps = melg.split('.');
    if (comps.length > 2) {
        throw new Error(`[mele-sdk] while converting number ${melgInput} to umelg,  too many decimal points`);
    }
    let whole = comps[0];
    let fraction = comps[1];
    if (!whole) {
        whole = '0';
    }
    if (!fraction) {
        fraction = '0';
    }
    if (fraction.length > baseLength) {
        throw new Error(`[mele-sdk] while converting number ${melgInput} to umelg, too many decimal places`);
    }
    while (fraction.length < baseLength) {
        fraction += '0';
    }
    let wholeBN = new bn(whole);
    let fractionBN = new bn(fraction);
    let umelg = wholeBN.mul(base).add(fractionBN);
    if (negative) {
        umelg = umelg.mul(negative1);
    }
    return new bn(umelg.toString(10), 10);
}
function getValueOfUnit(unitInput) {
    const unit = unitInput ? unitInput.toLowerCase() : 'melc';
    let unitValue = unitMapMelc[unit];
    return new bn(unitValue, 10);
}
function getValueOfUnitUmelg(unitInput) {
    const unit = unitInput ? unitInput.toLowerCase() : 'melg';
    let unitValue = unitMapMelg[unit];
    return new bn(unitValue, 10);
}
function numberToString(arg) {
    if (typeof arg === 'string') {
        if (!arg.match(/^-?[0-9.]+$/)) {
            throw new Error(`while converting number to string, invalid number value '${arg}', should be a number matching (^-?[0-9.]+).`);
        }
        return arg;
    }
    else if (typeof arg === 'number') {
        return String(arg);
    }
    else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {
        if (arg.toPrecision) {
            return String(arg.toPrecision());
        }
        else {
            return arg.toString(10);
        }
    }
    throw new Error(`while converting number to string, invalid number value '${arg}' type ${typeof arg}.`);
}

const ec = new elliptic.ec('secp256k1');
const MessageTypeMap = {};
function generateMnemonic() {
    return bip39__namespace.generateMnemonic();
}
function generateKeyPair() {
    const keyPair = ec.genKeyPair();
    const pubKey = keyPair.getPublic(true, 'hex');
    const privKey = keyPair.getPrivate('hex');
    return {
        privateKey: privKey,
        publicKey: pubKey,
    };
}
function deriveMasterKey(mnemonic) {
    bip39__namespace.validateMnemonic(mnemonic);
    const seed = bip39__namespace.mnemonicToSeedSync(mnemonic);
    return bip32__namespace.fromSeed(seed);
}
function deriveMasterKeyFromSeed(seed) {
    return bip32__namespace.fromSeed(seed);
}
function deriveKeyPair(masterKey, hdPath) {
    const hdWallet = masterKey.derivePath(hdPath);
    const privKey = hdWallet.privateKey;
    if (!privKey) {
        throw new Error('Failed to derive key pair!');
    }
    const pubKey = ec.keyFromPrivate(privKey, 'hex');
    return {
        privateKey: privKey.toString('hex'),
        publicKey: pubKey.getPublic(true, 'hex'),
    };
}
function deriveKeyPairFromAccountAndIndex(masterKey, account = 0, index = 0) {
    const hdPath = `m/44'/118'/${account}'/0/${index}`;
    return deriveKeyPair(masterKey, hdPath);
}
function getAddressFromPublicKey(pubKey) {
    if (!validatePublicKey(pubKey)) {
        throw new Error('Invalid public key.');
    }
    const hashResult = shajs__default['default']('sha256').update(Buffer.from(pubKey, 'hex')).digest();
    const addr = new ripemd160().update(hashResult).digest();
    return addr;
}
function getPublicKeyFromPrivateKey(privKey) {
    const key = ec.keyFromPrivate(privKey, 'hex');
    return key.getPublic(true, 'hex');
}
function validatePublicKey(pubKey) {
    try {
        const keyPair = ec.keyFromPublic(pubKey, 'hex');
        return keyPair.validate().result;
    }
    catch (e) {
        return false;
    }
}
function encodeAddress(addr, prefix) {
    return bech32__default['default'].encode(prefix, bech32__default['default'].toWords(addr));
}
function decodeAddress(addr, prefix) {
    let decode = bech32__default['default'].decode(addr);
    if (decode.prefix !== prefix) {
        throw new Error(`invalid prefix: ${decode.prefix}\n`);
    }
    return Buffer.from(bech32__default['default'].fromWords(decode.words));
}
function promisify(events, type = 'confirmation') {
    if (type === 'hash' || type === 'receipt' || type === 'confirmation') {
        return new Promise((resolve, reject) => {
            events.on('error', error => reject(error));
            events.on(type, data => resolve(data));
        });
    }
    else {
        throw new Error('Invalid event type.');
    }
}
function convertValidatorPubKey(pubkey) {
    let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex');
    let buffer = Buffer.from(bech32__default['default'].fromWords(bech32__default['default'].decode(pubkey).words));
    let key = buffer.slice(pubkeyAminoPrefix.length);
    const hashResult = shajs__default['default']('sha256').update(key).digest('hex');
    return hashResult.slice(0, 40).toUpperCase();
}
function convertValidatorPubKeyRaw(pubkey) {
    let key = Buffer.from(pubkey, 'base64');
    const hashResult = shajs__default['default']('sha256').update(key).digest('hex');
    return hashResult.slice(0, 40).toUpperCase();
}
function convertMessageType(msgType) {
    return MessageTypeMap[msgType];
}

var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    fromUmelg: fromUmelg,
    fromUmelc: fromUmelc,
    smallestDenom: smallestDenom,
    smallestStableDenom: smallestStableDenom,
    toUmelg: toUmelg,
    toUmelc: toUmelc,
    generateMnemonic: generateMnemonic,
    generateKeyPair: generateKeyPair,
    deriveMasterKey: deriveMasterKey,
    deriveMasterKeyFromSeed: deriveMasterKeyFromSeed,
    deriveKeyPair: deriveKeyPair,
    deriveKeyPairFromAccountAndIndex: deriveKeyPairFromAccountAndIndex,
    getAddressFromPublicKey: getAddressFromPublicKey,
    getPublicKeyFromPrivateKey: getPublicKeyFromPrivateKey,
    validatePublicKey: validatePublicKey,
    encodeAddress: encodeAddress,
    decodeAddress: decodeAddress,
    promisify: promisify,
    convertValidatorPubKey: convertValidatorPubKey,
    convertValidatorPubKeyRaw: convertValidatorPubKeyRaw,
    convertMessageType: convertMessageType
});

new elliptic.ec('secp256k1');
class MnemonicSigner {
    constructor(mnemonic, path = `m/44'/118'/0'/0/0`) {
        const masterKey = deriveMasterKey(mnemonic);
        const keyPair = deriveKeyPair(masterKey, path);
        this.privkey = keyPair.privateKey;
        this.pubkey = keyPair.publicKey;
        this.prefix = 'mele';
    }
    getAddress() {
        return encoding.Bech32.encode(this.prefix, amino.rawSecp256k1PubkeyToRawAddress(Buffer.from(this.pubkey, 'hex')));
    }
    getPrivateKey() {
        return this.privkey;
    }
    getPublicKey() {
        return this.pubkey;
    }
    getAccounts() {
        return [
            {
                algo: 'secp256k1',
                address: this.getAddress(),
                pubkey: Buffer.from(this.pubkey, 'hex'),
            },
        ];
    }
    signDirect(address, signDoc) {
        return __awaiter(this, void 0, void 0, function* () {
            const signBytes = protoSigning.makeSignBytes(signDoc);
            if (address !== this.getAddress()) {
                throw new Error(`Address ${address} not found in wallet`);
            }
            const hashedMessage = build_9(signBytes);
            const signature = yield build_15.createSignature(hashedMessage, Buffer.from(this.privkey, 'hex'));
            const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);
            const stdSignature = amino.encodeSecp256k1Signature(Buffer.from(this.pubkey, 'hex'), signatureBytes);
            return {
                signed: signDoc,
                signature: stdSignature,
            };
        });
    }
    signMessage(msg) {
        const key = elliptic.ec.keyFromPrivate(this.privkey, 'hex');
        const signByte = shajs__default['default']('sha256').update(msg).digest();
        const sig = key.sign(signByte, { canonical: true });
        return Buffer.from(JSON.stringify(sig), 'utf-8').toString('hex');
    }
}

var BroadCastErrorEnum;
(function (BroadCastErrorEnum) {
    BroadCastErrorEnum[BroadCastErrorEnum["CheckTx"] = 0] = "CheckTx";
    BroadCastErrorEnum[BroadCastErrorEnum["DeliverTx"] = 1] = "DeliverTx";
})(BroadCastErrorEnum || (BroadCastErrorEnum = {}));
class BroadcastError extends Error {
    constructor(type, log, code) {
        super(log);
        Object.setPrototypeOf(this, BroadcastError.prototype);
        this.type = type;
        this.code = code;
    }
}

class TransactionEvents extends events.EventEmitter {
    emitHash(hash) {
        this.emit('hash', hash);
    }
    emitReceipt(receipt) {
        this.emit('receipt', receipt);
    }
    emitConfirmation(tx) {
        this.emit('confirmation', tx);
    }
    emitError(error) {
        this.emit('error', error);
    }
}

var long_1 = Long;

/**
 * wasm optimizations, to do native i64 multiplication and divide
 */
var wasm = null;

try {
  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11
  ])), {}).exports;
} catch (e) {
  // no wasm support :(
}

/**
 * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
 *  See the from* functions below for more convenient ways of constructing Longs.
 * @exports Long
 * @class A Long class for representing a 64 bit two's-complement integer value.
 * @param {number} low The low (signed) 32 bits of the long
 * @param {number} high The high (signed) 32 bits of the long
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @constructor
 */
function Long(low, high, unsigned) {

    /**
     * The low 32 bits as a signed value.
     * @type {number}
     */
    this.low = low | 0;

    /**
     * The high 32 bits as a signed value.
     * @type {number}
     */
    this.high = high | 0;

    /**
     * Whether unsigned or not.
     * @type {boolean}
     */
    this.unsigned = !!unsigned;
}

// The internal representation of a long is the two given signed, 32-bit values.
// We use 32-bit pieces because these are the size of integers on which
// Javascript performs bit-operations.  For operations like addition and
// multiplication, we split each number into 16 bit pieces, which can easily be
// multiplied within Javascript's floating-point representation without overflow
// or change in sign.
//
// In the algorithms below, we frequently reduce the negative case to the
// positive case by negating the input(s) and then post-processing the result.
// Note that we must ALWAYS check specially whether those values are MIN_VALUE
// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
// a positive number, it overflows back into a negative).  Not handling this
// case would often result in infinite recursion.
//
// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
// methods on which they depend.

/**
 * An indicator used to reliably determine if an object is a Long or not.
 * @type {boolean}
 * @const
 * @private
 */
Long.prototype.__isLong__;

Object.defineProperty(Long.prototype, "__isLong__", { value: true });

/**
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 * @inner
 */
function isLong(obj) {
    return (obj && obj["__isLong__"]) === true;
}

/**
 * Tests if the specified object is a Long.
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 */
Long.isLong = isLong;

/**
 * A cache of the Long representations of small integer values.
 * @type {!Object}
 * @inner
 */
var INT_CACHE = {};

/**
 * A cache of the Long representations of small unsigned integer values.
 * @type {!Object}
 * @inner
 */
var UINT_CACHE = {};

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromInt(value, unsigned) {
    var obj, cachedObj, cache;
    if (unsigned) {
        value >>>= 0;
        if (cache = (0 <= value && value < 256)) {
            cachedObj = UINT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
        if (cache)
            UINT_CACHE[value] = obj;
        return obj;
    } else {
        value |= 0;
        if (cache = (-128 <= value && value < 128)) {
            cachedObj = INT_CACHE[value];
            if (cachedObj)
                return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
            INT_CACHE[value] = obj;
        return obj;
    }
}

/**
 * Returns a Long representing the given 32 bit integer value.
 * @function
 * @param {number} value The 32 bit integer in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromInt = fromInt;

/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromNumber(value, unsigned) {
    if (isNaN(value))
        return unsigned ? UZERO : ZERO;
    if (unsigned) {
        if (value < 0)
            return UZERO;
        if (value >= TWO_PWR_64_DBL)
            return MAX_UNSIGNED_VALUE;
    } else {
        if (value <= -TWO_PWR_63_DBL)
            return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
            return MAX_VALUE;
    }
    if (value < 0)
        return fromNumber(-value, unsigned).neg();
    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
}

/**
 * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 * @function
 * @param {number} value The number in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromNumber = fromNumber;

/**
 * @param {number} lowBits
 * @param {number} highBits
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromBits(lowBits, highBits, unsigned) {
    return new Long(lowBits, highBits, unsigned);
}

/**
 * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
 *  assumed to use 32 bits.
 * @function
 * @param {number} lowBits The low 32 bits
 * @param {number} highBits The high 32 bits
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */
Long.fromBits = fromBits;

/**
 * @function
 * @param {number} base
 * @param {number} exponent
 * @returns {number}
 * @inner
 */
var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

/**
 * @param {string} str
 * @param {(boolean|number)=} unsigned
 * @param {number=} radix
 * @returns {!Long}
 * @inner
 */
function fromString(str, unsigned, radix) {
    if (str.length === 0)
        throw Error('empty string');
    if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return ZERO;
    if (typeof unsigned === 'number') {
        // For goog.math.long compatibility
        radix = unsigned,
        unsigned = false;
    } else {
        unsigned = !! unsigned;
    }
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');

    var p;
    if ((p = str.indexOf('-')) > 0)
        throw Error('interior hyphen');
    else if (p === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 8));

    var result = ZERO;
    for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i),
            value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
            var power = fromNumber(pow_dbl(radix, size));
            result = result.mul(power).add(fromNumber(value));
        } else {
            result = result.mul(radixToPower);
            result = result.add(fromNumber(value));
        }
    }
    result.unsigned = unsigned;
    return result;
}

/**
 * Returns a Long representation of the given string, written using the specified radix.
 * @function
 * @param {string} str The textual representation of the Long
 * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed
 * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
 * @returns {!Long} The corresponding Long value
 */
Long.fromString = fromString;

/**
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */
function fromValue(val, unsigned) {
    if (typeof val === 'number')
        return fromNumber(val, unsigned);
    if (typeof val === 'string')
        return fromString(val, unsigned);
    // Throws for non-objects, converts non-instanceof Long:
    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);
}

/**
 * Converts the specified value to a Long using the appropriate from* function for its type.
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long}
 */
Long.fromValue = fromValue;

// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
// no runtime penalty for these.

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_16_DBL = 1 << 16;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_24_DBL = 1 << 24;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

/**
 * @type {number}
 * @const
 * @inner
 */
var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

/**
 * @type {!Long}
 * @const
 * @inner
 */
var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

/**
 * @type {!Long}
 * @inner
 */
var ZERO = fromInt(0);

/**
 * Signed zero.
 * @type {!Long}
 */
Long.ZERO = ZERO;

/**
 * @type {!Long}
 * @inner
 */
var UZERO = fromInt(0, true);

/**
 * Unsigned zero.
 * @type {!Long}
 */
Long.UZERO = UZERO;

/**
 * @type {!Long}
 * @inner
 */
var ONE = fromInt(1);

/**
 * Signed one.
 * @type {!Long}
 */
Long.ONE = ONE;

/**
 * @type {!Long}
 * @inner
 */
var UONE = fromInt(1, true);

/**
 * Unsigned one.
 * @type {!Long}
 */
Long.UONE = UONE;

/**
 * @type {!Long}
 * @inner
 */
var NEG_ONE = fromInt(-1);

/**
 * Signed negative one.
 * @type {!Long}
 */
Long.NEG_ONE = NEG_ONE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);

/**
 * Maximum signed value.
 * @type {!Long}
 */
Long.MAX_VALUE = MAX_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);

/**
 * Maximum unsigned value.
 * @type {!Long}
 */
Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

/**
 * @type {!Long}
 * @inner
 */
var MIN_VALUE = fromBits(0, 0x80000000|0, false);

/**
 * Minimum signed value.
 * @type {!Long}
 */
Long.MIN_VALUE = MIN_VALUE;

/**
 * @alias Long.prototype
 * @inner
 */
var LongPrototype = Long.prototype;

/**
 * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
 * @returns {number}
 */
LongPrototype.toInt = function toInt() {
    return this.unsigned ? this.low >>> 0 : this.low;
};

/**
 * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
 * @returns {number}
 */
LongPrototype.toNumber = function toNumber() {
    if (this.unsigned)
        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
};

/**
 * Converts the Long to a string written in the specified radix.
 * @param {number=} radix Radix (2-36), defaults to 10
 * @returns {string}
 * @override
 * @throws {RangeError} If `radix` is out of range
 */
LongPrototype.toString = function toString(radix) {
    radix = radix || 10;
    if (radix < 2 || 36 < radix)
        throw RangeError('radix');
    if (this.isZero())
        return '0';
    if (this.isNegative()) { // Unsigned Longs are never negative
        if (this.eq(MIN_VALUE)) {
            // We need to change the Long value before it can be negated, so we remove
            // the bottom-most digit in this base and then recurse to do the rest.
            var radixLong = fromNumber(radix),
                div = this.div(radixLong),
                rem1 = div.mul(radixLong).sub(this);
            return div.toString(radix) + rem1.toInt().toString(radix);
        } else
            return '-' + this.neg().toString(radix);
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
        rem = this;
    var result = '';
    while (true) {
        var remDiv = rem.div(radixToPower),
            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
            digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
            return digits + result;
        else {
            while (digits.length < 6)
                digits = '0' + digits;
            result = '' + digits + result;
        }
    }
};

/**
 * Gets the high 32 bits as a signed integer.
 * @returns {number} Signed high bits
 */
LongPrototype.getHighBits = function getHighBits() {
    return this.high;
};

/**
 * Gets the high 32 bits as an unsigned integer.
 * @returns {number} Unsigned high bits
 */
LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
    return this.high >>> 0;
};

/**
 * Gets the low 32 bits as a signed integer.
 * @returns {number} Signed low bits
 */
LongPrototype.getLowBits = function getLowBits() {
    return this.low;
};

/**
 * Gets the low 32 bits as an unsigned integer.
 * @returns {number} Unsigned low bits
 */
LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
    return this.low >>> 0;
};

/**
 * Gets the number of bits needed to represent the absolute value of this Long.
 * @returns {number}
 */
LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
    if (this.isNegative()) // Unsigned Longs are never negative
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
    var val = this.high != 0 ? this.high : this.low;
    for (var bit = 31; bit > 0; bit--)
        if ((val & (1 << bit)) != 0)
            break;
    return this.high != 0 ? bit + 33 : bit + 1;
};

/**
 * Tests if this Long's value equals zero.
 * @returns {boolean}
 */
LongPrototype.isZero = function isZero() {
    return this.high === 0 && this.low === 0;
};

/**
 * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.
 * @returns {boolean}
 */
LongPrototype.eqz = LongPrototype.isZero;

/**
 * Tests if this Long's value is negative.
 * @returns {boolean}
 */
LongPrototype.isNegative = function isNegative() {
    return !this.unsigned && this.high < 0;
};

/**
 * Tests if this Long's value is positive.
 * @returns {boolean}
 */
LongPrototype.isPositive = function isPositive() {
    return this.unsigned || this.high >= 0;
};

/**
 * Tests if this Long's value is odd.
 * @returns {boolean}
 */
LongPrototype.isOdd = function isOdd() {
    return (this.low & 1) === 1;
};

/**
 * Tests if this Long's value is even.
 * @returns {boolean}
 */
LongPrototype.isEven = function isEven() {
    return (this.low & 1) === 0;
};

/**
 * Tests if this Long's value equals the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.equals = function equals(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
        return false;
    return this.high === other.high && this.low === other.low;
};

/**
 * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.eq = LongPrototype.equals;

/**
 * Tests if this Long's value differs from the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.notEquals = function notEquals(other) {
    return !this.eq(/* validates */ other);
};

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.neq = LongPrototype.notEquals;

/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ne = LongPrototype.notEquals;

/**
 * Tests if this Long's value is less than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThan = function lessThan(other) {
    return this.comp(/* validates */ other) < 0;
};

/**
 * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lt = LongPrototype.lessThan;

/**
 * Tests if this Long's value is less than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
    return this.comp(/* validates */ other) <= 0;
};

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.lte = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.le = LongPrototype.lessThanOrEqual;

/**
 * Tests if this Long's value is greater than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThan = function greaterThan(other) {
    return this.comp(/* validates */ other) > 0;
};

/**
 * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gt = LongPrototype.greaterThan;

/**
 * Tests if this Long's value is greater than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
    return this.comp(/* validates */ other) >= 0;
};

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.gte = LongPrototype.greaterThanOrEqual;

/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */
LongPrototype.ge = LongPrototype.greaterThanOrEqual;

/**
 * Compares this Long's value with the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.compare = function compare(other) {
    if (!isLong(other))
        other = fromValue(other);
    if (this.eq(other))
        return 0;
    var thisNeg = this.isNegative(),
        otherNeg = other.isNegative();
    if (thisNeg && !otherNeg)
        return -1;
    if (!thisNeg && otherNeg)
        return 1;
    // At this point the sign bits are the same
    if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
    // Both are positive if at least one is unsigned
    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
};

/**
 * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */
LongPrototype.comp = LongPrototype.compare;

/**
 * Negates this Long's value.
 * @returns {!Long} Negated Long
 */
LongPrototype.negate = function negate() {
    if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
    return this.not().add(ONE);
};

/**
 * Negates this Long's value. This is an alias of {@link Long#negate}.
 * @function
 * @returns {!Long} Negated Long
 */
LongPrototype.neg = LongPrototype.negate;

/**
 * Returns the sum of this and the specified Long.
 * @param {!Long|number|string} addend Addend
 * @returns {!Long} Sum
 */
LongPrototype.add = function add(addend) {
    if (!isLong(addend))
        addend = fromValue(addend);

    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = addend.high >>> 16;
    var b32 = addend.high & 0xFFFF;
    var b16 = addend.low >>> 16;
    var b00 = addend.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the difference of this and the specified Long.
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.subtract = function subtract(subtrahend) {
    if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
    return this.add(subtrahend.neg());
};

/**
 * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
 * @function
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */
LongPrototype.sub = LongPrototype.subtract;

/**
 * Returns the product of this and the specified Long.
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.multiply = function multiply(multiplier) {
    if (this.isZero())
        return ZERO;
    if (!isLong(multiplier))
        multiplier = fromValue(multiplier);

    // use wasm support if present
    if (wasm) {
        var low = wasm.mul(this.low,
                           this.high,
                           multiplier.low,
                           multiplier.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (multiplier.isZero())
        return ZERO;
    if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
    if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;

    if (this.isNegative()) {
        if (multiplier.isNegative())
            return this.neg().mul(multiplier.neg());
        else
            return this.neg().mul(multiplier).neg();
    } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();

    // If both longs are small, use float multiplication
    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high >>> 16;
    var a32 = this.high & 0xFFFF;
    var a16 = this.low >>> 16;
    var a00 = this.low & 0xFFFF;

    var b48 = multiplier.high >>> 16;
    var b32 = multiplier.high & 0xFFFF;
    var b16 = multiplier.low >>> 16;
    var b00 = multiplier.low & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
};

/**
 * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
 * @function
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */
LongPrototype.mul = LongPrototype.multiply;

/**
 * Returns this Long divided by the specified. The result is signed if this Long is signed or
 *  unsigned if this Long is unsigned.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.divide = function divide(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);
    if (divisor.isZero())
        throw Error('division by zero');

    // use wasm support if present
    if (wasm) {
        // guard against signed division overflow: the largest
        // negative number / -1 would be 1 larger than the largest
        // positive number, due to two's complement.
        if (!this.unsigned &&
            this.high === -0x80000000 &&
            divisor.low === -1 && divisor.high === -1) {
            // be consistent with non-wasm code path
            return this;
        }
        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
    var approx, rem, res;
    if (!this.unsigned) {
        // This section is only relevant for signed longs and is derived from the
        // closure library as a whole.
        if (this.eq(MIN_VALUE)) {
            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
            else if (divisor.eq(MIN_VALUE))
                return ONE;
            else {
                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
                var halfThis = this.shr(1);
                approx = halfThis.div(divisor).shl(1);
                if (approx.eq(ZERO)) {
                    return divisor.isNegative() ? ONE : NEG_ONE;
                } else {
                    rem = this.sub(divisor.mul(approx));
                    res = approx.add(rem.div(divisor));
                    return res;
                }
            }
        } else if (divisor.eq(MIN_VALUE))
            return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
            if (divisor.isNegative())
                return this.neg().div(divisor.neg());
            return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
            return this.div(divisor.neg()).neg();
        res = ZERO;
    } else {
        // The algorithm below has not been made for unsigned longs. It's therefore
        // required to take special care of the MSB prior to running it.
        if (!divisor.unsigned)
            divisor = divisor.toUnsigned();
        if (divisor.gt(this))
            return UZERO;
        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
            return UONE;
        res = UZERO;
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    rem = this;
    while (rem.gte(divisor)) {
        // Approximate the result of division. This may be a little greater or
        // smaller than the actual value.
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

        // We will tweak the approximate result by changing it in the 48-th digit or
        // the smallest non-fractional digit, whichever is larger.
        var log2 = Math.ceil(Math.log(approx) / Math.LN2),
            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

        // Decrease the approximation until it is smaller than the remainder.  Note
        // that if it is too large, the product overflows and is negative.
            approxRes = fromNumber(approx),
            approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
            approx -= delta;
            approxRes = fromNumber(approx, this.unsigned);
            approxRem = approxRes.mul(divisor);
        }

        // We know the answer can't be zero... and actually, zero would cause
        // infinite recursion since we would make no progress.
        if (approxRes.isZero())
            approxRes = ONE;

        res = res.add(approxRes);
        rem = rem.sub(approxRem);
    }
    return res;
};

/**
 * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */
LongPrototype.div = LongPrototype.divide;

/**
 * Returns this Long modulo the specified.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.modulo = function modulo(divisor) {
    if (!isLong(divisor))
        divisor = fromValue(divisor);

    // use wasm support if present
    if (wasm) {
        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(
            this.low,
            this.high,
            divisor.low,
            divisor.high
        );
        return fromBits(low, wasm.get_high(), this.unsigned);
    }

    return this.sub(this.div(divisor).mul(divisor));
};

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.mod = LongPrototype.modulo;

/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */
LongPrototype.rem = LongPrototype.modulo;

/**
 * Returns the bitwise NOT of this Long.
 * @returns {!Long}
 */
LongPrototype.not = function not() {
    return fromBits(~this.low, ~this.high, this.unsigned);
};

/**
 * Returns the bitwise AND of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.and = function and(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
};

/**
 * Returns the bitwise OR of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.or = function or(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
};

/**
 * Returns the bitwise XOR of this Long and the given one.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */
LongPrototype.xor = function xor(other) {
    if (!isLong(other))
        other = fromValue(other);
    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftLeft = function shiftLeft(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
    else
        return fromBits(0, this.low << (numBits - 32), this.unsigned);
};

/**
 * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shl = LongPrototype.shiftLeft;

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRight = function shiftRight(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    if ((numBits &= 63) === 0)
        return this;
    else if (numBits < 32)
        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
    else
        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
};

/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr = LongPrototype.shiftRight;

/**
 * Returns this Long with bits logically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
    if (isLong(numBits))
        numBits = numBits.toInt();
    numBits &= 63;
    if (numBits === 0)
        return this;
    else {
        var high = this.high;
        if (numBits < 32) {
            var low = this.low;
            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);
        } else if (numBits === 32)
            return fromBits(high, 0, this.unsigned);
        else
            return fromBits(high >>> (numBits - 32), 0, this.unsigned);
    }
};

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shru = LongPrototype.shiftRightUnsigned;

/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */
LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;

/**
 * Converts this Long to signed.
 * @returns {!Long} Signed long
 */
LongPrototype.toSigned = function toSigned() {
    if (!this.unsigned)
        return this;
    return fromBits(this.low, this.high, false);
};

/**
 * Converts this Long to unsigned.
 * @returns {!Long} Unsigned long
 */
LongPrototype.toUnsigned = function toUnsigned() {
    if (this.unsigned)
        return this;
    return fromBits(this.low, this.high, true);
};

/**
 * Converts this Long to its byte representation.
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {!Array.<number>} Byte representation
 */
LongPrototype.toBytes = function toBytes(le) {
    return le ? this.toBytesLE() : this.toBytesBE();
};

/**
 * Converts this Long to its little endian byte representation.
 * @returns {!Array.<number>} Little endian byte representation
 */
LongPrototype.toBytesLE = function toBytesLE() {
    var hi = this.high,
        lo = this.low;
    return [
        lo        & 0xff,
        lo >>>  8 & 0xff,
        lo >>> 16 & 0xff,
        lo >>> 24       ,
        hi        & 0xff,
        hi >>>  8 & 0xff,
        hi >>> 16 & 0xff,
        hi >>> 24
    ];
};

/**
 * Converts this Long to its big endian byte representation.
 * @returns {!Array.<number>} Big endian byte representation
 */
LongPrototype.toBytesBE = function toBytesBE() {
    var hi = this.high,
        lo = this.low;
    return [
        hi >>> 24       ,
        hi >>> 16 & 0xff,
        hi >>>  8 & 0xff,
        hi        & 0xff,
        lo >>> 24       ,
        lo >>> 16 & 0xff,
        lo >>>  8 & 0xff,
        lo        & 0xff
    ];
};

/**
 * Creates a Long from its byte representation.
 * @param {!Array.<number>} bytes Byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {Long} The corresponding Long value
 */
Long.fromBytes = function fromBytes(bytes, unsigned, le) {
    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
};

/**
 * Creates a Long from its little endian byte representation.
 * @param {!Array.<number>} bytes Little endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
    return new Long(
        bytes[0]       |
        bytes[1] <<  8 |
        bytes[2] << 16 |
        bytes[3] << 24,
        bytes[4]       |
        bytes[5] <<  8 |
        bytes[6] << 16 |
        bytes[7] << 24,
        unsigned
    );
};

/**
 * Creates a Long from its big endian byte representation.
 * @param {!Array.<number>} bytes Big endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */
Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
    return new Long(
        bytes[4] << 24 |
        bytes[5] << 16 |
        bytes[6] <<  8 |
        bytes[7],
        bytes[0] << 24 |
        bytes[1] << 16 |
        bytes[2] <<  8 |
        bytes[3],
        unsigned
    );
};

var aspromise = asPromise;

/**
 * Callback as used by {@link util.asPromise}.
 * @typedef asPromiseCallback
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {...*} params Additional arguments
 * @returns {undefined}
 */

/**
 * Returns a promise from a node-style callback function.
 * @memberof util
 * @param {asPromiseCallback} fn Function to call
 * @param {*} ctx Function context
 * @param {...*} params Function arguments
 * @returns {Promise<*>} Promisified function
 */
function asPromise(fn, ctx/*, varargs */) {
    var params  = new Array(arguments.length - 1),
        offset  = 0,
        index   = 2,
        pending = true;
    while (index < arguments.length)
        params[offset++] = arguments[index++];
    return new Promise(function executor(resolve, reject) {
        params[offset] = function callback(err/*, varargs */) {
            if (pending) {
                pending = false;
                if (err)
                    reject(err);
                else {
                    var params = new Array(arguments.length - 1),
                        offset = 0;
                    while (offset < params.length)
                        params[offset++] = arguments[offset];
                    resolve.apply(null, params);
                }
            }
        };
        try {
            fn.apply(ctx || null, params);
        } catch (err) {
            if (pending) {
                pending = false;
                reject(err);
            }
        }
    });
}

var base64_1 = createCommonjsModule(function (module, exports) {

/**
 * A minimal base64 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var base64 = exports;

/**
 * Calculates the byte length of a base64 encoded string.
 * @param {string} string Base64 encoded string
 * @returns {number} Byte length
 */
base64.length = function length(string) {
    var p = string.length;
    if (!p)
        return 0;
    var n = 0;
    while (--p % 4 > 1 && string.charAt(p) === "=")
        ++n;
    return Math.ceil(string.length * 3) / 4 - n;
};

// Base64 encoding table
var b64 = new Array(64);

// Base64 decoding table
var s64 = new Array(123);

// 65..90, 97..122, 48..57, 43, 47
for (var i = 0; i < 64;)
    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;

/**
 * Encodes a buffer to a base64 encoded string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} Base64 encoded string
 */
base64.encode = function encode(buffer, start, end) {
    var parts = null,
        chunk = [];
    var i = 0, // output index
        j = 0, // goto index
        t;     // temporary
    while (start < end) {
        var b = buffer[start++];
        switch (j) {
            case 0:
                chunk[i++] = b64[b >> 2];
                t = (b & 3) << 4;
                j = 1;
                break;
            case 1:
                chunk[i++] = b64[t | b >> 4];
                t = (b & 15) << 2;
                j = 2;
                break;
            case 2:
                chunk[i++] = b64[t | b >> 6];
                chunk[i++] = b64[b & 63];
                j = 0;
                break;
        }
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (j) {
        chunk[i++] = b64[t];
        chunk[i++] = 61;
        if (j === 1)
            chunk[i++] = 61;
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

var invalidEncoding = "invalid encoding";

/**
 * Decodes a base64 encoded string to a buffer.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Number of bytes written
 * @throws {Error} If encoding is invalid
 */
base64.decode = function decode(string, buffer, offset) {
    var start = offset;
    var j = 0, // goto index
        t;     // temporary
    for (var i = 0; i < string.length;) {
        var c = string.charCodeAt(i++);
        if (c === 61 && j > 1)
            break;
        if ((c = s64[c]) === undefined)
            throw Error(invalidEncoding);
        switch (j) {
            case 0:
                t = c;
                j = 1;
                break;
            case 1:
                buffer[offset++] = t << 2 | (c & 48) >> 4;
                t = c;
                j = 2;
                break;
            case 2:
                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;
                t = c;
                j = 3;
                break;
            case 3:
                buffer[offset++] = (t & 3) << 6 | c;
                j = 0;
                break;
        }
    }
    if (j === 1)
        throw Error(invalidEncoding);
    return offset - start;
};

/**
 * Tests if the specified string appears to be base64 encoded.
 * @param {string} string String to test
 * @returns {boolean} `true` if probably base64 encoded, otherwise false
 */
base64.test = function test(string) {
    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
};
});

var eventemitter = EventEmitter;

/**
 * Constructs a new event emitter instance.
 * @classdesc A minimal event emitter.
 * @memberof util
 * @constructor
 */
function EventEmitter() {

    /**
     * Registered listeners.
     * @type {Object.<string,*>}
     * @private
     */
    this._listeners = {};
}

/**
 * Registers an event listener.
 * @param {string} evt Event name
 * @param {function} fn Listener
 * @param {*} [ctx] Listener context
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.on = function on(evt, fn, ctx) {
    (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn  : fn,
        ctx : ctx || this
    });
    return this;
};

/**
 * Removes an event listener or any matching listeners if arguments are omitted.
 * @param {string} [evt] Event name. Removes all listeners if omitted.
 * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.off = function off(evt, fn) {
    if (evt === undefined)
        this._listeners = {};
    else {
        if (fn === undefined)
            this._listeners[evt] = [];
        else {
            var listeners = this._listeners[evt];
            for (var i = 0; i < listeners.length;)
                if (listeners[i].fn === fn)
                    listeners.splice(i, 1);
                else
                    ++i;
        }
    }
    return this;
};

/**
 * Emits an event by calling its listeners with the specified arguments.
 * @param {string} evt Event name
 * @param {...*} args Arguments
 * @returns {util.EventEmitter} `this`
 */
EventEmitter.prototype.emit = function emit(evt) {
    var listeners = this._listeners[evt];
    if (listeners) {
        var args = [],
            i = 1;
        for (; i < arguments.length;)
            args.push(arguments[i++]);
        for (i = 0; i < listeners.length;)
            listeners[i].fn.apply(listeners[i++].ctx, args);
    }
    return this;
};

var float_1 = factory(factory);

/**
 * Reads / writes floats / doubles from / to buffers.
 * @name util.float
 * @namespace
 */

/**
 * Writes a 32 bit float to a buffer using little endian byte order.
 * @name util.float.writeFloatLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 32 bit float to a buffer using big endian byte order.
 * @name util.float.writeFloatBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 32 bit float from a buffer using little endian byte order.
 * @name util.float.readFloatLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 32 bit float from a buffer using big endian byte order.
 * @name util.float.readFloatBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Writes a 64 bit double to a buffer using little endian byte order.
 * @name util.float.writeDoubleLE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Writes a 64 bit double to a buffer using big endian byte order.
 * @name util.float.writeDoubleBE
 * @function
 * @param {number} val Value to write
 * @param {Uint8Array} buf Target buffer
 * @param {number} pos Target buffer offset
 * @returns {undefined}
 */

/**
 * Reads a 64 bit double from a buffer using little endian byte order.
 * @name util.float.readDoubleLE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

/**
 * Reads a 64 bit double from a buffer using big endian byte order.
 * @name util.float.readDoubleBE
 * @function
 * @param {Uint8Array} buf Source buffer
 * @param {number} pos Source buffer offset
 * @returns {number} Value read
 */

// Factory function for the purpose of node-based testing in modified global environments
function factory(exports) {

    // float: typed array
    if (typeof Float32Array !== "undefined") (function() {

        var f32 = new Float32Array([ -0 ]),
            f8b = new Uint8Array(f32.buffer),
            le  = f8b[3] === 128;

        function writeFloat_f32_cpy(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
        }

        function writeFloat_f32_rev(val, buf, pos) {
            f32[0] = val;
            buf[pos    ] = f8b[3];
            buf[pos + 1] = f8b[2];
            buf[pos + 2] = f8b[1];
            buf[pos + 3] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
        /* istanbul ignore next */
        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;

        function readFloat_f32_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            return f32[0];
        }

        function readFloat_f32_rev(buf, pos) {
            f8b[3] = buf[pos    ];
            f8b[2] = buf[pos + 1];
            f8b[1] = buf[pos + 2];
            f8b[0] = buf[pos + 3];
            return f32[0];
        }

        /* istanbul ignore next */
        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
        /* istanbul ignore next */
        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;

    // float: ieee754
    })(); else (function() {

        function writeFloat_ieee754(writeUint, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0)
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);
            else if (isNaN(val))
                writeUint(2143289344, buf, pos);
            else if (val > 3.4028234663852886e+38) // +-Infinity
                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);
            else if (val < 1.1754943508222875e-38) // denormal
                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);
            else {
                var exponent = Math.floor(Math.log(val) / Math.LN2),
                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;
                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
            }
        }

        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);

        function readFloat_ieee754(readUint, buf, pos) {
            var uint = readUint(buf, pos),
                sign = (uint >> 31) * 2 + 1,
                exponent = uint >>> 23 & 255,
                mantissa = uint & 8388607;
            return exponent === 255
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 1.401298464324817e-45 * mantissa
                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }

        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);

    })();

    // double: typed array
    if (typeof Float64Array !== "undefined") (function() {

        var f64 = new Float64Array([-0]),
            f8b = new Uint8Array(f64.buffer),
            le  = f8b[7] === 128;

        function writeDouble_f64_cpy(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[0];
            buf[pos + 1] = f8b[1];
            buf[pos + 2] = f8b[2];
            buf[pos + 3] = f8b[3];
            buf[pos + 4] = f8b[4];
            buf[pos + 5] = f8b[5];
            buf[pos + 6] = f8b[6];
            buf[pos + 7] = f8b[7];
        }

        function writeDouble_f64_rev(val, buf, pos) {
            f64[0] = val;
            buf[pos    ] = f8b[7];
            buf[pos + 1] = f8b[6];
            buf[pos + 2] = f8b[5];
            buf[pos + 3] = f8b[4];
            buf[pos + 4] = f8b[3];
            buf[pos + 5] = f8b[2];
            buf[pos + 6] = f8b[1];
            buf[pos + 7] = f8b[0];
        }

        /* istanbul ignore next */
        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
        /* istanbul ignore next */
        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;

        function readDouble_f64_cpy(buf, pos) {
            f8b[0] = buf[pos    ];
            f8b[1] = buf[pos + 1];
            f8b[2] = buf[pos + 2];
            f8b[3] = buf[pos + 3];
            f8b[4] = buf[pos + 4];
            f8b[5] = buf[pos + 5];
            f8b[6] = buf[pos + 6];
            f8b[7] = buf[pos + 7];
            return f64[0];
        }

        function readDouble_f64_rev(buf, pos) {
            f8b[7] = buf[pos    ];
            f8b[6] = buf[pos + 1];
            f8b[5] = buf[pos + 2];
            f8b[4] = buf[pos + 3];
            f8b[3] = buf[pos + 4];
            f8b[2] = buf[pos + 5];
            f8b[1] = buf[pos + 6];
            f8b[0] = buf[pos + 7];
            return f64[0];
        }

        /* istanbul ignore next */
        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
        /* istanbul ignore next */
        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;

    // double: ieee754
    })(); else (function() {

        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
            var sign = val < 0 ? 1 : 0;
            if (sign)
                val = -val;
            if (val === 0) {
                writeUint(0, buf, pos + off0);
                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);
            } else if (isNaN(val)) {
                writeUint(0, buf, pos + off0);
                writeUint(2146959360, buf, pos + off1);
            } else if (val > 1.7976931348623157e+308) { // +-Infinity
                writeUint(0, buf, pos + off0);
                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
            } else {
                var mantissa;
                if (val < 2.2250738585072014e-308) { // denormal
                    mantissa = val / 5e-324;
                    writeUint(mantissa >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
                } else {
                    var exponent = Math.floor(Math.log(val) / Math.LN2);
                    if (exponent === 1024)
                        exponent = 1023;
                    mantissa = val * Math.pow(2, -exponent);
                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);
                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);
                }
            }
        }

        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);

        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
            var lo = readUint(buf, pos + off0),
                hi = readUint(buf, pos + off1);
            var sign = (hi >> 31) * 2 + 1,
                exponent = hi >>> 20 & 2047,
                mantissa = 4294967296 * (hi & 1048575) + lo;
            return exponent === 2047
                ? mantissa
                ? NaN
                : sign * Infinity
                : exponent === 0 // denormal
                ? sign * 5e-324 * mantissa
                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }

        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);

    })();

    return exports;
}

// uint helpers

function writeUintLE(val, buf, pos) {
    buf[pos    ] =  val        & 255;
    buf[pos + 1] =  val >>> 8  & 255;
    buf[pos + 2] =  val >>> 16 & 255;
    buf[pos + 3] =  val >>> 24;
}

function writeUintBE(val, buf, pos) {
    buf[pos    ] =  val >>> 24;
    buf[pos + 1] =  val >>> 16 & 255;
    buf[pos + 2] =  val >>> 8  & 255;
    buf[pos + 3] =  val        & 255;
}

function readUintLE(buf, pos) {
    return (buf[pos    ]
          | buf[pos + 1] << 8
          | buf[pos + 2] << 16
          | buf[pos + 3] << 24) >>> 0;
}

function readUintBE(buf, pos) {
    return (buf[pos    ] << 24
          | buf[pos + 1] << 16
          | buf[pos + 2] << 8
          | buf[pos + 3]) >>> 0;
}

var inquire_1 = inquire;

/**
 * Requires a module only if available.
 * @memberof util
 * @param {string} moduleName Module to require
 * @returns {?Object} Required module if available and not empty, otherwise `null`
 */
function inquire(moduleName) {
    try {
        var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval
        if (mod && (mod.length || Object.keys(mod).length))
            return mod;
    } catch (e) {} // eslint-disable-line no-empty
    return null;
}

var utf8_1 = createCommonjsModule(function (module, exports) {

/**
 * A minimal UTF8 implementation for number arrays.
 * @memberof util
 * @namespace
 */
var utf8 = exports;

/**
 * Calculates the UTF8 byte length of a string.
 * @param {string} string String
 * @returns {number} Byte length
 */
utf8.length = function utf8_length(string) {
    var len = 0,
        c = 0;
    for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128)
            len += 1;
        else if (c < 2048)
            len += 2;
        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
            ++i;
            len += 4;
        } else
            len += 3;
    }
    return len;
};

/**
 * Reads UTF8 bytes as a string.
 * @param {Uint8Array} buffer Source buffer
 * @param {number} start Source start
 * @param {number} end Source end
 * @returns {string} String read
 */
utf8.read = function utf8_read(buffer, start, end) {
    var len = end - start;
    if (len < 1)
        return "";
    var parts = null,
        chunk = [],
        i = 0, // char offset
        t;     // temporary
    while (start < end) {
        t = buffer[start++];
        if (t < 128)
            chunk[i++] = t;
        else if (t > 191 && t < 224)
            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;
        else if (t > 239 && t < 365) {
            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;
            chunk[i++] = 0xD800 + (t >> 10);
            chunk[i++] = 0xDC00 + (t & 1023);
        } else
            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;
        if (i > 8191) {
            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
            i = 0;
        }
    }
    if (parts) {
        if (i)
            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i));
};

/**
 * Writes a string as UTF8 bytes.
 * @param {string} string Source string
 * @param {Uint8Array} buffer Destination buffer
 * @param {number} offset Destination offset
 * @returns {number} Bytes written
 */
utf8.write = function utf8_write(string, buffer, offset) {
    var start = offset,
        c1, // character 1
        c2; // character 2
    for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) {
            buffer[offset++] = c1;
        } else if (c1 < 2048) {
            buffer[offset++] = c1 >> 6       | 192;
            buffer[offset++] = c1       & 63 | 128;
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
            ++i;
            buffer[offset++] = c1 >> 18      | 240;
            buffer[offset++] = c1 >> 12 & 63 | 128;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        } else {
            buffer[offset++] = c1 >> 12      | 224;
            buffer[offset++] = c1 >> 6  & 63 | 128;
            buffer[offset++] = c1       & 63 | 128;
        }
    }
    return offset - start;
};
});

var pool_1 = pool;

/**
 * An allocator as used by {@link util.pool}.
 * @typedef PoolAllocator
 * @type {function}
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */

/**
 * A slicer as used by {@link util.pool}.
 * @typedef PoolSlicer
 * @type {function}
 * @param {number} start Start offset
 * @param {number} end End offset
 * @returns {Uint8Array} Buffer slice
 * @this {Uint8Array}
 */

/**
 * A general purpose buffer pool.
 * @memberof util
 * @function
 * @param {PoolAllocator} alloc Allocator
 * @param {PoolSlicer} slice Slicer
 * @param {number} [size=8192] Slab size
 * @returns {PoolAllocator} Pooled allocator
 */
function pool(alloc, slice, size) {
    var SIZE   = size || 8192;
    var MAX    = SIZE >>> 1;
    var slab   = null;
    var offset = SIZE;
    return function pool_alloc(size) {
        if (size < 1 || size > MAX)
            return alloc(size);
        if (offset + size > SIZE) {
            slab = alloc(SIZE);
            offset = 0;
        }
        var buf = slice.call(slab, offset, offset += size);
        if (offset & 7) // align to 32 bit
            offset = (offset | 7) + 1;
        return buf;
    };
}

var longbits = LongBits$2;



/**
 * Constructs new long bits.
 * @classdesc Helper class for working with the low and high bits of a 64 bit value.
 * @memberof util
 * @constructor
 * @param {number} lo Low 32 bits, unsigned
 * @param {number} hi High 32 bits, unsigned
 */
function LongBits$2(lo, hi) {

    // note that the casts below are theoretically unnecessary as of today, but older statically
    // generated converter code might still call the ctor with signed 32bits. kept for compat.

    /**
     * Low bits.
     * @type {number}
     */
    this.lo = lo >>> 0;

    /**
     * High bits.
     * @type {number}
     */
    this.hi = hi >>> 0;
}

/**
 * Zero bits.
 * @memberof util.LongBits
 * @type {util.LongBits}
 */
var zero = LongBits$2.zero = new LongBits$2(0, 0);

zero.toNumber = function() { return 0; };
zero.zzEncode = zero.zzDecode = function() { return this; };
zero.length = function() { return 1; };

/**
 * Zero hash.
 * @memberof util.LongBits
 * @type {string}
 */
var zeroHash = LongBits$2.zeroHash = "\0\0\0\0\0\0\0\0";

/**
 * Constructs new long bits from the specified number.
 * @param {number} value Value
 * @returns {util.LongBits} Instance
 */
LongBits$2.fromNumber = function fromNumber(value) {
    if (value === 0)
        return zero;
    var sign = value < 0;
    if (sign)
        value = -value;
    var lo = value >>> 0,
        hi = (value - lo) / 4294967296 >>> 0;
    if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
            lo = 0;
            if (++hi > 4294967295)
                hi = 0;
        }
    }
    return new LongBits$2(lo, hi);
};

/**
 * Constructs new long bits from a number, long or string.
 * @param {Long|number|string} value Value
 * @returns {util.LongBits} Instance
 */
LongBits$2.from = function from(value) {
    if (typeof value === "number")
        return LongBits$2.fromNumber(value);
    if (require$$4.isString(value)) {
        /* istanbul ignore else */
        if (require$$4.Long)
            value = require$$4.Long.fromString(value);
        else
            return LongBits$2.fromNumber(parseInt(value, 10));
    }
    return value.low || value.high ? new LongBits$2(value.low >>> 0, value.high >>> 0) : zero;
};

/**
 * Converts this long bits to a possibly unsafe JavaScript number.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {number} Possibly unsafe number
 */
LongBits$2.prototype.toNumber = function toNumber(unsigned) {
    if (!unsigned && this.hi >>> 31) {
        var lo = ~this.lo + 1 >>> 0,
            hi = ~this.hi     >>> 0;
        if (!lo)
            hi = hi + 1 >>> 0;
        return -(lo + hi * 4294967296);
    }
    return this.lo + this.hi * 4294967296;
};

/**
 * Converts this long bits to a long.
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long} Long
 */
LongBits$2.prototype.toLong = function toLong(unsigned) {
    return require$$4.Long
        ? new require$$4.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))
        /* istanbul ignore next */
        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };
};

var charCodeAt = String.prototype.charCodeAt;

/**
 * Constructs new long bits from the specified 8 characters long hash.
 * @param {string} hash Hash
 * @returns {util.LongBits} Bits
 */
LongBits$2.fromHash = function fromHash(hash) {
    if (hash === zeroHash)
        return zero;
    return new LongBits$2(
        ( charCodeAt.call(hash, 0)
        | charCodeAt.call(hash, 1) << 8
        | charCodeAt.call(hash, 2) << 16
        | charCodeAt.call(hash, 3) << 24) >>> 0
    ,
        ( charCodeAt.call(hash, 4)
        | charCodeAt.call(hash, 5) << 8
        | charCodeAt.call(hash, 6) << 16
        | charCodeAt.call(hash, 7) << 24) >>> 0
    );
};

/**
 * Converts this long bits to a 8 characters long hash.
 * @returns {string} Hash
 */
LongBits$2.prototype.toHash = function toHash() {
    return String.fromCharCode(
        this.lo        & 255,
        this.lo >>> 8  & 255,
        this.lo >>> 16 & 255,
        this.lo >>> 24      ,
        this.hi        & 255,
        this.hi >>> 8  & 255,
        this.hi >>> 16 & 255,
        this.hi >>> 24
    );
};

/**
 * Zig-zag encodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits$2.prototype.zzEncode = function zzEncode() {
    var mask =   this.hi >> 31;
    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;
    return this;
};

/**
 * Zig-zag decodes this long bits.
 * @returns {util.LongBits} `this`
 */
LongBits$2.prototype.zzDecode = function zzDecode() {
    var mask = -(this.lo & 1);
    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;
    return this;
};

/**
 * Calculates the length of this longbits when encoded as a varint.
 * @returns {number} Length
 */
LongBits$2.prototype.length = function length() {
    var part0 =  this.lo,
        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,
        part2 =  this.hi >>> 24;
    return part2 === 0
         ? part1 === 0
           ? part0 < 16384
             ? part0 < 128 ? 1 : 2
             : part0 < 2097152 ? 3 : 4
           : part1 < 16384
             ? part1 < 128 ? 5 : 6
             : part1 < 2097152 ? 7 : 8
         : part2 < 128 ? 9 : 10;
};

var minimal$1 = createCommonjsModule(function (module, exports) {
var util = exports;

// used to return a Promise where callback is omitted
util.asPromise = aspromise;

// converts to / from base64 encoded strings
util.base64 = base64_1;

// base class of rpc.Service
util.EventEmitter = eventemitter;

// float handling accross browsers
util.float = float_1;

// requires modules optionally and hides the call from bundlers
util.inquire = inquire_1;

// converts to / from utf8 encoded strings
util.utf8 = utf8_1;

// provides a node-like buffer pool in the browser
util.pool = pool_1;

// utility to work with the low and high bits of a 64 bit value
util.LongBits = longbits;

/**
 * Whether running within node or not.
 * @memberof util
 * @type {boolean}
 */
util.isNode = Boolean(typeof commonjsGlobal !== "undefined"
                   && commonjsGlobal
                   && commonjsGlobal.process
                   && commonjsGlobal.process.versions
                   && commonjsGlobal.process.versions.node);

/**
 * Global object reference.
 * @memberof util
 * @type {Object}
 */
util.global = util.isNode && commonjsGlobal
           || typeof window !== "undefined" && window
           || typeof self   !== "undefined" && self
           || commonjsGlobal; // eslint-disable-line no-invalid-this

/**
 * An immuable empty array.
 * @memberof util
 * @type {Array.<*>}
 * @const
 */
util.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes

/**
 * An immutable empty object.
 * @type {Object}
 * @const
 */
util.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes

/**
 * Tests if the specified value is an integer.
 * @function
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is an integer
 */
util.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {
    return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
};

/**
 * Tests if the specified value is a string.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a string
 */
util.isString = function isString(value) {
    return typeof value === "string" || value instanceof String;
};

/**
 * Tests if the specified value is a non-null object.
 * @param {*} value Value to test
 * @returns {boolean} `true` if the value is a non-null object
 */
util.isObject = function isObject(value) {
    return value && typeof value === "object";
};

/**
 * Checks if a property on a message is considered to be present.
 * This is an alias of {@link util.isSet}.
 * @function
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isset =

/**
 * Checks if a property on a message is considered to be present.
 * @param {Object} obj Plain object or message instance
 * @param {string} prop Property name
 * @returns {boolean} `true` if considered to be present, otherwise `false`
 */
util.isSet = function isSet(obj, prop) {
    var value = obj[prop];
    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins
        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
    return false;
};

/**
 * Any compatible Buffer instance.
 * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.
 * @interface Buffer
 * @extends Uint8Array
 */

/**
 * Node's Buffer class if available.
 * @type {Constructor<Buffer>}
 */
util.Buffer = (function() {
    try {
        var Buffer = util.inquire("buffer").Buffer;
        // refuse to use non-node buffers if not explicitly assigned (perf reasons):
        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;
    } catch (e) {
        /* istanbul ignore next */
        return null;
    }
})();

// Internal alias of or polyfull for Buffer.from.
util._Buffer_from = null;

// Internal alias of or polyfill for Buffer.allocUnsafe.
util._Buffer_allocUnsafe = null;

/**
 * Creates a new buffer of whatever type supported by the environment.
 * @param {number|number[]} [sizeOrArray=0] Buffer size or number array
 * @returns {Uint8Array|Buffer} Buffer
 */
util.newBuffer = function newBuffer(sizeOrArray) {
    /* istanbul ignore next */
    return typeof sizeOrArray === "number"
        ? util.Buffer
            ? util._Buffer_allocUnsafe(sizeOrArray)
            : new util.Array(sizeOrArray)
        : util.Buffer
            ? util._Buffer_from(sizeOrArray)
            : typeof Uint8Array === "undefined"
                ? sizeOrArray
                : new Uint8Array(sizeOrArray);
};

/**
 * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.
 * @type {Constructor<Uint8Array>}
 */
util.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;

/**
 * Any compatible Long instance.
 * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.
 * @interface Long
 * @property {number} low Low bits
 * @property {number} high High bits
 * @property {boolean} unsigned Whether unsigned or not
 */

/**
 * Long.js's Long class if available.
 * @type {Constructor<Long>}
 */
util.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long
         || /* istanbul ignore next */ util.global.Long
         || util.inquire("long");

/**
 * Regular expression used to verify 2 bit (`bool`) map keys.
 * @type {RegExp}
 * @const
 */
util.key2Re = /^true|false|0|1$/;

/**
 * Regular expression used to verify 32 bit (`int32` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;

/**
 * Regular expression used to verify 64 bit (`int64` etc.) map keys.
 * @type {RegExp}
 * @const
 */
util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;

/**
 * Converts a number or long to an 8 characters long hash string.
 * @param {Long|number} value Value to convert
 * @returns {string} Hash
 */
util.longToHash = function longToHash(value) {
    return value
        ? util.LongBits.from(value).toHash()
        : util.LongBits.zeroHash;
};

/**
 * Converts an 8 characters long hash string to a long or number.
 * @param {string} hash Hash
 * @param {boolean} [unsigned=false] Whether unsigned or not
 * @returns {Long|number} Original value
 */
util.longFromHash = function longFromHash(hash, unsigned) {
    var bits = util.LongBits.fromHash(hash);
    if (util.Long)
        return util.Long.fromBits(bits.lo, bits.hi, unsigned);
    return bits.toNumber(Boolean(unsigned));
};

/**
 * Merges the properties of the source object into the destination object.
 * @memberof util
 * @param {Object.<string,*>} dst Destination object
 * @param {Object.<string,*>} src Source object
 * @param {boolean} [ifNotSet=false] Merges only if the key is not already set
 * @returns {Object.<string,*>} Destination object
 */
function merge(dst, src, ifNotSet) { // used by converters
    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)
        if (dst[keys[i]] === undefined || !ifNotSet)
            dst[keys[i]] = src[keys[i]];
    return dst;
}

util.merge = merge;

/**
 * Converts the first character of a string to lower case.
 * @param {string} str String to convert
 * @returns {string} Converted string
 */
util.lcFirst = function lcFirst(str) {
    return str.charAt(0).toLowerCase() + str.substring(1);
};

/**
 * Creates a custom error constructor.
 * @memberof util
 * @param {string} name Error name
 * @returns {Constructor<Error>} Custom error constructor
 */
function newError(name) {

    function CustomError(message, properties) {

        if (!(this instanceof CustomError))
            return new CustomError(message, properties);

        // Error.call(this, message);
        // ^ just returns a new error instance because the ctor can be called as a function

        Object.defineProperty(this, "message", { get: function() { return message; } });

        /* istanbul ignore next */
        if (Error.captureStackTrace) // node
            Error.captureStackTrace(this, CustomError);
        else
            Object.defineProperty(this, "stack", { value: new Error().stack || "" });

        if (properties)
            merge(this, properties);
    }

    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;

    Object.defineProperty(CustomError.prototype, "name", { get: function() { return name; } });

    CustomError.prototype.toString = function toString() {
        return this.name + ": " + this.message;
    };

    return CustomError;
}

util.newError = newError;

/**
 * Constructs a new protocol error.
 * @classdesc Error subclass indicating a protocol specifc error.
 * @memberof util
 * @extends Error
 * @template T extends Message<T>
 * @constructor
 * @param {string} message Error message
 * @param {Object.<string,*>} [properties] Additional properties
 * @example
 * try {
 *     MyMessage.decode(someBuffer); // throws if required fields are missing
 * } catch (e) {
 *     if (e instanceof ProtocolError && e.instance)
 *         console.log("decoded so far: " + JSON.stringify(e.instance));
 * }
 */
util.ProtocolError = newError("ProtocolError");

/**
 * So far decoded message instance.
 * @name util.ProtocolError#instance
 * @type {Message<T>}
 */

/**
 * A OneOf getter as returned by {@link util.oneOfGetter}.
 * @typedef OneOfGetter
 * @type {function}
 * @returns {string|undefined} Set field name, if any
 */

/**
 * Builds a getter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfGetter} Unbound getter
 */
util.oneOfGetter = function getOneOf(fieldNames) {
    var fieldMap = {};
    for (var i = 0; i < fieldNames.length; ++i)
        fieldMap[fieldNames[i]] = 1;

    /**
     * @returns {string|undefined} Set field name, if any
     * @this Object
     * @ignore
     */
    return function() { // eslint-disable-line consistent-return
        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)
            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)
                return keys[i];
    };
};

/**
 * A OneOf setter as returned by {@link util.oneOfSetter}.
 * @typedef OneOfSetter
 * @type {function}
 * @param {string|undefined} value Field name
 * @returns {undefined}
 */

/**
 * Builds a setter for a oneof's present field name.
 * @param {string[]} fieldNames Field names
 * @returns {OneOfSetter} Unbound setter
 */
util.oneOfSetter = function setOneOf(fieldNames) {

    /**
     * @param {string} name Field name
     * @returns {undefined}
     * @this Object
     * @ignore
     */
    return function(name) {
        for (var i = 0; i < fieldNames.length; ++i)
            if (fieldNames[i] !== name)
                delete this[fieldNames[i]];
    };
};

/**
 * Default conversion options used for {@link Message#toJSON} implementations.
 *
 * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:
 *
 * - Longs become strings
 * - Enums become string keys
 * - Bytes become base64 encoded strings
 * - (Sub-)Messages become plain objects
 * - Maps become plain objects with all string keys
 * - Repeated fields become arrays
 * - NaN and Infinity for float and double fields become strings
 *
 * @type {IConversionOptions}
 * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json
 */
util.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: true
};

// Sets up buffer utility according to the environment (called in index-minimal)
util._configure = function() {
    var Buffer = util.Buffer;
    /* istanbul ignore if */
    if (!Buffer) {
        util._Buffer_from = util._Buffer_allocUnsafe = null;
        return;
    }
    // because node 4.x buffers are incompatible & immutable
    // see: https://github.com/dcodeIO/protobuf.js/pull/665
    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||
        /* istanbul ignore next */
        function Buffer_from(value, encoding) {
            return new Buffer(value, encoding);
        };
    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||
        /* istanbul ignore next */
        function Buffer_allocUnsafe(size) {
            return new Buffer(size);
        };
};
});

var writer = Writer;

var require$$4 = getCjsExportFromNamespace(minimal$2);

var BufferWriter$1; // cyclic

var LongBits$1  = require$$4.LongBits,
    base64    = require$$4.base64,
    utf8$1      = require$$4.utf8;

/**
 * Constructs a new writer operation instance.
 * @classdesc Scheduled writer operation.
 * @constructor
 * @param {function(*, Uint8Array, number)} fn Function to call
 * @param {number} len Value byte length
 * @param {*} val Value to write
 * @ignore
 */
function Op(fn, len, val) {

    /**
     * Function to call.
     * @type {function(Uint8Array, number, *)}
     */
    this.fn = fn;

    /**
     * Value byte length.
     * @type {number}
     */
    this.len = len;

    /**
     * Next operation.
     * @type {Writer.Op|undefined}
     */
    this.next = undefined;

    /**
     * Value to write.
     * @type {*}
     */
    this.val = val; // type varies
}

/* istanbul ignore next */
function noop() {} // eslint-disable-line no-empty-function

/**
 * Constructs a new writer state instance.
 * @classdesc Copied writer state.
 * @memberof Writer
 * @constructor
 * @param {Writer} writer Writer to copy state from
 * @ignore
 */
function State(writer) {

    /**
     * Current head.
     * @type {Writer.Op}
     */
    this.head = writer.head;

    /**
     * Current tail.
     * @type {Writer.Op}
     */
    this.tail = writer.tail;

    /**
     * Current buffer length.
     * @type {number}
     */
    this.len = writer.len;

    /**
     * Next state.
     * @type {State|null}
     */
    this.next = writer.states;
}

/**
 * Constructs a new writer instance.
 * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 */
function Writer() {

    /**
     * Current length.
     * @type {number}
     */
    this.len = 0;

    /**
     * Operations head.
     * @type {Object}
     */
    this.head = new Op(noop, 0, 0);

    /**
     * Operations tail
     * @type {Object}
     */
    this.tail = this.head;

    /**
     * Linked forked states.
     * @type {Object|null}
     */
    this.states = null;

    // When a value is written, the writer calculates its byte length and puts it into a linked
    // list of operations to perform when finish() is called. This both allows us to allocate
    // buffers of the exact required size and reduces the amount of work we have to do compared
    // to first calculating over objects and then encoding over objects. In our case, the encoding
    // part is just a linked list walk calling operations with already prepared values.
}

var create$1 = function create() {
    return require$$4.Buffer
        ? function create_buffer_setup() {
            return (Writer.create = function create_buffer() {
                return new BufferWriter$1();
            })();
        }
        /* istanbul ignore next */
        : function create_array() {
            return new Writer();
        };
};

/**
 * Creates a new writer.
 * @function
 * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}
 */
Writer.create = create$1();

/**
 * Allocates a buffer of the specified size.
 * @param {number} size Buffer size
 * @returns {Uint8Array} Buffer
 */
Writer.alloc = function alloc(size) {
    return new require$$4.Array(size);
};

// Use Uint8Array buffer pool in the browser, just like node does with buffers
/* istanbul ignore else */
if (require$$4.Array !== Array)
    Writer.alloc = require$$4.pool(Writer.alloc, require$$4.Array.prototype.subarray);

/**
 * Pushes a new operation to the queue.
 * @param {function(Uint8Array, number, *)} fn Function to call
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @returns {Writer} `this`
 * @private
 */
Writer.prototype._push = function push(fn, len, val) {
    this.tail = this.tail.next = new Op(fn, len, val);
    this.len += len;
    return this;
};

function writeByte(val, buf, pos) {
    buf[pos] = val & 255;
}

function writeVarint32(val, buf, pos) {
    while (val > 127) {
        buf[pos++] = val & 127 | 128;
        val >>>= 7;
    }
    buf[pos] = val;
}

/**
 * Constructs a new varint writer operation instance.
 * @classdesc Scheduled varint writer operation.
 * @extends Op
 * @constructor
 * @param {number} len Value byte length
 * @param {number} val Value to write
 * @ignore
 */
function VarintOp(len, val) {
    this.len = len;
    this.next = undefined;
    this.val = val;
}

VarintOp.prototype = Object.create(Op.prototype);
VarintOp.prototype.fn = writeVarint32;

/**
 * Writes an unsigned 32 bit value as a varint.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.uint32 = function write_uint32(value) {
    // here, the call to this.push has been inlined and a varint specific Op subclass is used.
    // uint32 is by far the most frequently used operation and benefits significantly from this.
    this.len += (this.tail = this.tail.next = new VarintOp(
        (value = value >>> 0)
                < 128       ? 1
        : value < 16384     ? 2
        : value < 2097152   ? 3
        : value < 268435456 ? 4
        :                     5,
    value)).len;
    return this;
};

/**
 * Writes a signed 32 bit value as a varint.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.int32 = function write_int32(value) {
    return value < 0
        ? this._push(writeVarint64, 10, LongBits$1.fromNumber(value)) // 10 bytes per spec
        : this.uint32(value);
};

/**
 * Writes a 32 bit value as a varint, zig-zag encoded.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sint32 = function write_sint32(value) {
    return this.uint32((value << 1 ^ value >> 31) >>> 0);
};

function writeVarint64(val, buf, pos) {
    while (val.hi) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
    }
    while (val.lo > 127) {
        buf[pos++] = val.lo & 127 | 128;
        val.lo = val.lo >>> 7;
    }
    buf[pos++] = val.lo;
}

/**
 * Writes an unsigned 64 bit value as a varint.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.uint64 = function write_uint64(value) {
    var bits = LongBits$1.from(value);
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a signed 64 bit value as a varint.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.int64 = Writer.prototype.uint64;

/**
 * Writes a signed 64 bit value as a varint, zig-zag encoded.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sint64 = function write_sint64(value) {
    var bits = LongBits$1.from(value).zzEncode();
    return this._push(writeVarint64, bits.length(), bits);
};

/**
 * Writes a boolish value as a varint.
 * @param {boolean} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.bool = function write_bool(value) {
    return this._push(writeByte, 1, value ? 1 : 0);
};

function writeFixed32(val, buf, pos) {
    buf[pos    ] =  val         & 255;
    buf[pos + 1] =  val >>> 8   & 255;
    buf[pos + 2] =  val >>> 16  & 255;
    buf[pos + 3] =  val >>> 24;
}

/**
 * Writes an unsigned 32 bit value as fixed 32 bits.
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.fixed32 = function write_fixed32(value) {
    return this._push(writeFixed32, 4, value >>> 0);
};

/**
 * Writes a signed 32 bit value as fixed 32 bits.
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.sfixed32 = Writer.prototype.fixed32;

/**
 * Writes an unsigned 64 bit value as fixed 64 bits.
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.fixed64 = function write_fixed64(value) {
    var bits = LongBits$1.from(value);
    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
};

/**
 * Writes a signed 64 bit value as fixed 64 bits.
 * @function
 * @param {Long|number|string} value Value to write
 * @returns {Writer} `this`
 * @throws {TypeError} If `value` is a string and no long library is present.
 */
Writer.prototype.sfixed64 = Writer.prototype.fixed64;

/**
 * Writes a float (32 bit).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.float = function write_float(value) {
    return this._push(require$$4.float.writeFloatLE, 4, value);
};

/**
 * Writes a double (64 bit float).
 * @function
 * @param {number} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.double = function write_double(value) {
    return this._push(require$$4.float.writeDoubleLE, 8, value);
};

var writeBytes = require$$4.Array.prototype.set
    ? function writeBytes_set(val, buf, pos) {
        buf.set(val, pos); // also works for plain array values
    }
    /* istanbul ignore next */
    : function writeBytes_for(val, buf, pos) {
        for (var i = 0; i < val.length; ++i)
            buf[pos + i] = val[i];
    };

/**
 * Writes a sequence of bytes.
 * @param {Uint8Array|string} value Buffer or base64 encoded string to write
 * @returns {Writer} `this`
 */
Writer.prototype.bytes = function write_bytes(value) {
    var len = value.length >>> 0;
    if (!len)
        return this._push(writeByte, 1, 0);
    if (require$$4.isString(value)) {
        var buf = Writer.alloc(len = base64.length(value));
        base64.decode(value, buf, 0);
        value = buf;
    }
    return this.uint32(len)._push(writeBytes, len, value);
};

/**
 * Writes a string.
 * @param {string} value Value to write
 * @returns {Writer} `this`
 */
Writer.prototype.string = function write_string(value) {
    var len = utf8$1.length(value);
    return len
        ? this.uint32(len)._push(utf8$1.write, len, value)
        : this._push(writeByte, 1, 0);
};

/**
 * Forks this writer's state by pushing it to a stack.
 * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.
 * @returns {Writer} `this`
 */
Writer.prototype.fork = function fork() {
    this.states = new State(this);
    this.head = this.tail = new Op(noop, 0, 0);
    this.len = 0;
    return this;
};

/**
 * Resets this instance to the last state.
 * @returns {Writer} `this`
 */
Writer.prototype.reset = function reset() {
    if (this.states) {
        this.head   = this.states.head;
        this.tail   = this.states.tail;
        this.len    = this.states.len;
        this.states = this.states.next;
    } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len  = 0;
    }
    return this;
};

/**
 * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.
 * @returns {Writer} `this`
 */
Writer.prototype.ldelim = function ldelim() {
    var head = this.head,
        tail = this.tail,
        len  = this.len;
    this.reset().uint32(len);
    if (len) {
        this.tail.next = head.next; // skip noop
        this.tail = tail;
        this.len += len;
    }
    return this;
};

/**
 * Finishes the write operation.
 * @returns {Uint8Array} Finished buffer
 */
Writer.prototype.finish = function finish() {
    var head = this.head.next, // skip noop
        buf  = this.constructor.alloc(this.len),
        pos  = 0;
    while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
    }
    // this.head = this.tail = null;
    return buf;
};

Writer._configure = function(BufferWriter_) {
    BufferWriter$1 = BufferWriter_;
    Writer.create = create$1();
    BufferWriter$1._configure();
};

var writer_buffer = BufferWriter;

// extends Writer

(BufferWriter.prototype = Object.create(writer.prototype)).constructor = BufferWriter;



/**
 * Constructs a new buffer writer instance.
 * @classdesc Wire format writer using node buffers.
 * @extends Writer
 * @constructor
 */
function BufferWriter() {
    writer.call(this);
}

BufferWriter._configure = function () {
    /**
     * Allocates a buffer of the specified size.
     * @function
     * @param {number} size Buffer size
     * @returns {Buffer} Buffer
     */
    BufferWriter.alloc = require$$4._Buffer_allocUnsafe;

    BufferWriter.writeBytesBuffer = require$$4.Buffer && require$$4.Buffer.prototype instanceof Uint8Array && require$$4.Buffer.prototype.set.name === "set"
        ? function writeBytesBuffer_set(val, buf, pos) {
          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)
          // also works for plain array values
        }
        /* istanbul ignore next */
        : function writeBytesBuffer_copy(val, buf, pos) {
          if (val.copy) // Buffer values
            val.copy(buf, pos, 0, val.length);
          else for (var i = 0; i < val.length;) // plain array values
            buf[pos++] = val[i++];
        };
};


/**
 * @override
 */
BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
    if (require$$4.isString(value))
        value = require$$4._Buffer_from(value, "base64");
    var len = value.length >>> 0;
    this.uint32(len);
    if (len)
        this._push(BufferWriter.writeBytesBuffer, len, value);
    return this;
};

function writeStringBuffer(val, buf, pos) {
    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)
        require$$4.utf8.write(val, buf, pos);
    else if (buf.utf8Write)
        buf.utf8Write(val, pos);
    else
        buf.write(val, pos);
}

/**
 * @override
 */
BufferWriter.prototype.string = function write_string_buffer(value) {
    var len = require$$4.Buffer.byteLength(value);
    this.uint32(len);
    if (len)
        this._push(writeStringBuffer, len, value);
    return this;
};


/**
 * Finishes the write operation.
 * @name BufferWriter#finish
 * @function
 * @returns {Buffer} Finished buffer
 */

BufferWriter._configure();

var reader = Reader;



var BufferReader$1; // cyclic

var LongBits  = require$$4.LongBits,
    utf8      = require$$4.utf8;

/* istanbul ignore next */
function indexOutOfRange(reader, writeLength) {
    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
}

/**
 * Constructs a new reader instance using the specified buffer.
 * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.
 * @constructor
 * @param {Uint8Array} buffer Buffer to read from
 */
function Reader(buffer) {

    /**
     * Read buffer.
     * @type {Uint8Array}
     */
    this.buf = buffer;

    /**
     * Read buffer position.
     * @type {number}
     */
    this.pos = 0;

    /**
     * Read buffer length.
     * @type {number}
     */
    this.len = buffer.length;
}

var create_array = typeof Uint8Array !== "undefined"
    ? function create_typed_array(buffer) {
        if (buffer instanceof Uint8Array || Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    }
    /* istanbul ignore next */
    : function create_array(buffer) {
        if (Array.isArray(buffer))
            return new Reader(buffer);
        throw Error("illegal buffer");
    };

var create = function create() {
    return require$$4.Buffer
        ? function create_buffer_setup(buffer) {
            return (Reader.create = function create_buffer(buffer) {
                return require$$4.Buffer.isBuffer(buffer)
                    ? new BufferReader$1(buffer)
                    /* istanbul ignore next */
                    : create_array(buffer);
            })(buffer);
        }
        /* istanbul ignore next */
        : create_array;
};

/**
 * Creates a new reader using the specified buffer.
 * @function
 * @param {Uint8Array|Buffer} buffer Buffer to read from
 * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}
 * @throws {Error} If `buffer` is not a valid buffer
 */
Reader.create = create();

Reader.prototype._slice = require$$4.Array.prototype.subarray || /* istanbul ignore next */ require$$4.Array.prototype.slice;

/**
 * Reads a varint as an unsigned 32 bit value.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.uint32 = (function read_uint32_setup() {
    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)
    return function read_uint32() {
        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;
        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;

        /* istanbul ignore if */
        if ((this.pos += 5) > this.len) {
            this.pos = this.len;
            throw indexOutOfRange(this, 10);
        }
        return value;
    };
})();

/**
 * Reads a varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.int32 = function read_int32() {
    return this.uint32() | 0;
};

/**
 * Reads a zig-zag encoded varint as a signed 32 bit value.
 * @returns {number} Value read
 */
Reader.prototype.sint32 = function read_sint32() {
    var value = this.uint32();
    return value >>> 1 ^ -(value & 1) | 0;
};

/* eslint-disable no-invalid-this */

function readLongVarint() {
    // tends to deopt with local vars for octet etc.
    var bits = new LongBits(0, 0);
    var i = 0;
    if (this.len - this.pos > 4) { // fast route (lo)
        for (; i < 4; ++i) {
            // 1st..4th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 5th
        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;
        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;
        if (this.buf[this.pos++] < 128)
            return bits;
        i = 0;
    } else {
        for (; i < 3; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 1st..3th
            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
        // 4th
        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;
        return bits;
    }
    if (this.len - this.pos > 4) { // fast route (hi)
        for (; i < 5; ++i) {
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    } else {
        for (; i < 5; ++i) {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
            // 6th..10th
            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;
            if (this.buf[this.pos++] < 128)
                return bits;
        }
    }
    /* istanbul ignore next */
    throw Error("invalid varint encoding");
}

/* eslint-enable no-invalid-this */

/**
 * Reads a varint as a signed 64 bit value.
 * @name Reader#int64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as an unsigned 64 bit value.
 * @name Reader#uint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a zig-zag encoded varint as a signed 64 bit value.
 * @name Reader#sint64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a varint as a boolean.
 * @returns {boolean} Value read
 */
Reader.prototype.bool = function read_bool() {
    return this.uint32() !== 0;
};

function readFixed32_end(buf, end) { // note that this uses `end`, not `pos`
    return (buf[end - 4]
          | buf[end - 3] << 8
          | buf[end - 2] << 16
          | buf[end - 1] << 24) >>> 0;
}

/**
 * Reads fixed 32 bits as an unsigned 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.fixed32 = function read_fixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4);
};

/**
 * Reads fixed 32 bits as a signed 32 bit integer.
 * @returns {number} Value read
 */
Reader.prototype.sfixed32 = function read_sfixed32() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    return readFixed32_end(this.buf, this.pos += 4) | 0;
};

/* eslint-disable no-invalid-this */

function readFixed64(/* this: Reader */) {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 8);

    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
}

/* eslint-enable no-invalid-this */

/**
 * Reads fixed 64 bits.
 * @name Reader#fixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads zig-zag encoded fixed 64 bits.
 * @name Reader#sfixed64
 * @function
 * @returns {Long} Value read
 */

/**
 * Reads a float (32 bit) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.float = function read_float() {

    /* istanbul ignore if */
    if (this.pos + 4 > this.len)
        throw indexOutOfRange(this, 4);

    var value = require$$4.float.readFloatLE(this.buf, this.pos);
    this.pos += 4;
    return value;
};

/**
 * Reads a double (64 bit float) as a number.
 * @function
 * @returns {number} Value read
 */
Reader.prototype.double = function read_double() {

    /* istanbul ignore if */
    if (this.pos + 8 > this.len)
        throw indexOutOfRange(this, 4);

    var value = require$$4.float.readDoubleLE(this.buf, this.pos);
    this.pos += 8;
    return value;
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @returns {Uint8Array} Value read
 */
Reader.prototype.bytes = function read_bytes() {
    var length = this.uint32(),
        start  = this.pos,
        end    = this.pos + length;

    /* istanbul ignore if */
    if (end > this.len)
        throw indexOutOfRange(this, length);

    this.pos += length;
    if (Array.isArray(this.buf)) // plain array
        return this.buf.slice(start, end);
    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1
        ? new this.buf.constructor(0)
        : this._slice.call(this.buf, start, end);
};

/**
 * Reads a string preceeded by its byte length as a varint.
 * @returns {string} Value read
 */
Reader.prototype.string = function read_string() {
    var bytes = this.bytes();
    return utf8.read(bytes, 0, bytes.length);
};

/**
 * Skips the specified number of bytes if specified, otherwise skips a varint.
 * @param {number} [length] Length if known, otherwise a varint is assumed
 * @returns {Reader} `this`
 */
Reader.prototype.skip = function skip(length) {
    if (typeof length === "number") {
        /* istanbul ignore if */
        if (this.pos + length > this.len)
            throw indexOutOfRange(this, length);
        this.pos += length;
    } else {
        do {
            /* istanbul ignore if */
            if (this.pos >= this.len)
                throw indexOutOfRange(this);
        } while (this.buf[this.pos++] & 128);
    }
    return this;
};

/**
 * Skips the next element of the specified wire type.
 * @param {number} wireType Wire type received
 * @returns {Reader} `this`
 */
Reader.prototype.skipType = function(wireType) {
    switch (wireType) {
        case 0:
            this.skip();
            break;
        case 1:
            this.skip(8);
            break;
        case 2:
            this.skip(this.uint32());
            break;
        case 3:
            while ((wireType = this.uint32() & 7) !== 4) {
                this.skipType(wireType);
            }
            break;
        case 5:
            this.skip(4);
            break;

        /* istanbul ignore next */
        default:
            throw Error("invalid wire type " + wireType + " at offset " + this.pos);
    }
    return this;
};

Reader._configure = function(BufferReader_) {
    BufferReader$1 = BufferReader_;
    Reader.create = create();
    BufferReader$1._configure();

    var fn = require$$4.Long ? "toLong" : /* istanbul ignore next */ "toNumber";
    require$$4.merge(Reader.prototype, {

        int64: function read_int64() {
            return readLongVarint.call(this)[fn](false);
        },

        uint64: function read_uint64() {
            return readLongVarint.call(this)[fn](true);
        },

        sint64: function read_sint64() {
            return readLongVarint.call(this).zzDecode()[fn](false);
        },

        fixed64: function read_fixed64() {
            return readFixed64.call(this)[fn](true);
        },

        sfixed64: function read_sfixed64() {
            return readFixed64.call(this)[fn](false);
        }

    });
};

var reader_buffer = BufferReader;

// extends Reader

(BufferReader.prototype = Object.create(reader.prototype)).constructor = BufferReader;



/**
 * Constructs a new buffer reader instance.
 * @classdesc Wire format reader using node buffers.
 * @extends Reader
 * @constructor
 * @param {Buffer} buffer Buffer to read from
 */
function BufferReader(buffer) {
    reader.call(this, buffer);

    /**
     * Read buffer.
     * @name BufferReader#buf
     * @type {Buffer}
     */
}

BufferReader._configure = function () {
    /* istanbul ignore else */
    if (require$$4.Buffer)
        BufferReader.prototype._slice = require$$4.Buffer.prototype.slice;
};


/**
 * @override
 */
BufferReader.prototype.string = function read_string_buffer() {
    var len = this.uint32(); // modifies pos
    return this.buf.utf8Slice
        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))
        : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + len, this.len));
};

/**
 * Reads a sequence of bytes preceeded by its length as a varint.
 * @name BufferReader#bytes
 * @function
 * @returns {Buffer} Value read
 */

BufferReader._configure();

var service = Service;



// Extends EventEmitter
(Service.prototype = Object.create(require$$4.EventEmitter.prototype)).constructor = Service;

/**
 * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.
 *
 * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.
 * @typedef rpc.ServiceMethodCallback
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {Error|null} error Error, if any
 * @param {TRes} [response] Response message
 * @returns {undefined}
 */

/**
 * A service method part of a {@link rpc.Service} as created by {@link Service.create}.
 * @typedef rpc.ServiceMethod
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 * @type {function}
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message
 * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`
 */

/**
 * Constructs a new RPC service instance.
 * @classdesc An RPC service as returned by {@link Service#create}.
 * @exports rpc.Service
 * @extends util.EventEmitter
 * @constructor
 * @param {RPCImpl} rpcImpl RPC implementation
 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
 */
function Service(rpcImpl, requestDelimited, responseDelimited) {

    if (typeof rpcImpl !== "function")
        throw TypeError("rpcImpl must be a function");

    require$$4.EventEmitter.call(this);

    /**
     * RPC implementation. Becomes `null` once the service is ended.
     * @type {RPCImpl|null}
     */
    this.rpcImpl = rpcImpl;

    /**
     * Whether requests are length-delimited.
     * @type {boolean}
     */
    this.requestDelimited = Boolean(requestDelimited);

    /**
     * Whether responses are length-delimited.
     * @type {boolean}
     */
    this.responseDelimited = Boolean(responseDelimited);
}

/**
 * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.
 * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method
 * @param {Constructor<TReq>} requestCtor Request constructor
 * @param {Constructor<TRes>} responseCtor Response constructor
 * @param {TReq|Properties<TReq>} request Request message or plain object
 * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback
 * @returns {undefined}
 * @template TReq extends Message<TReq>
 * @template TRes extends Message<TRes>
 */
Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {

    if (!request)
        throw TypeError("request must be specified");

    var self = this;
    if (!callback)
        return require$$4.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);

    if (!self.rpcImpl) {
        setTimeout(function() { callback(Error("already ended")); }, 0);
        return undefined;
    }

    try {
        return self.rpcImpl(
            method,
            requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),
            function rpcCallback(err, response) {

                if (err) {
                    self.emit("error", err, method);
                    return callback(err);
                }

                if (response === null) {
                    self.end(/* endedByRPC */ true);
                    return undefined;
                }

                if (!(response instanceof responseCtor)) {
                    try {
                        response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
                    } catch (err) {
                        self.emit("error", err, method);
                        return callback(err);
                    }
                }

                self.emit("data", response, method);
                return callback(null, response);
            }
        );
    } catch (err) {
        self.emit("error", err, method);
        setTimeout(function() { callback(err); }, 0);
        return undefined;
    }
};

/**
 * Ends this service and emits the `end` event.
 * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.
 * @returns {rpc.Service} `this`
 */
Service.prototype.end = function end(endedByRPC) {
    if (this.rpcImpl) {
        if (!endedByRPC) // signal end to rpcImpl
            this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
    }
    return this;
};

var rpc_1 = createCommonjsModule(function (module, exports) {

/**
 * Streaming RPC helpers.
 * @namespace
 */
var rpc = exports;

/**
 * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.
 * @typedef RPCImpl
 * @type {function}
 * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called
 * @param {Uint8Array} requestData Request data
 * @param {RPCImplCallback} callback Callback function
 * @returns {undefined}
 * @example
 * function rpcImpl(method, requestData, callback) {
 *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code
 *         throw Error("no such method");
 *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {
 *         callback(err, responseData);
 *     });
 * }
 */

/**
 * Node-style callback as used by {@link RPCImpl}.
 * @typedef RPCImplCallback
 * @type {function}
 * @param {Error|null} error Error, if any, otherwise `null`
 * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error
 * @returns {undefined}
 */

rpc.Service = service;
});

var roots = {};

var indexMinimal = createCommonjsModule(function (module, exports) {
var protobuf = exports;

/**
 * Build type, one of `"full"`, `"light"` or `"minimal"`.
 * @name build
 * @type {string}
 * @const
 */
protobuf.build = "minimal";

// Serialization
protobuf.Writer       = writer;
protobuf.BufferWriter = writer_buffer;
protobuf.Reader       = reader;
protobuf.BufferReader = reader_buffer;

// Utility
protobuf.util         = require$$4;
protobuf.rpc          = rpc_1;
protobuf.roots        = roots;
protobuf.configure    = configure;

/* istanbul ignore next */
/**
 * Reconfigures the library according to the environment.
 * @returns {undefined}
 */
function configure() {
    protobuf.util._configure();
    protobuf.Writer._configure(protobuf.BufferWriter);
    protobuf.Reader._configure(protobuf.BufferReader);
}

// Set up buffer utility according to the environment
configure();
});

var minimal = indexMinimal;

const baseCoin = { denom: '', amount: '' };
const Coin = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.denom !== '') {
            writer.uint32(10).string(message.denom);
        }
        if (message.amount !== '') {
            writer.uint32(18).string(message.amount);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseCoin);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.denom = reader.string();
                    break;
                case 2:
                    message.amount = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseCoin);
        if (object.denom !== undefined && object.denom !== null) {
            message.denom = String(object.denom);
        }
        else {
            message.denom = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = String(object.amount);
        }
        else {
            message.amount = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.denom !== undefined && (obj.denom = message.denom);
        message.amount !== undefined && (obj.amount = message.amount);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseCoin);
        if (object.denom !== undefined && object.denom !== null) {
            message.denom = object.denom;
        }
        else {
            message.denom = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = object.amount;
        }
        else {
            message.amount = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var globalThis$9 = (() => {
    if (typeof globalThis$9 !== 'undefined')
        return globalThis$9;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$9.atob || (b64 => globalThis$9.Buffer.from(b64, 'base64').toString('binary'));
globalThis$9.btoa || (bin => globalThis$9.Buffer.from(bin, 'binary').toString('base64'));

const baseAny = { typeUrl: '' };
const Any = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.typeUrl !== '') {
            writer.uint32(10).string(message.typeUrl);
        }
        if (message.value.length !== 0) {
            writer.uint32(18).bytes(message.value);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseAny);
        message.value = new Uint8Array();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.typeUrl = reader.string();
                    break;
                case 2:
                    message.value = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseAny);
        message.value = new Uint8Array();
        if (object.typeUrl !== undefined && object.typeUrl !== null) {
            message.typeUrl = String(object.typeUrl);
        }
        else {
            message.typeUrl = '';
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = bytesFromBase64$1(object.value);
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);
        message.value !== undefined &&
            (obj.value = base64FromBytes$1(message.value !== undefined ? message.value : new Uint8Array()));
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseAny);
        if (object.typeUrl !== undefined && object.typeUrl !== null) {
            message.typeUrl = object.typeUrl;
        }
        else {
            message.typeUrl = '';
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = object.value;
        }
        else {
            message.value = new Uint8Array();
        }
        return message;
    },
};
var globalThis$8 = (() => {
    if (typeof globalThis$8 !== 'undefined')
        return globalThis$8;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
const atob$2 = globalThis$8.atob ||
    (b64 => globalThis$8.Buffer.from(b64, 'base64').toString('binary'));
function bytesFromBase64$1(b64) {
    const bin = atob$2(b64);
    const arr = new Uint8Array(bin.length);
    for (let i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
const btoa$1 = globalThis$8.btoa ||
    (bin => globalThis$8.Buffer.from(bin, 'binary').toString('base64'));
function base64FromBytes$1(arr) {
    const bin = [];
    for (let i = 0; i < arr.byteLength; ++i) {
        bin.push(String.fromCharCode(arr[i]));
    }
    return btoa$1(bin.join(''));
}
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var SignMode;
(function (SignMode) {
    SignMode[SignMode["SIGN_MODE_UNSPECIFIED"] = 0] = "SIGN_MODE_UNSPECIFIED";
    SignMode[SignMode["SIGN_MODE_DIRECT"] = 1] = "SIGN_MODE_DIRECT";
    SignMode[SignMode["SIGN_MODE_TEXTUAL"] = 2] = "SIGN_MODE_TEXTUAL";
    SignMode[SignMode["SIGN_MODE_LEGACY_AMINO_JSON"] = 127] = "SIGN_MODE_LEGACY_AMINO_JSON";
    SignMode[SignMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SignMode || (SignMode = {}));
var globalThis$7 = (() => {
    if (typeof globalThis$7 !== 'undefined')
        return globalThis$7;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$7.atob || (b64 => globalThis$7.Buffer.from(b64, 'base64').toString('binary'));
globalThis$7.btoa || (bin => globalThis$7.Buffer.from(bin, 'binary').toString('base64'));

const baseTxRaw = {};
const TxRaw = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.bodyBytes.length !== 0) {
            writer.uint32(10).bytes(message.bodyBytes);
        }
        if (message.authInfoBytes.length !== 0) {
            writer.uint32(18).bytes(message.authInfoBytes);
        }
        for (const v of message.signatures) {
            writer.uint32(26).bytes(v);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseTxRaw);
        message.signatures = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.bodyBytes = reader.bytes();
                    break;
                case 2:
                    message.authInfoBytes = reader.bytes();
                    break;
                case 3:
                    message.signatures.push(reader.bytes());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseTxRaw);
        message.signatures = [];
        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {
            message.bodyBytes = bytesFromBase64(object.bodyBytes);
        }
        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {
            message.authInfoBytes = bytesFromBase64(object.authInfoBytes);
        }
        if (object.signatures !== undefined && object.signatures !== null) {
            for (const e of object.signatures) {
                message.signatures.push(bytesFromBase64(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.bodyBytes !== undefined &&
            (obj.bodyBytes = base64FromBytes(message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()));
        message.authInfoBytes !== undefined &&
            (obj.authInfoBytes = base64FromBytes(message.authInfoBytes !== undefined ? message.authInfoBytes : new Uint8Array()));
        if (message.signatures) {
            obj.signatures = message.signatures.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));
        }
        else {
            obj.signatures = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseTxRaw);
        message.signatures = [];
        if (object.bodyBytes !== undefined && object.bodyBytes !== null) {
            message.bodyBytes = object.bodyBytes;
        }
        else {
            message.bodyBytes = new Uint8Array();
        }
        if (object.authInfoBytes !== undefined && object.authInfoBytes !== null) {
            message.authInfoBytes = object.authInfoBytes;
        }
        else {
            message.authInfoBytes = new Uint8Array();
        }
        if (object.signatures !== undefined && object.signatures !== null) {
            for (const e of object.signatures) {
                message.signatures.push(e);
            }
        }
        return message;
    },
};
var globalThis$6 = (() => {
    if (typeof globalThis$6 !== 'undefined')
        return globalThis$6;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
const atob$1 = globalThis$6.atob || (b64 => globalThis$6.Buffer.from(b64, 'base64').toString('binary'));
function bytesFromBase64(b64) {
    const bin = atob$1(b64);
    const arr = new Uint8Array(bin.length);
    for (let i = 0; i < bin.length; ++i) {
        arr[i] = bin.charCodeAt(i);
    }
    return arr;
}
const btoa = globalThis$6.btoa || (bin => globalThis$6.Buffer.from(bin, 'binary').toString('base64'));
function base64FromBytes(arr) {
    const bin = [];
    for (let i = 0; i < arr.byteLength; ++i) {
        bin.push(String.fromCharCode(arr[i]));
    }
    return btoa(bin.join(''));
}

const baseInput = { address: '' };
const Input = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.address !== '') {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
            Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseInput);
        message.coins = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.coins.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseInput);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = String(object.address);
        }
        else {
            message.address = '';
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (const e of object.coins) {
                message.coins.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.address !== undefined && (obj.address = message.address);
        if (message.coins) {
            obj.coins = message.coins.map(e => (e ? Coin.toJSON(e) : undefined));
        }
        else {
            obj.coins = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseInput);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = object.address;
        }
        else {
            message.address = '';
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (const e of object.coins) {
                message.coins.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
const baseOutput = { address: '' };
const Output = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.address !== '') {
            writer.uint32(10).string(message.address);
        }
        for (const v of message.coins) {
            Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseOutput);
        message.coins = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.coins.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseOutput);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = String(object.address);
        }
        else {
            message.address = '';
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (const e of object.coins) {
                message.coins.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.address !== undefined && (obj.address = message.address);
        if (message.coins) {
            obj.coins = message.coins.map(e => (e ? Coin.toJSON(e) : undefined));
        }
        else {
            obj.coins = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseOutput);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = object.address;
        }
        else {
            message.address = '';
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (const e of object.coins) {
                message.coins.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};

const baseMsgMultiSend = {};
const MsgMultiSend = {
    encode(message, writer = minimal.Writer.create()) {
        for (const v of message.inputs) {
            Input.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.outputs) {
            Output.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgMultiSend);
        message.inputs = [];
        message.outputs = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.inputs.push(Input.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.outputs.push(Output.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgMultiSend);
        message.inputs = [];
        message.outputs = [];
        if (object.inputs !== undefined && object.inputs !== null) {
            for (const e of object.inputs) {
                message.inputs.push(Input.fromJSON(e));
            }
        }
        if (object.outputs !== undefined && object.outputs !== null) {
            for (const e of object.outputs) {
                message.outputs.push(Output.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        if (message.inputs) {
            obj.inputs = message.inputs.map(e => (e ? Input.toJSON(e) : undefined));
        }
        else {
            obj.inputs = [];
        }
        if (message.outputs) {
            obj.outputs = message.outputs.map(e => (e ? Output.toJSON(e) : undefined));
        }
        else {
            obj.outputs = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgMultiSend);
        message.inputs = [];
        message.outputs = [];
        if (object.inputs !== undefined && object.inputs !== null) {
            for (const e of object.inputs) {
                message.inputs.push(Input.fromPartial(e));
            }
        }
        if (object.outputs !== undefined && object.outputs !== null) {
            for (const e of object.outputs) {
                message.outputs.push(Output.fromPartial(e));
            }
        }
        return message;
    },
};

const baseMsgSetWithdrawAddress = {
    delegatorAddress: '',
    withdrawAddress: '',
};
const MsgSetWithdrawAddress = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.delegatorAddress !== '') {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.withdrawAddress !== '') {
            writer.uint32(18).string(message.withdrawAddress);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgSetWithdrawAddress);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.withdrawAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgSetWithdrawAddress);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = '';
        }
        if (object.withdrawAddress !== undefined &&
            object.withdrawAddress !== null) {
            message.withdrawAddress = String(object.withdrawAddress);
        }
        else {
            message.withdrawAddress = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        message.withdrawAddress !== undefined &&
            (obj.withdrawAddress = message.withdrawAddress);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgSetWithdrawAddress);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = '';
        }
        if (object.withdrawAddress !== undefined &&
            object.withdrawAddress !== null) {
            message.withdrawAddress = object.withdrawAddress;
        }
        else {
            message.withdrawAddress = '';
        }
        return message;
    },
};
const baseMsgWithdrawDelegatorReward = {
    delegatorAddress: '',
    validatorAddress: '',
};
const MsgWithdrawDelegatorReward = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.delegatorAddress !== '') {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== '') {
            writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgWithdrawDelegatorReward);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgWithdrawDelegatorReward);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = '';
        }
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgWithdrawDelegatorReward);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = '';
        }
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = '';
        }
        return message;
    },
};
const baseMsgWithdrawValidatorCommission = { validatorAddress: '' };
const MsgWithdrawValidatorCommission = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.validatorAddress !== '') {
            writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgWithdrawValidatorCommission);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgWithdrawValidatorCommission);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgWithdrawValidatorCommission);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = '';
        }
        return message;
    },
};
const baseMsgFundCommunityPool = { depositor: '' };
const MsgFundCommunityPool = {
    encode(message, writer = minimal.Writer.create()) {
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.depositor !== '') {
            writer.uint32(18).string(message.depositor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgFundCommunityPool);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.depositor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgFundCommunityPool);
        message.amount = [];
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        if (object.depositor !== undefined && object.depositor !== null) {
            message.depositor = String(object.depositor);
        }
        else {
            message.depositor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        message.depositor !== undefined && (obj.depositor = message.depositor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgFundCommunityPool);
        message.amount = [];
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        if (object.depositor !== undefined && object.depositor !== null) {
            message.depositor = object.depositor;
        }
        else {
            message.depositor = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var globalThis$5 = (() => {
    if (typeof globalThis$5 !== 'undefined')
        return globalThis$5;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$5.atob ||
    (b64 => globalThis$5.Buffer.from(b64, 'base64').toString('binary'));
globalThis$5.btoa ||
    (bin => globalThis$5.Buffer.from(bin, 'binary').toString('base64'));
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var globalThis$4 = (() => {
    if (typeof globalThis$4 !== 'undefined')
        return globalThis$4;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$4.atob ||
    (b64 => globalThis$4.Buffer.from(b64, 'base64').toString('binary'));
globalThis$4.btoa ||
    (bin => globalThis$4.Buffer.from(bin, 'binary').toString('base64'));
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var globalThis$3 = (() => {
    if (typeof globalThis$3 !== 'undefined')
        return globalThis$3;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$3.atob ||
    (b64 => globalThis$3.Buffer.from(b64, 'base64').toString('binary'));
globalThis$3.btoa ||
    (bin => globalThis$3.Buffer.from(bin, 'binary').toString('base64'));
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseTimestamp = { seconds: long_1.ZERO, nanos: 0 };
const Timestamp = {
    encode(message, writer = minimal.Writer.create()) {
        if (!message.seconds.isZero()) {
            writer.uint32(8).int64(message.seconds);
        }
        if (message.nanos !== 0) {
            writer.uint32(16).int32(message.nanos);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseTimestamp);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.seconds = reader.int64();
                    break;
                case 2:
                    message.nanos = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseTimestamp);
        if (object.seconds !== undefined && object.seconds !== null) {
            message.seconds = long_1.fromString(object.seconds);
        }
        else {
            message.seconds = long_1.ZERO;
        }
        if (object.nanos !== undefined && object.nanos !== null) {
            message.nanos = Number(object.nanos);
        }
        else {
            message.nanos = 0;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.seconds !== undefined &&
            (obj.seconds = (message.seconds || long_1.ZERO).toString());
        message.nanos !== undefined && (obj.nanos = message.nanos);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseTimestamp);
        if (object.seconds !== undefined && object.seconds !== null) {
            message.seconds = object.seconds;
        }
        else {
            message.seconds = long_1.ZERO;
        }
        if (object.nanos !== undefined && object.nanos !== null) {
            message.nanos = object.nanos;
        }
        else {
            message.nanos = 0;
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var BlockIDFlag;
(function (BlockIDFlag) {
    BlockIDFlag[BlockIDFlag["BLOCK_ID_FLAG_UNKNOWN"] = 0] = "BLOCK_ID_FLAG_UNKNOWN";
    BlockIDFlag[BlockIDFlag["BLOCK_ID_FLAG_ABSENT"] = 1] = "BLOCK_ID_FLAG_ABSENT";
    BlockIDFlag[BlockIDFlag["BLOCK_ID_FLAG_COMMIT"] = 2] = "BLOCK_ID_FLAG_COMMIT";
    BlockIDFlag[BlockIDFlag["BLOCK_ID_FLAG_NIL"] = 3] = "BLOCK_ID_FLAG_NIL";
    BlockIDFlag[BlockIDFlag["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BlockIDFlag || (BlockIDFlag = {}));
var SignedMsgType;
(function (SignedMsgType) {
    SignedMsgType[SignedMsgType["SIGNED_MSG_TYPE_UNKNOWN"] = 0] = "SIGNED_MSG_TYPE_UNKNOWN";
    SignedMsgType[SignedMsgType["SIGNED_MSG_TYPE_PREVOTE"] = 1] = "SIGNED_MSG_TYPE_PREVOTE";
    SignedMsgType[SignedMsgType["SIGNED_MSG_TYPE_PRECOMMIT"] = 2] = "SIGNED_MSG_TYPE_PRECOMMIT";
    SignedMsgType[SignedMsgType["SIGNED_MSG_TYPE_PROPOSAL"] = 32] = "SIGNED_MSG_TYPE_PROPOSAL";
    SignedMsgType[SignedMsgType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SignedMsgType || (SignedMsgType = {}));
var globalThis$2 = (() => {
    if (typeof globalThis$2 !== 'undefined')
        return globalThis$2;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$2.atob ||
    (b64 => globalThis$2.Buffer.from(b64, 'base64').toString('binary'));
globalThis$2.btoa ||
    (bin => globalThis$2.Buffer.from(bin, 'binary').toString('base64'));
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var BondStatus;
(function (BondStatus) {
    BondStatus[BondStatus["BOND_STATUS_UNSPECIFIED"] = 0] = "BOND_STATUS_UNSPECIFIED";
    BondStatus[BondStatus["BOND_STATUS_UNBONDED"] = 1] = "BOND_STATUS_UNBONDED";
    BondStatus[BondStatus["BOND_STATUS_UNBONDING"] = 2] = "BOND_STATUS_UNBONDING";
    BondStatus[BondStatus["BOND_STATUS_BONDED"] = 3] = "BOND_STATUS_BONDED";
    BondStatus[BondStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(BondStatus || (BondStatus = {}));
const baseCommissionRates = { rate: "", maxRate: "", maxChangeRate: "" };
const CommissionRates = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.rate !== "") {
            writer.uint32(10).string(message.rate);
        }
        if (message.maxRate !== "") {
            writer.uint32(18).string(message.maxRate);
        }
        if (message.maxChangeRate !== "") {
            writer.uint32(26).string(message.maxChangeRate);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseCommissionRates);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rate = reader.string();
                    break;
                case 2:
                    message.maxRate = reader.string();
                    break;
                case 3:
                    message.maxChangeRate = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseCommissionRates);
        if (object.rate !== undefined && object.rate !== null) {
            message.rate = String(object.rate);
        }
        else {
            message.rate = "";
        }
        if (object.maxRate !== undefined && object.maxRate !== null) {
            message.maxRate = String(object.maxRate);
        }
        else {
            message.maxRate = "";
        }
        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {
            message.maxChangeRate = String(object.maxChangeRate);
        }
        else {
            message.maxChangeRate = "";
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.rate !== undefined && (obj.rate = message.rate);
        message.maxRate !== undefined && (obj.maxRate = message.maxRate);
        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseCommissionRates);
        if (object.rate !== undefined && object.rate !== null) {
            message.rate = object.rate;
        }
        else {
            message.rate = "";
        }
        if (object.maxRate !== undefined && object.maxRate !== null) {
            message.maxRate = object.maxRate;
        }
        else {
            message.maxRate = "";
        }
        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {
            message.maxChangeRate = object.maxChangeRate;
        }
        else {
            message.maxChangeRate = "";
        }
        return message;
    },
};
const baseDescription = { moniker: "", identity: "", website: "", securityContact: "", details: "" };
const Description = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.moniker !== "") {
            writer.uint32(10).string(message.moniker);
        }
        if (message.identity !== "") {
            writer.uint32(18).string(message.identity);
        }
        if (message.website !== "") {
            writer.uint32(26).string(message.website);
        }
        if (message.securityContact !== "") {
            writer.uint32(34).string(message.securityContact);
        }
        if (message.details !== "") {
            writer.uint32(42).string(message.details);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseDescription);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.moniker = reader.string();
                    break;
                case 2:
                    message.identity = reader.string();
                    break;
                case 3:
                    message.website = reader.string();
                    break;
                case 4:
                    message.securityContact = reader.string();
                    break;
                case 5:
                    message.details = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseDescription);
        if (object.moniker !== undefined && object.moniker !== null) {
            message.moniker = String(object.moniker);
        }
        else {
            message.moniker = "";
        }
        if (object.identity !== undefined && object.identity !== null) {
            message.identity = String(object.identity);
        }
        else {
            message.identity = "";
        }
        if (object.website !== undefined && object.website !== null) {
            message.website = String(object.website);
        }
        else {
            message.website = "";
        }
        if (object.securityContact !== undefined && object.securityContact !== null) {
            message.securityContact = String(object.securityContact);
        }
        else {
            message.securityContact = "";
        }
        if (object.details !== undefined && object.details !== null) {
            message.details = String(object.details);
        }
        else {
            message.details = "";
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.moniker !== undefined && (obj.moniker = message.moniker);
        message.identity !== undefined && (obj.identity = message.identity);
        message.website !== undefined && (obj.website = message.website);
        message.securityContact !== undefined && (obj.securityContact = message.securityContact);
        message.details !== undefined && (obj.details = message.details);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseDescription);
        if (object.moniker !== undefined && object.moniker !== null) {
            message.moniker = object.moniker;
        }
        else {
            message.moniker = "";
        }
        if (object.identity !== undefined && object.identity !== null) {
            message.identity = object.identity;
        }
        else {
            message.identity = "";
        }
        if (object.website !== undefined && object.website !== null) {
            message.website = object.website;
        }
        else {
            message.website = "";
        }
        if (object.securityContact !== undefined && object.securityContact !== null) {
            message.securityContact = object.securityContact;
        }
        else {
            message.securityContact = "";
        }
        if (object.details !== undefined && object.details !== null) {
            message.details = object.details;
        }
        else {
            message.details = "";
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseMsgCreateValidator = { minSelfDelegation: "", delegatorAddress: "", validatorAddress: "" };
const MsgCreateValidator = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.description !== undefined) {
            Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.commission !== undefined) {
            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();
        }
        if (message.minSelfDelegation !== "") {
            writer.uint32(26).string(message.minSelfDelegation);
        }
        if (message.delegatorAddress !== "") {
            writer.uint32(34).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
            writer.uint32(42).string(message.validatorAddress);
        }
        if (message.pubkey !== undefined) {
            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();
        }
        if (message.value !== undefined) {
            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgCreateValidator);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.description = Description.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.commission = CommissionRates.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.minSelfDelegation = reader.string();
                    break;
                case 4:
                    message.delegatorAddress = reader.string();
                    break;
                case 5:
                    message.validatorAddress = reader.string();
                    break;
                case 6:
                    message.pubkey = Any.decode(reader, reader.uint32());
                    break;
                case 7:
                    message.value = Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgCreateValidator);
        if (object.description !== undefined && object.description !== null) {
            message.description = Description.fromJSON(object.description);
        }
        else {
            message.description = undefined;
        }
        if (object.commission !== undefined && object.commission !== null) {
            message.commission = CommissionRates.fromJSON(object.commission);
        }
        else {
            message.commission = undefined;
        }
        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {
            message.minSelfDelegation = String(object.minSelfDelegation);
        }
        else {
            message.minSelfDelegation = "";
        }
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.pubkey !== undefined && object.pubkey !== null) {
            message.pubkey = Any.fromJSON(object.pubkey);
        }
        else {
            message.pubkey = undefined;
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = Coin.fromJSON(object.value);
        }
        else {
            message.value = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.description !== undefined &&
            (obj.description = message.description ? Description.toJSON(message.description) : undefined);
        message.commission !== undefined &&
            (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);
        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);
        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);
        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);
        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgCreateValidator);
        if (object.description !== undefined && object.description !== null) {
            message.description = Description.fromPartial(object.description);
        }
        else {
            message.description = undefined;
        }
        if (object.commission !== undefined && object.commission !== null) {
            message.commission = CommissionRates.fromPartial(object.commission);
        }
        else {
            message.commission = undefined;
        }
        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {
            message.minSelfDelegation = object.minSelfDelegation;
        }
        else {
            message.minSelfDelegation = "";
        }
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.pubkey !== undefined && object.pubkey !== null) {
            message.pubkey = Any.fromPartial(object.pubkey);
        }
        else {
            message.pubkey = undefined;
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = Coin.fromPartial(object.value);
        }
        else {
            message.value = undefined;
        }
        return message;
    },
};
const baseMsgEditValidator = { validatorAddress: "", commissionRate: "", minSelfDelegation: "" };
const MsgEditValidator = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.description !== undefined) {
            Description.encode(message.description, writer.uint32(10).fork()).ldelim();
        }
        if (message.validatorAddress !== "") {
            writer.uint32(18).string(message.validatorAddress);
        }
        if (message.commissionRate !== "") {
            writer.uint32(26).string(message.commissionRate);
        }
        if (message.minSelfDelegation !== "") {
            writer.uint32(34).string(message.minSelfDelegation);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgEditValidator);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.description = Description.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.validatorAddress = reader.string();
                    break;
                case 3:
                    message.commissionRate = reader.string();
                    break;
                case 4:
                    message.minSelfDelegation = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgEditValidator);
        if (object.description !== undefined && object.description !== null) {
            message.description = Description.fromJSON(object.description);
        }
        else {
            message.description = undefined;
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.commissionRate !== undefined && object.commissionRate !== null) {
            message.commissionRate = String(object.commissionRate);
        }
        else {
            message.commissionRate = "";
        }
        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {
            message.minSelfDelegation = String(object.minSelfDelegation);
        }
        else {
            message.minSelfDelegation = "";
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.description !== undefined &&
            (obj.description = message.description ? Description.toJSON(message.description) : undefined);
        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);
        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);
        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgEditValidator);
        if (object.description !== undefined && object.description !== null) {
            message.description = Description.fromPartial(object.description);
        }
        else {
            message.description = undefined;
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.commissionRate !== undefined && object.commissionRate !== null) {
            message.commissionRate = object.commissionRate;
        }
        else {
            message.commissionRate = "";
        }
        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {
            message.minSelfDelegation = object.minSelfDelegation;
        }
        else {
            message.minSelfDelegation = "";
        }
        return message;
    },
};
const baseMsgDelegate = { delegatorAddress: "", validatorAddress: "" };
const MsgDelegate = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
            writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== undefined) {
            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgDelegate);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.validatorAddress = reader.string();
                    break;
                case 3:
                    message.amount = Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgDelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromJSON(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);
        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgDelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromPartial(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
};
const baseMsgBeginRedelegate = {
    delegatorAddress: "",
    validatorSrcAddress: "",
    validatorDstAddress: "",
};
const MsgBeginRedelegate = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorSrcAddress !== "") {
            writer.uint32(18).string(message.validatorSrcAddress);
        }
        if (message.validatorDstAddress !== "") {
            writer.uint32(26).string(message.validatorDstAddress);
        }
        if (message.amount !== undefined) {
            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgBeginRedelegate);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.validatorSrcAddress = reader.string();
                    break;
                case 3:
                    message.validatorDstAddress = reader.string();
                    break;
                case 4:
                    message.amount = Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgBeginRedelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {
            message.validatorSrcAddress = String(object.validatorSrcAddress);
        }
        else {
            message.validatorSrcAddress = "";
        }
        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {
            message.validatorDstAddress = String(object.validatorDstAddress);
        }
        else {
            message.validatorDstAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromJSON(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);
        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);
        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgBeginRedelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {
            message.validatorSrcAddress = object.validatorSrcAddress;
        }
        else {
            message.validatorSrcAddress = "";
        }
        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {
            message.validatorDstAddress = object.validatorDstAddress;
        }
        else {
            message.validatorDstAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromPartial(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
};
const baseMsgUndelegate = { delegatorAddress: "", validatorAddress: "" };
const MsgUndelegate = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
            writer.uint32(18).string(message.validatorAddress);
        }
        if (message.amount !== undefined) {
            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof Uint8Array ? new minimal.Reader(input) : input;
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgUndelegate);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.validatorAddress = reader.string();
                    break;
                case 3:
                    message.amount = Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgUndelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromJSON(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);
        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgUndelegate);
        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = Coin.fromPartial(object.amount);
        }
        else {
            message.amount = undefined;
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseMsgAddOperator = { sender: '', operator: '' };
const MsgAddOperator = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.sender !== '') {
            writer.uint32(10).string(message.sender);
        }
        if (message.operator !== '') {
            writer.uint32(18).string(message.operator);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgAddOperator);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.sender = reader.string();
                    break;
                case 2:
                    message.operator = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgAddOperator);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = String(object.sender);
        }
        else {
            message.sender = '';
        }
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = String(object.operator);
        }
        else {
            message.operator = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        message.operator !== undefined && (obj.operator = message.operator);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgAddOperator);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = object.sender;
        }
        else {
            message.sender = '';
        }
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = object.operator;
        }
        else {
            message.operator = '';
        }
        return message;
    },
};
const baseMsgRemoveOperator = { sender: '', operator: '' };
const MsgRemoveOperator = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.sender !== '') {
            writer.uint32(10).string(message.sender);
        }
        if (message.operator !== '') {
            writer.uint32(18).string(message.operator);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgRemoveOperator);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.sender = reader.string();
                    break;
                case 2:
                    message.operator = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgRemoveOperator);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = String(object.sender);
        }
        else {
            message.sender = '';
        }
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = String(object.operator);
        }
        else {
            message.operator = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        message.operator !== undefined && (obj.operator = message.operator);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgRemoveOperator);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = object.sender;
        }
        else {
            message.sender = '';
        }
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = object.operator;
        }
        else {
            message.operator = '';
        }
        return message;
    },
};
const baseMsgDisburse = { operator: '', recipient: '', reference: '' };
const MsgDisburse = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.operator !== '') {
            writer.uint32(10).string(message.operator);
        }
        if (message.recipient !== '') {
            writer.uint32(18).string(message.recipient);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (message.reference !== '') {
            writer.uint32(34).string(message.reference);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgDisburse);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.operator = reader.string();
                    break;
                case 2:
                    message.recipient = reader.string();
                    break;
                case 3:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.reference = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgDisburse);
        message.amount = [];
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = String(object.operator);
        }
        else {
            message.operator = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        if (object.reference !== undefined && object.reference !== null) {
            message.reference = String(object.reference);
        }
        else {
            message.reference = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.operator !== undefined && (obj.operator = message.operator);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        message.reference !== undefined && (obj.reference = message.reference);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgDisburse);
        message.amount = [];
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = object.operator;
        }
        else {
            message.operator = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        if (object.reference !== undefined && object.reference !== null) {
            message.reference = object.reference;
        }
        else {
            message.reference = '';
        }
        return message;
    },
};
const baseMsgCancelDisbursement = {
    manager: '',
    recipient: '',
    scheduledFor: '',
};
const MsgCancelDisbursement = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.manager !== '') {
            writer.uint32(10).string(message.manager);
        }
        if (message.recipient !== '') {
            writer.uint32(18).string(message.recipient);
        }
        if (message.scheduledFor !== '') {
            writer.uint32(26).string(message.scheduledFor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgCancelDisbursement);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.manager = reader.string();
                    break;
                case 2:
                    message.recipient = reader.string();
                    break;
                case 3:
                    message.scheduledFor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgCancelDisbursement);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = String(object.manager);
        }
        else {
            message.manager = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = String(object.scheduledFor);
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.manager !== undefined && (obj.manager = message.manager);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        message.scheduledFor !== undefined &&
            (obj.scheduledFor = message.scheduledFor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgCancelDisbursement);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = object.manager;
        }
        else {
            message.manager = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = object.scheduledFor;
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
};
const baseMsgApproveDisbursement = {
    manager: '',
    recipient: '',
    scheduledFor: '',
};
const MsgApproveDisbursement = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.manager !== '') {
            writer.uint32(10).string(message.manager);
        }
        if (message.recipient !== '') {
            writer.uint32(18).string(message.recipient);
        }
        if (message.scheduledFor !== '') {
            writer.uint32(26).string(message.scheduledFor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgApproveDisbursement);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.manager = reader.string();
                    break;
                case 2:
                    message.recipient = reader.string();
                    break;
                case 3:
                    message.scheduledFor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgApproveDisbursement);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = String(object.manager);
        }
        else {
            message.manager = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = String(object.scheduledFor);
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.manager !== undefined && (obj.manager = message.manager);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        message.scheduledFor !== undefined &&
            (obj.scheduledFor = message.scheduledFor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgApproveDisbursement);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = object.manager;
        }
        else {
            message.manager = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = object.scheduledFor;
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
};
const baseMsgBurn = { operator: '' };
const MsgBurn = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.operator !== '') {
            writer.uint32(10).string(message.operator);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgBurn);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.operator = reader.string();
                    break;
                case 2:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgBurn);
        message.amount = [];
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = String(object.operator);
        }
        else {
            message.operator = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.operator !== undefined && (obj.operator = message.operator);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgBurn);
        message.amount = [];
        if (object.operator !== undefined && object.operator !== null) {
            message.operator = object.operator;
        }
        else {
            message.operator = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
const baseMsgCancelBurn = { manager: '', scheduledFor: '' };
const MsgCancelBurn = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.manager !== '') {
            writer.uint32(10).string(message.manager);
        }
        if (message.scheduledFor !== '') {
            writer.uint32(18).string(message.scheduledFor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgCancelBurn);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.manager = reader.string();
                    break;
                case 2:
                    message.scheduledFor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgCancelBurn);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = String(object.manager);
        }
        else {
            message.manager = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = String(object.scheduledFor);
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.manager !== undefined && (obj.manager = message.manager);
        message.scheduledFor !== undefined &&
            (obj.scheduledFor = message.scheduledFor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgCancelBurn);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = object.manager;
        }
        else {
            message.manager = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = object.scheduledFor;
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
};
const baseMsgApproveBurn = { manager: '', scheduledFor: '' };
const MsgApproveBurn = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.manager !== '') {
            writer.uint32(10).string(message.manager);
        }
        if (message.scheduledFor !== '') {
            writer.uint32(18).string(message.scheduledFor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgApproveBurn);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.manager = reader.string();
                    break;
                case 2:
                    message.scheduledFor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgApproveBurn);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = String(object.manager);
        }
        else {
            message.manager = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = String(object.scheduledFor);
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.manager !== undefined && (obj.manager = message.manager);
        message.scheduledFor !== undefined &&
            (obj.scheduledFor = message.scheduledFor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgApproveBurn);
        if (object.manager !== undefined && object.manager !== null) {
            message.manager = object.manager;
        }
        else {
            message.manager = '';
        }
        if (object.scheduledFor !== undefined && object.scheduledFor !== null) {
            message.scheduledFor = object.scheduledFor;
        }
        else {
            message.scheduledFor = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

var VoteOption;
(function (VoteOption) {
    VoteOption[VoteOption["VOTE_OPTION_UNSPECIFIED"] = 0] = "VOTE_OPTION_UNSPECIFIED";
    VoteOption[VoteOption["VOTE_OPTION_YES"] = 1] = "VOTE_OPTION_YES";
    VoteOption[VoteOption["VOTE_OPTION_ABSTAIN"] = 2] = "VOTE_OPTION_ABSTAIN";
    VoteOption[VoteOption["VOTE_OPTION_NO"] = 3] = "VOTE_OPTION_NO";
    VoteOption[VoteOption["VOTE_OPTION_NO_WITH_VETO"] = 4] = "VOTE_OPTION_NO_WITH_VETO";
    VoteOption[VoteOption["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VoteOption || (VoteOption = {}));
function voteOptionFromJSON(object) {
    switch (object) {
        case 0:
        case 'VOTE_OPTION_UNSPECIFIED':
            return VoteOption.VOTE_OPTION_UNSPECIFIED;
        case 1:
        case 'VOTE_OPTION_YES':
            return VoteOption.VOTE_OPTION_YES;
        case 2:
        case 'VOTE_OPTION_ABSTAIN':
            return VoteOption.VOTE_OPTION_ABSTAIN;
        case 3:
        case 'VOTE_OPTION_NO':
            return VoteOption.VOTE_OPTION_NO;
        case 4:
        case 'VOTE_OPTION_NO_WITH_VETO':
            return VoteOption.VOTE_OPTION_NO_WITH_VETO;
        case -1:
        case 'UNRECOGNIZED':
        default:
            return VoteOption.UNRECOGNIZED;
    }
}
function voteOptionToJSON(object) {
    switch (object) {
        case VoteOption.VOTE_OPTION_UNSPECIFIED:
            return 'VOTE_OPTION_UNSPECIFIED';
        case VoteOption.VOTE_OPTION_YES:
            return 'VOTE_OPTION_YES';
        case VoteOption.VOTE_OPTION_ABSTAIN:
            return 'VOTE_OPTION_ABSTAIN';
        case VoteOption.VOTE_OPTION_NO:
            return 'VOTE_OPTION_NO';
        case VoteOption.VOTE_OPTION_NO_WITH_VETO:
            return 'VOTE_OPTION_NO_WITH_VETO';
        default:
            return 'UNKNOWN';
    }
}
var ProposalStatus;
(function (ProposalStatus) {
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_UNSPECIFIED"] = 0] = "PROPOSAL_STATUS_UNSPECIFIED";
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_DEPOSIT_PERIOD"] = 1] = "PROPOSAL_STATUS_DEPOSIT_PERIOD";
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_VOTING_PERIOD"] = 2] = "PROPOSAL_STATUS_VOTING_PERIOD";
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_PASSED"] = 3] = "PROPOSAL_STATUS_PASSED";
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_REJECTED"] = 4] = "PROPOSAL_STATUS_REJECTED";
    ProposalStatus[ProposalStatus["PROPOSAL_STATUS_FAILED"] = 5] = "PROPOSAL_STATUS_FAILED";
    ProposalStatus[ProposalStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ProposalStatus || (ProposalStatus = {}));
const baseTextProposal = { title: '', description: '' };
const TextProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseTextProposal);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseTextProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseTextProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        return message;
    },
};
var globalThis$1 = (() => {
    if (typeof globalThis$1 !== 'undefined')
        return globalThis$1;
    if (typeof self !== 'undefined')
        return self;
    if (typeof window !== 'undefined')
        return window;
    if (typeof global !== 'undefined')
        return global;
    throw 'Unable to locate global object';
})();
globalThis$1.atob ||
    (b64 => globalThis$1.Buffer.from(b64, 'base64').toString('binary'));
globalThis$1.btoa ||
    (bin => globalThis$1.Buffer.from(bin, 'binary').toString('base64'));
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseMsgSubmitProposal = { proposer: '' };
const MsgSubmitProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.content !== undefined) {
            Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.initialDeposit) {
            Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        if (message.proposer !== '') {
            writer.uint32(26).string(message.proposer);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgSubmitProposal);
        message.initialDeposit = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.content = Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.proposer = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgSubmitProposal);
        message.initialDeposit = [];
        if (object.content !== undefined && object.content !== null) {
            message.content = Any.fromJSON(object.content);
        }
        else {
            message.content = undefined;
        }
        if (object.initialDeposit !== undefined &&
            object.initialDeposit !== null) {
            for (const e of object.initialDeposit) {
                message.initialDeposit.push(Coin.fromJSON(e));
            }
        }
        if (object.proposer !== undefined && object.proposer !== null) {
            message.proposer = String(object.proposer);
        }
        else {
            message.proposer = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.content !== undefined &&
            (obj.content = message.content
                ? Any.toJSON(message.content)
                : undefined);
        if (message.initialDeposit) {
            obj.initialDeposit = message.initialDeposit.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.initialDeposit = [];
        }
        message.proposer !== undefined && (obj.proposer = message.proposer);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgSubmitProposal);
        message.initialDeposit = [];
        if (object.content !== undefined && object.content !== null) {
            message.content = Any.fromPartial(object.content);
        }
        else {
            message.content = undefined;
        }
        if (object.initialDeposit !== undefined &&
            object.initialDeposit !== null) {
            for (const e of object.initialDeposit) {
                message.initialDeposit.push(Coin.fromPartial(e));
            }
        }
        if (object.proposer !== undefined && object.proposer !== null) {
            message.proposer = object.proposer;
        }
        else {
            message.proposer = '';
        }
        return message;
    },
};
const baseMsgVote = { proposalId: long_1.UZERO, voter: '', option: 0 };
const MsgVote = {
    encode(message, writer = minimal.Writer.create()) {
        if (!message.proposalId.isZero()) {
            writer.uint32(8).uint64(message.proposalId);
        }
        if (message.voter !== '') {
            writer.uint32(18).string(message.voter);
        }
        if (message.option !== 0) {
            writer.uint32(24).int32(message.option);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgVote);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.proposalId = reader.uint64();
                    break;
                case 2:
                    message.voter = reader.string();
                    break;
                case 3:
                    message.option = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgVote);
        if (object.proposalId !== undefined && object.proposalId !== null) {
            message.proposalId = long_1.fromString(object.proposalId);
        }
        else {
            message.proposalId = long_1.UZERO;
        }
        if (object.voter !== undefined && object.voter !== null) {
            message.voter = String(object.voter);
        }
        else {
            message.voter = '';
        }
        if (object.option !== undefined && object.option !== null) {
            message.option = voteOptionFromJSON(object.option);
        }
        else {
            message.option = 0;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.proposalId !== undefined &&
            (obj.proposalId = (message.proposalId || long_1.UZERO).toString());
        message.voter !== undefined && (obj.voter = message.voter);
        message.option !== undefined &&
            (obj.option = voteOptionToJSON(message.option));
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgVote);
        if (object.proposalId !== undefined && object.proposalId !== null) {
            message.proposalId = object.proposalId;
        }
        else {
            message.proposalId = long_1.UZERO;
        }
        if (object.voter !== undefined && object.voter !== null) {
            message.voter = object.voter;
        }
        else {
            message.voter = '';
        }
        if (object.option !== undefined && object.option !== null) {
            message.option = object.option;
        }
        else {
            message.option = 0;
        }
        return message;
    },
};
const baseMsgDeposit = { proposalId: long_1.UZERO, depositor: '' };
const MsgDeposit = {
    encode(message, writer = minimal.Writer.create()) {
        if (!message.proposalId.isZero()) {
            writer.uint32(8).uint64(message.proposalId);
        }
        if (message.depositor !== '') {
            writer.uint32(18).string(message.depositor);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgDeposit);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.proposalId = reader.uint64();
                    break;
                case 2:
                    message.depositor = reader.string();
                    break;
                case 3:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgDeposit);
        message.amount = [];
        if (object.proposalId !== undefined && object.proposalId !== null) {
            message.proposalId = long_1.fromString(object.proposalId);
        }
        else {
            message.proposalId = long_1.UZERO;
        }
        if (object.depositor !== undefined && object.depositor !== null) {
            message.depositor = String(object.depositor);
        }
        else {
            message.depositor = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.proposalId !== undefined &&
            (obj.proposalId = (message.proposalId || long_1.UZERO).toString());
        message.depositor !== undefined && (obj.depositor = message.depositor);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgDeposit);
        message.amount = [];
        if (object.proposalId !== undefined && object.proposalId !== null) {
            message.proposalId = object.proposalId;
        }
        else {
            message.proposalId = long_1.UZERO;
        }
        if (object.depositor !== undefined && object.depositor !== null) {
            message.depositor = object.depositor;
        }
        else {
            message.depositor = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseMsgSubmitExecution = { executor: '' };
const MsgSubmitExecution = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.content !== undefined) {
            Any.encode(message.content, writer.uint32(10).fork()).ldelim();
        }
        if (message.executor !== '') {
            writer.uint32(18).string(message.executor);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMsgSubmitExecution);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.content = Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.executor = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMsgSubmitExecution);
        if (object.content !== undefined && object.content !== null) {
            message.content = Any.fromJSON(object.content);
        }
        else {
            message.content = undefined;
        }
        if (object.executor !== undefined && object.executor !== null) {
            message.executor = String(object.executor);
        }
        else {
            message.executor = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.content !== undefined &&
            (obj.content = message.content
                ? Any.toJSON(message.content)
                : undefined);
        message.executor !== undefined && (obj.executor = message.executor);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMsgSubmitExecution);
        if (object.content !== undefined && object.content !== null) {
            message.content = Any.fromPartial(object.content);
        }
        else {
            message.content = undefined;
        }
        if (object.executor !== undefined && object.executor !== null) {
            message.executor = object.executor;
        }
        else {
            message.executor = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseCommunityPoolSpendProposal = {
    title: '',
    description: '',
    recipient: '',
};
const CommunityPoolSpendProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== '') {
            writer.uint32(26).string(message.recipient);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseCommunityPoolSpendProposal);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.recipient = reader.string();
                    break;
                case 4:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseCommunityPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseCommunityPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
const baseBurnedPoolSpendProposal = {
    title: '',
    description: '',
    recipient: '',
};
const BurnedPoolSpendProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== '') {
            writer.uint32(26).string(message.recipient);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseBurnedPoolSpendProposal);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.recipient = reader.string();
                    break;
                case 4:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseBurnedPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseBurnedPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseMintTreasurySupplyProposal = { title: '', description: '' };
const MintTreasurySupplyProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseMintTreasurySupplyProposal);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseMintTreasurySupplyProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseMintTreasurySupplyProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
const baseBurnTreasurySupplyProposal = { title: '', description: '' };
const BurnTreasurySupplyProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        for (const v of message.amount) {
            Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseBurnTreasurySupplyProposal);
        message.amount = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.amount.push(Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseBurnTreasurySupplyProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        if (message.amount) {
            obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);
        }
        else {
            obj.amount = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseBurnTreasurySupplyProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (const e of object.amount) {
                message.amount.push(Coin.fromPartial(e));
            }
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseParameterChangeProposal = { title: '', description: '' };
const ParameterChangeProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        for (const v of message.changes) {
            ParamChange.encode(v, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseParameterChangeProposal);
        message.changes = [];
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.changes.push(ParamChange.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseParameterChangeProposal);
        message.changes = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.changes !== undefined && object.changes !== null) {
            for (const e of object.changes) {
                message.changes.push(ParamChange.fromJSON(e));
            }
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        if (message.changes) {
            obj.changes = message.changes.map(e => e ? ParamChange.toJSON(e) : undefined);
        }
        else {
            obj.changes = [];
        }
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseParameterChangeProposal);
        message.changes = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.changes !== undefined && object.changes !== null) {
            for (const e of object.changes) {
                message.changes.push(ParamChange.fromPartial(e));
            }
        }
        return message;
    },
};
const baseParamChange = { subspace: '', key: '', value: '' };
const ParamChange = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.subspace !== '') {
            writer.uint32(10).string(message.subspace);
        }
        if (message.key !== '') {
            writer.uint32(18).string(message.key);
        }
        if (message.value !== '') {
            writer.uint32(26).string(message.value);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseParamChange);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.subspace = reader.string();
                    break;
                case 2:
                    message.key = reader.string();
                    break;
                case 3:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseParamChange);
        if (object.subspace !== undefined && object.subspace !== null) {
            message.subspace = String(object.subspace);
        }
        else {
            message.subspace = '';
        }
        if (object.key !== undefined && object.key !== null) {
            message.key = String(object.key);
        }
        else {
            message.key = '';
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = String(object.value);
        }
        else {
            message.value = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.subspace !== undefined && (obj.subspace = message.subspace);
        message.key !== undefined && (obj.key = message.key);
        message.value !== undefined && (obj.value = message.value);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseParamChange);
        if (object.subspace !== undefined && object.subspace !== null) {
            message.subspace = object.subspace;
        }
        else {
            message.subspace = '';
        }
        if (object.key !== undefined && object.key !== null) {
            message.key = object.key;
        }
        else {
            message.key = '';
        }
        if (object.value !== undefined && object.value !== null) {
            message.value = object.value;
        }
        else {
            message.value = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const basePlan = { name: '', height: long_1.ZERO, info: '' };
const Plan = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.name !== '') {
            writer.uint32(10).string(message.name);
        }
        if (message.time !== undefined) {
            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
            writer.uint32(24).int64(message.height);
        }
        if (message.info !== '') {
            writer.uint32(34).string(message.info);
        }
        if (message.upgradedClientState !== undefined) {
            Any.encode(message.upgradedClientState, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, basePlan);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.height = reader.int64();
                    break;
                case 4:
                    message.info = reader.string();
                    break;
                case 5:
                    message.upgradedClientState = Any.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, basePlan);
        if (object.name !== undefined && object.name !== null) {
            message.name = String(object.name);
        }
        else {
            message.name = '';
        }
        if (object.time !== undefined && object.time !== null) {
            message.time = fromJsonTimestamp(object.time);
        }
        else {
            message.time = undefined;
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = long_1.fromString(object.height);
        }
        else {
            message.height = long_1.ZERO;
        }
        if (object.info !== undefined && object.info !== null) {
            message.info = String(object.info);
        }
        else {
            message.info = '';
        }
        if (object.upgradedClientState !== undefined &&
            object.upgradedClientState !== null) {
            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);
        }
        else {
            message.upgradedClientState = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.name !== undefined && (obj.name = message.name);
        message.time !== undefined && (obj.time = message.time.toISOString());
        message.height !== undefined &&
            (obj.height = (message.height || long_1.ZERO).toString());
        message.info !== undefined && (obj.info = message.info);
        message.upgradedClientState !== undefined &&
            (obj.upgradedClientState = message.upgradedClientState
                ? Any.toJSON(message.upgradedClientState)
                : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, basePlan);
        if (object.name !== undefined && object.name !== null) {
            message.name = object.name;
        }
        else {
            message.name = '';
        }
        if (object.time !== undefined && object.time !== null) {
            message.time = object.time;
        }
        else {
            message.time = undefined;
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = object.height;
        }
        else {
            message.height = long_1.ZERO;
        }
        if (object.info !== undefined && object.info !== null) {
            message.info = object.info;
        }
        else {
            message.info = '';
        }
        if (object.upgradedClientState !== undefined &&
            object.upgradedClientState !== null) {
            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);
        }
        else {
            message.upgradedClientState = undefined;
        }
        return message;
    },
};
const baseSoftwareUpgradeProposal = { title: '', description: '' };
const SoftwareUpgradeProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        if (message.plan !== undefined) {
            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseSoftwareUpgradeProposal);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.plan = Plan.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseSoftwareUpgradeProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.plan !== undefined && object.plan !== null) {
            message.plan = Plan.fromJSON(object.plan);
        }
        else {
            message.plan = undefined;
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.plan !== undefined &&
            (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseSoftwareUpgradeProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.plan !== undefined && object.plan !== null) {
            message.plan = Plan.fromPartial(object.plan);
        }
        else {
            message.plan = undefined;
        }
        return message;
    },
};
const baseCancelSoftwareUpgradeProposal = { title: '', description: '' };
const CancelSoftwareUpgradeProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseCancelSoftwareUpgradeProposal);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseCancelSoftwareUpgradeProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseCancelSoftwareUpgradeProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        return message;
    },
};
function toTimestamp(date) {
    const seconds = numberToLong(date.getTime() / 1000);
    const nanos = (date.getTime() % 1000) * 1000000;
    return { seconds, nanos };
}
function fromTimestamp(t) {
    let millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === 'string') {
        return new Date(o);
    }
    else {
        return fromTimestamp(Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return long_1.fromNumber(number);
}
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const baseAddFeeExcludedMessageProposal = {
    title: '',
    description: '',
    messageType: '',
};
const AddFeeExcludedMessageProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        if (message.messageType !== '') {
            writer.uint32(26).string(message.messageType);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseAddFeeExcludedMessageProposal);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.messageType = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseAddFeeExcludedMessageProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.messageType !== undefined && object.messageType !== null) {
            message.messageType = String(object.messageType);
        }
        else {
            message.messageType = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.messageType !== undefined &&
            (obj.messageType = message.messageType);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseAddFeeExcludedMessageProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.messageType !== undefined && object.messageType !== null) {
            message.messageType = object.messageType;
        }
        else {
            message.messageType = '';
        }
        return message;
    },
};
const baseRemoveFeeExcludedMessageProposal = {
    title: '',
    description: '',
    messageType: '',
};
const RemoveFeeExcludedMessageProposal = {
    encode(message, writer = minimal.Writer.create()) {
        if (message.title !== '') {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== '') {
            writer.uint32(18).string(message.description);
        }
        if (message.messageType !== '') {
            writer.uint32(26).string(message.messageType);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal.Reader ? input : new minimal.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = Object.assign({}, baseRemoveFeeExcludedMessageProposal);
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.messageType = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        const message = Object.assign({}, baseRemoveFeeExcludedMessageProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = '';
        }
        if (object.messageType !== undefined && object.messageType !== null) {
            message.messageType = String(object.messageType);
        }
        else {
            message.messageType = '';
        }
        return message;
    },
    toJSON(message) {
        const obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.messageType !== undefined &&
            (obj.messageType = message.messageType);
        return obj;
    },
    fromPartial(object) {
        const message = Object.assign({}, baseRemoveFeeExcludedMessageProposal);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = '';
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = '';
        }
        if (object.messageType !== undefined && object.messageType !== null) {
            message.messageType = object.messageType;
        }
        else {
            message.messageType = '';
        }
        return message;
    },
};
if (minimal.util.Long !== long_1) {
    minimal.util.Long = long_1;
    minimal.configure();
}

const defaultRegistryTypes = [
    ['/cosmos.bank.v1beta1.MsgMultiSend', MsgMultiSend],
    ["/mele.distribution.v1beta1.MsgFundCommunityPool", MsgFundCommunityPool],
    ["/mele.distribution.v1beta1.MsgSetWithdrawAddress", MsgSetWithdrawAddress],
    ["/mele.distribution.v1beta1.MsgWithdrawDelegatorReward", MsgWithdrawDelegatorReward],
    ["/mele.distribution.v1beta1.MsgWithdrawValidatorCommission", MsgWithdrawValidatorCommission],
    ["/mele.staking.v1beta1.MsgBeginRedelegate", MsgBeginRedelegate],
    ["/mele.staking.v1beta1.MsgCreateValidator", MsgCreateValidator],
    ["/mele.staking.v1beta1.MsgDelegate", MsgDelegate],
    ["/mele.staking.v1beta1.MsgEditValidator", MsgEditValidator],
    ["/mele.staking.v1beta1.MsgUndelegate", MsgUndelegate],
    ["/mele.treasury.v1beta1.MsgAddOperator", MsgAddOperator],
    ["/mele.treasury.v1beta1.MsgRemoveOperator", MsgRemoveOperator],
    ["/mele.treasury.v1beta1.MsgDisburse", MsgDisburse],
    ["/mele.treasury.v1beta1.MsgCancelDisbursement", MsgCancelDisbursement],
    ["/mele.treasury.v1beta1.MsgApproveDisbursement", MsgApproveDisbursement],
    ["/mele.treasury.v1beta1.MsgBurn", MsgBurn],
    ["/mele.treasury.v1beta1.MsgCancelBurn", MsgCancelBurn],
    ["/mele.treasury.v1beta1.MsgApproveBurn", MsgApproveBurn],
    ["/mele.gov.v1beta1.TextProposal", TextProposal],
    ["/mele.gov.v1beta1.MsgSubmitProposal", MsgSubmitProposal],
    ["/mele.gov.v1beta1.MsgVote", MsgVote],
    ["/mele.gov.v1beta1.MsgDeposit", MsgDeposit],
    ["/mele.control.v1beta1.MsgSubmitExecution", MsgSubmitExecution],
    ["/mele.distribution.v1beta1.CommunityPoolSpendProposal", CommunityPoolSpendProposal],
    ["/mele.distribution.v1beta1.BurnedPoolSpendProposal", BurnedPoolSpendProposal],
    ["/mele.treasury.v1beta1.BurnTreasurySupplyProposal", BurnTreasurySupplyProposal],
    ["/mele.treasury.v1beta1.MintTreasurySupplyProposal", MintTreasurySupplyProposal],
    ["/cosmos.params.v1beta1.ParameterChangeProposal", ParameterChangeProposal],
    ["/mele.upgrade.v1beta1.SoftwareUpgradeProposal", SoftwareUpgradeProposal],
    ["/mele.upgrade.v1beta1.CancelSoftwareUpgradeProposal", CancelSoftwareUpgradeProposal],
    ["/mele.upgrade.v1beta1.Plan", Plan],
    ["/mele.fee.v1beta1.AddFeeExcludedMessageProposal", AddFeeExcludedMessageProposal],
    ["/mele.fee.v1beta1.RemoveFeeExcludedMessageProposal", RemoveFeeExcludedMessageProposal],
];
function createDefaultRegistry() {
    return new protoSigning.Registry(defaultRegistryTypes);
}
const registry = createDefaultRegistry();
const getRegistry = () => {
    return registry;
};

class Broadcast {
    constructor(transport, query, signer, fee, opts) {
        this._transport = transport;
        this._query = query;
        this._signer = signer;
        this._fee = fee;
        this._options = opts;
    }
    get signer() {
        return this._signer;
    }
    get query() {
        return this._query;
    }
    safeBroadcast(tx) {
        const txEvents = new TransactionEvents();
        this._transport
            .broadcastRawMsgBytesSync(tx)
            .then((result) => {
            txEvents.emitHash(result.hash);
            txEvents.emitReceipt(result);
            promiseRetry__default['default']((retry, num) => {
                if (num === 1) {
                    return retry();
                }
                return this._transport.tx(result.hash).catch(retry);
            }, {
                retries: this._options.txConfirmTries,
                factor: 1,
                minTimeout: this._options.txConfirmInterval,
                maxTimeout: this._options.txConfirmInterval,
            }).then(value => {
                if (value && value.tx_result && value.tx_result.code !== 0) {
                    txEvents.emitError(new BroadcastError(BroadCastErrorEnum.DeliverTx, value.tx_result.log, value.tx_result.code));
                }
                else {
                    txEvents.emitConfirmation(value);
                }
            }, err => { });
        })
            .catch((err) => {
            if (err.data && err.data.indexOf('Tx already exists in cache') >= 0) {
                txEvents.emitError(new BroadcastError(BroadCastErrorEnum.CheckTx, err.data, err.code || 0));
            }
            else if (err.code && err.message) {
                txEvents.emitError(new BroadcastError(BroadCastErrorEnum.CheckTx, err.message, err.code));
            }
            else {
                txEvents.emitError(new BroadcastError(BroadCastErrorEnum.CheckTx, 'Unknown error ocurred while broadcasting transaction.', -1));
            }
        });
        return txEvents;
    }
    sign(messages, fee, memo) {
        return __awaiter(this, void 0, void 0, function* () {
            let signerAddress = this._signer.getAddress();
            const { accountNumber, sequence } = yield this._query.getAccSignInfo(signerAddress);
            const chainId = this._options.chainId;
            const accountFromSigner = this.signer
                .getAccounts()
                .find(account => account.address === signerAddress);
            if (!accountFromSigner) {
                throw new Error('Failed to retrieve account from signer');
            }
            const pubkey = protoSigning.encodePubkey(amino.encodeSecp256k1Pubkey(accountFromSigner.pubkey));
            const txBody = {
                messages: messages,
                memo: memo,
            };
            const txBodyBytes = getRegistry().encode({
                typeUrl: '/cosmos.tx.v1beta1.TxBody',
                value: txBody,
            });
            const gasLimit = build_4.fromString(fee.gas).toNumber();
            const authInfoBytes = protoSigning.makeAuthInfoBytes([pubkey], fee.amount, gasLimit, sequence);
            const signDoc = protoSigning.makeSignDoc(txBodyBytes, authInfoBytes, chainId, accountNumber);
            const { signature, signed } = yield this.signer.signDirect(signerAddress, signDoc);
            return TxRaw.fromPartial({
                bodyBytes: signed.bodyBytes,
                authInfoBytes: signed.authInfoBytes,
                signatures: [encoding.fromBase64(signature.signature)],
            });
        });
    }
    sendTransaction(messages) {
        return __awaiter(this, void 0, void 0, function* () {
            let fee = {
                amount: [
                    {
                        denom: 'umelc',
                        amount: '0',
                    },
                ],
                gas: String(Math.ceil(messages.length / 10) * 200000),
            };
            const txRaw = yield this.sign(messages, fee, 'sdk');
            const signedTx = Uint8Array.from(TxRaw.encode(txRaw).finish());
            return this.safeBroadcast(Buffer.from(signedTx).toString('base64'));
        });
    }
    calculateFees(messages) {
        return __awaiter(this, void 0, void 0, function* () {
            return this._fee.calculateFees(messages);
        });
    }
}

function isJsonRpcSuccess(response) {
    return 'result' in response;
}

const DefaultABCIQueryOptions = {
    height: '0',
    trusted: false,
};
class Rpc {
    constructor(nodeUrl) {
        this._nodeUrl = nodeUrl;
    }
    block(height) {
        return fetch__default['default'](this._nodeUrl, {
            headers: { 'Content-Type': 'text/json' },
            body: JSON.stringify({
                jsonrpc: '2.0',
                id: 'jsonrpc-client',
                method: 'block',
                params: {
                    height: String(height),
                },
            }),
            method: 'POST',
            mode: 'cors',
        })
            .then(response => response.json())
            .then((data) => {
            if (isJsonRpcSuccess(data)) {
                return data.result;
            }
            else {
                throw data.error;
            }
        });
    }
    status() {
        return fetch__default['default'](this._nodeUrl, {
            headers: { 'Content-Type': 'text/json' },
            body: JSON.stringify({
                jsonrpc: '2.0',
                id: 'jsonrpc-client',
                method: 'status',
            }),
            method: 'POST',
            mode: 'cors',
        })
            .then(response => response.json())
            .then((data) => {
            if (isJsonRpcSuccess(data)) {
                return data.result;
            }
            else {
                throw data.error;
            }
        });
    }
    abciQuery(path, key, opts = DefaultABCIQueryOptions) {
        return fetch__default['default'](this._nodeUrl, {
            headers: { 'Content-Type': 'text/json' },
            body: JSON.stringify({
                jsonrpc: '2.0',
                id: 'jsonrpc-client',
                method: 'abci_query',
                params: Object.assign(Object.assign({}, opts), { path, data: key }),
            }),
            method: 'POST',
            mode: 'cors',
        })
            .then(response => response.json())
            .then((data) => {
            if ('result' in data) {
                return data.result;
            }
            else {
                throw data.error;
            }
        });
    }
    broadcastTxSync(tx) {
        return fetch__default['default'](this._nodeUrl, {
            headers: { 'Content-Type': 'text/json' },
            body: JSON.stringify({
                jsonrpc: '2.0',
                id: 'jsonrpc-client',
                method: 'broadcast_tx_sync',
                params: {
                    tx: tx,
                },
            }),
            method: 'POST',
            mode: 'cors',
        })
            .then(response => response.json())
            .then((data) => {
            if (isJsonRpcSuccess(data)) {
                return data.result;
            }
            else {
                throw data.error;
            }
        });
    }
    tx(hash) {
        return fetch__default['default'](this._nodeUrl, {
            headers: { 'Content-Type': 'text/json' },
            body: JSON.stringify({
                jsonrpc: '2.0',
                id: 'jsonrpc-client',
                method: 'tx',
                params: {
                    hash: hash,
                },
            }),
            method: 'POST',
            mode: 'cors',
        })
            .then(response => response.json())
            .then((data) => {
            if (isJsonRpcSuccess(data)) {
                let res = {
                    hash: data.result.hash,
                    tx_result: data.result.tx_result,
                    height: data.result.height,
                    tx: data.result.tx,
                };
                return res;
            }
            else {
                throw data.error;
            }
        });
    }
}

class Transport {
    constructor(opt) {
        this._rpc = new Rpc(opt.nodeUrl);
        this._nodeUrl = opt.nodeUrl;
        this._lcdUrl = this._nodeUrl.replace('26657', '1317');
    }
    block(height) {
        return this._rpc.block(height).then(result => {
            return result;
        });
    }
    status() {
        return this._rpc.status().then(result => {
            return result;
        });
    }
    tx(hash) {
        return this._rpc.tx(String(Buffer.from(hash, 'hex').toString('base64'))).then(result => {
            return result;
        });
    }
    query(keys, data, storeName, subStoreName) {
        let path = `/custom/${storeName}/${subStoreName}`;
        keys.forEach(key => {
            path += '/' + key;
        });
        return this._rpc
            .abciQuery(path, Buffer.from(data, 'utf-8').toString('hex'))
            .then(result => {
            if (!result.response || !result.response.value) {
                throw new QueryError(result.response.log, result.response.code);
            }
            const jsonStr = Buffer.from(result.response.value, 'base64').toString('utf-8');
            return JSON.parse(jsonStr);
        });
    }
    lcdQuery(path) {
        return fetch__default['default'](this._lcdUrl + path)
            .then(response => response.json())
            .then(result => {
            return result;
        });
    }
    broadcastRawMsgBytesSync(tx) {
        return this._rpc.broadcastTxSync(tx).then(result => {
            if (result.code !== 0) {
                throw new BroadcastError(BroadCastErrorEnum.CheckTx, result.log, result.code);
            }
            return result;
        });
    }
}
class QueryError extends Error {
    constructor(log, code) {
        super(log);
        Object.setPrototypeOf(this, QueryError.prototype);
        this.code = code;
    }
}

class Transaction {
    constructor(msgs, sendTransaction, calculateFees) {
        this._msgs = msgs;
        this._sendTransaction = sendTransaction;
        this._calculateFees = calculateFees;
    }
    sendTransaction() {
        return this._sendTransaction(this._msgs);
    }
    calculateFees() {
        return __awaiter(this, void 0, void 0, function* () {
            return this._calculateFees(this._msgs);
        });
    }
}
class TransactionApi {
    constructor(broadcast) {
        this._broadcast = broadcast;
    }
    get broadcast() {
        return this._broadcast;
    }
}

class Bank extends TransactionApi {
    transfer(toAddress, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/cosmos.bank.v1beta1.MsgSend',
                value: {
                    fromAddress: senderAddress,
                    toAddress: toAddress,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class IndexerApi {
    static get(endpoint, action, query, data, headers) {
        return IndexerApi.call(endpoint, 'GET', action, query, data, headers);
    }
    static post(endpoint, action, query, data, headers) {
        return IndexerApi.call(endpoint, 'POST', action, query, data, headers);
    }
    static call(endpoint, method, action, query, data, headers) {
        let callHeaders = { 'Content-Type': 'application/json;charset=UTF-8' };
        if (headers) {
            for (let key of Object.keys(headers)) {
                callHeaders[key] = headers[key];
            }
        }
        const contents = {
            method: method || 'NO_METHOD_SPECIFIED',
            headers: callHeaders,
            cache: 'no-cache',
        };
        if (data) {
            contents.body = JSON.stringify(data);
        }
        if (query) {
            action = `${action}?${queryString__default['default'].stringify(query)}`;
        }
        let status;
        return fetch__default['default'](`${endpoint}/${action}`, contents)
            .then(response => {
            status = response.status;
            return response.json();
        })
            .then(json => {
            if (status >= 200 && status < 300) {
                return json;
            }
            const error = IndexerApi.identifyError(json);
            return Promise.reject(error);
        });
    }
    static identifyError(error) {
        if (!error || !error.error) {
            return 'Unknown error.';
        }
        return error.error;
    }
}

class Indexer {
    constructor(opts) {
        this._opts = opts;
    }
    transactions(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'txs', query);
        });
    }
    transaction(hash) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, `tx/${hash}`);
        });
    }
    transactionCount() {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, `txs/count`);
        });
    }
    latestBlock() {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'block/latest');
        });
    }
    block(height) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, `block/${height}`);
        });
    }
    chain() {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'chain/info');
        });
    }
    blockEvents(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'block_events', query);
        });
    }
    blocks(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'blocks', query);
        });
    }
    proposalVotes(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, `proposal_votes/${id}`);
        });
    }
    validator(validatorAddress) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, `validator/${validatorAddress}`);
        });
    }
    history(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'history', query);
        });
    }
    disbursements(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'disbursements', query);
        });
    }
    burns(query = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return IndexerApi.get(this._opts.endpoint, 'burns', query);
        });
    }
}

class Staking extends TransactionApi {
    createValidator(description, commission, minSelfDelegation, validator, pubkey, value) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.staking.v1beta1.MsgCreateValidator',
                value: {
                    description: description,
                    commission: commission,
                    minSelfDelegation: minSelfDelegation,
                    delegatorAddress: senderAddress,
                    validatorAddress: validator,
                    pubkey: pubkey,
                    value: value,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    editValidator(description, address, commissionRate, minSelfDelegation) {
        const msgs = [
            {
                typeUrl: '/mele.staking.v1beta1.MsgEditValidator',
                value: {
                    description: description,
                    validatorAddress: address,
                    commissionRate: commissionRate,
                    minSelfDelegation: minSelfDelegation,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    delegate(validator, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.staking.v1beta1.MsgDelegate',
                value: {
                    delegatorAddress: senderAddress,
                    validatorAddress: validator,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    undelegate(validator, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.staking.v1beta1.MsgUndelegate',
                value: {
                    delegatorAddress: senderAddress,
                    validatorAddress: validator,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    beginRedelegate(srcValidator, dstValidator, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.staking.v1beta1.MsgBeginRedelegate',
                value: {
                    delegatorAddress: senderAddress,
                    validatorSrcAddress: srcValidator,
                    validatorDstAddress: dstValidator,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class Distribution extends TransactionApi {
    withdrawDelegationReward(validator) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.distribution.v1beta1.MsgWithdrawDelegatorReward',
                value: {
                    delegatorAddress: senderAddress,
                    validatorAddress: validator,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    withdrawValidatorCommission(validator) {
        const msgs = [
            {
                typeUrl: '/mele.distribution.v1beta1.MsgWithdrawValidatorCommission',
                value: {
                    validatorAddress: validator,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    modifyWithdrawAddress(withdrawAddress) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.distribution.v1beta1.MsgSetWithdrawAddress',
                value: {
                    delegatorAddress: senderAddress,
                    withdrawAddress: withdrawAddress,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    fundCommunityPool(amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.distribution.v1beta1.MsgFundCommunityPool',
                value: {
                    amount: amount,
                    depositor: senderAddress,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class Treasury extends TransactionApi {
    addOperator(operator) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgAddOperator',
                value: {
                    sender: senderAddress,
                    operator: operator,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    removeOperator(operator) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgRemoveOperator',
                value: {
                    sender: senderAddress,
                    operator: operator,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    disburse(recipient, amount, reference) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgDisburse',
                value: {
                    operator: senderAddress,
                    recipient: recipient,
                    amount: amount,
                    reference: reference,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    approveDisbursement(recipient, scheduled_for) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgApproveDisbursement',
                value: {
                    manager: senderAddress,
                    recipient: recipient,
                    scheduledFor: scheduled_for,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    cancelDisbursement(recipient, scheduled_for) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgCancelDisbursement',
                value: {
                    manager: senderAddress,
                    recipient: recipient,
                    scheduledFor: scheduled_for,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    burn(amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgBurn',
                value: {
                    operator: senderAddress,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    approveBurn(scheduled_for) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgApproveBurn',
                value: {
                    manager: senderAddress,
                    scheduledFor: scheduled_for,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    cancelBurn(scheduled_for) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.treasury.v1beta1.MsgCancelBurn',
                value: {
                    manager: senderAddress,
                    scheduledFor: scheduled_for,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class Gov extends TransactionApi {
    vote(proposalId, option) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgVote',
                value: {
                    proposalId: long_1.fromNumber(proposalId),
                    voter: senderAddress,
                    option: option,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    deposit(proposalId, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgDeposit',
                value: {
                    proposalId: long_1.fromNumber(proposalId),
                    depositor: senderAddress,
                    amount: amount,
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitTextProposal(initialDeposit, title, description) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.gov.v1beta1.TextProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.gov.v1beta1.TextProposal',
                            value: {
                                title: title,
                                description: description,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitParameterChangeProposal(initialDeposit, title, description, changes) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',
                            value: {
                                title: title,
                                description: description,
                                changes: changes,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitCommunityPoolSpendProposal(initialDeposit, title, description, recipient, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.distribution.v1beta1.CommunityPoolSpendProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.distribution.v1beta1.CommunityPoolSpendProposal',
                            value: {
                                title: title,
                                description: description,
                                recipient: recipient,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitBurnedPoolSpendProposal(initialDeposit, title, description, recipient, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.distribution.v1beta1.BurnedPoolSpendProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.distribution.v1beta1.BurnedPoolSpendProposal',
                            value: {
                                title: title,
                                description: description,
                                recipient: recipient,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitMintTreasurySupplyProposal(initialDeposit, title, description, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.treasury.v1beta1.MintTreasurySupplyProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.treasury.v1beta1.MintTreasurySupplyProposal',
                            value: {
                                title: title,
                                description: description,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitBurnTreasurySupplyProposal(initialDeposit, title, description, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.treasury.v1beta1.BurnTreasurySupplyProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.treasury.v1beta1.BurnTreasurySupplyProposal',
                            value: {
                                title: title,
                                description: description,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitSoftwareUpgradeProposal(initialDeposit, title, description, plan) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.upgrade.v1beta1.SoftwareUpgradeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.upgrade.v1beta1.SoftwareUpgradeProposal',
                            value: {
                                title: title,
                                description: description,
                                plan: {
                                    name: plan.name,
                                    height: plan.height,
                                    info: plan.info,
                                }
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitCancelSoftwareUpgradeProposal(initialDeposit, title, description) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.upgrade.v1beta1.CancelSoftwareUpgradeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.upgrade.v1beta1.CancelSoftwareUpgradeProposal',
                            value: {
                                title: title,
                                description: description,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitAddFeeExcludedMessageProposal(initialDeposit, title, description, messageType) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.fee.v1beta1.AddFeeExcludedMessageProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.fee.v1beta1.AddFeeExcludedMessageProposal',
                            value: {
                                title: title,
                                description: description,
                                messageType: messageType,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitRemoveFeeExcludedMessageProposal(initialDeposit, title, description, messageType) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.gov.v1beta1.MsgSubmitProposal',
                value: {
                    proposer: senderAddress,
                    initialDeposit: initialDeposit,
                    content: {
                        typeUrl: '/mele.fee.v1beta1.RemoveFeeExcludedMessageProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.fee.v1beta1.RemoveFeeExcludedMessageProposal',
                            value: {
                                title: title,
                                description: description,
                                messageType: messageType,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class Control extends TransactionApi {
    submitTextProposal(title, description) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.gov.v1beta1.TextProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.gov.v1beta1.TextProposal',
                            value: {
                                title: title,
                                description: description,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitParameterChangeProposal(title, description, changes) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/cosmos.params.v1beta1.ParameterChangeProposal',
                            value: {
                                title: title,
                                description: description,
                                changes: changes,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitCommunityPoolSpendProposal(title, description, recipient, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.distribution.v1beta1.CommunityPoolSpendProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.distribution.v1beta1.CommunityPoolSpendProposal',
                            value: {
                                title: title,
                                description: description,
                                recipient: recipient,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitBurnedPoolSpendProposal(title, description, recipient, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.distribution.v1beta1.BurnedPoolSpendProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.distribution.v1beta1.BurnedPoolSpendProposal',
                            value: {
                                title: title,
                                description: description,
                                recipient: recipient,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitMintTreasurySupplyProposal(title, description, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.treasury.v1beta1.MintTreasurySupplyProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.treasury.v1beta1.MintTreasurySupplyProposal',
                            value: {
                                title: title,
                                description: description,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitBurnTreasurySupplyProposal(title, description, amount) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.treasury.v1beta1.BurnTreasurySupplyProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.treasury.v1beta1.BurnTreasurySupplyProposal',
                            value: {
                                title: title,
                                description: description,
                                amount: amount,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitSoftwareUpgradeProposal(title, description, plan) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.upgrade.v1beta1.SoftwareUpgradeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.upgrade.v1beta1.SoftwareUpgradeProposal',
                            value: {
                                title: title,
                                description: description,
                                plan: {
                                    name: plan.name,
                                    height: plan.height,
                                    info: plan.info,
                                }
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitCancelSoftwareUpgradeProposal(title, description) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    executor: senderAddress,
                    content: {
                        typeUrl: '/mele.upgrade.v1beta1.CancelSoftwareUpgradeProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.upgrade.v1beta1.CancelSoftwareUpgradeProposal',
                            value: {
                                title: title,
                                description: description,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitAddFeeExcludedMessageProposal(title, description, messageType) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    proposer: senderAddress,
                    content: {
                        typeUrl: '/mele.fee.v1beta1.AddFeeExcludedMessageProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.fee.v1beta1.AddFeeExcludedMessageProposal',
                            value: {
                                title: title,
                                description: description,
                                messageType: messageType,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
    submitRemoveFeeExcludedMessageProposal(title, description, messageType) {
        let senderAddress = this.broadcast.signer.getAddress();
        const msgs = [
            {
                typeUrl: '/mele.control.v1beta1.MsgSubmitExecution',
                value: {
                    proposer: senderAddress,
                    content: {
                        typeUrl: '/mele.fee.v1beta1.RemoveFeeExcludedMessageProposal',
                        value: getRegistry().encode({
                            typeUrl: '/mele.fee.v1beta1.RemoveFeeExcludedMessageProposal',
                            value: {
                                title: title,
                                description: description,
                                messageType: messageType,
                            }
                        })
                    },
                },
            },
        ];
        return new Transaction(msgs, msgs => this.broadcast.sendTransaction(msgs), msgs => this.broadcast.calculateFees(msgs));
    }
}

class Fee {
    constructor(query, signer) {
        this.defaultParams = {
            fee_percentage: 0.002,
            minimum_fee: 200,
            maximum_fee: 100000000,
            fee_excluded_messages: [],
        };
        this.query = query;
        this.signer = signer;
        this._params = this.defaultParams;
    }
    loadParams() {
        return __awaiter(this, void 0, void 0, function* () {
            const feeParams = yield this.query.fee.getParameters();
            this._params.fee_percentage = Number(feeParams.fee_percentage || this._params.fee_percentage);
            this._params.minimum_fee = Number(((feeParams.minimum_fee || [])[0] || {}).amount || this._params.minimum_fee);
            this._params.maximum_fee = Number(((feeParams.maximum_fee || [])[0] || {}).amount || this._params.maximum_fee);
            let feeExcludedMessages = yield this.query.fee.getExcludedMessages();
            if (feeExcludedMessages && feeExcludedMessages.length) {
                this._params.fee_excluded_messages = feeExcludedMessages.map(msg => convertMessageType(msg));
            }
        });
    }
    calculateSystemFee(umelcFee, umelgFee) {
        return __awaiter(this, void 0, void 0, function* () {
            let feePercentage = this._params.fee_percentage;
            let systemFee = Math.trunc(umelcFee * feePercentage);
            if (umelgFee > 0) {
                let supply = yield this.query.supply.getSupplyOf('umelg');
                let melgSupply = new BigNumber__default['default'](supply.amount);
                let totalPercentage = new BigNumber__default['default'](umelgFee).div(melgSupply);
                let totalUmelgFee = totalPercentage.times(new BigNumber__default['default'](0.01)).times(melgSupply);
                let melgPriceInMelc = new BigNumber__default['default'](2.677);
                let totalUmelcFee = totalUmelgFee.times(melgPriceInMelc).integerValue().toNumber();
                systemFee = systemFee + totalUmelcFee;
            }
            let minimumFee = this._params.minimum_fee;
            let maximumFee = this._params.maximum_fee;
            if (systemFee < minimumFee) {
                systemFee = minimumFee;
            }
            if (systemFee > maximumFee) {
                systemFee = maximumFee;
            }
            return systemFee;
        });
    }
    calculateFees(msgs) {
        return __awaiter(this, void 0, void 0, function* () {
            let systemFees = 0;
            this.signer.getAddress();
            for (let i = 0; i < msgs.length; i++) {
                let msgFeeUmelc = 0;
                let msgFeeUmelg = 0;
                switch (msgs[i].typeUrl) {
                    case '/cosmos.bank.v1beta1.MsgSend':
                        msgFeeUmelc += Number((msgs[i].value.amount.find(z => z.denom === 'umelc') || {}).amount || 0);
                        msgFeeUmelg += Number((msgs[i].value.amount.find(z => z.denom === 'umelg') || {}).amount || 0);
                        break;
                    case '/cosmos.bank.v1beta1.MsgMultiSend':
                        for (let j = 0; j < msgs[i].value.inputs.length; j++) {
                            msgFeeUmelc += Number((msgs[i].value.amount.find(z => z.denom === 'umelc') || {}).amount || 0);
                            msgFeeUmelg += Number((msgs[i].value.amount.find(z => z.denom === 'umelg') || {}).amount || 0);
                        }
                        break;
                }
                if (this._params.fee_excluded_messages.indexOf(msgs[i].type) === -1) {
                    systemFees += yield this.calculateSystemFee(msgFeeUmelc, msgFeeUmelg);
                }
            }
            return systemFees;
        });
    }
}

class Mele {
    constructor(opt) {
        this._options = opt;
        this._transport = new Transport({
            nodeUrl: this._options.nodeUrl,
        });
        this._query = new Query(this._transport);
        this._signer = opt.signer || new DefaultSigner();
        this._chainId = opt.chainId || 'test';
        this._maxFeeInCoin = opt.maxFeeInCoin || 0;
        this._fee = new Fee(this._query, this._signer);
        this._broadcast = new Broadcast(this._transport, this._query, this._signer, this._fee, {
            txConfirmInterval: this._options.txConfirmInterval || 6000,
            txConfirmTries: this._options.txConfirmTries || 6,
            chainId: this._chainId,
            maxFeeInCoin: this._maxFeeInCoin,
        });
        this._indexer = new Indexer({
            endpoint: opt.indexerEndpoint || 'http://localhost:3100/api/v1',
        });
        this._bank = new Bank(this._broadcast);
        this._distribution = new Distribution(this._broadcast);
        this._staking = new Staking(this._broadcast);
        this._treasury = new Treasury(this._broadcast);
        this._gov = new Gov(this._broadcast);
        this._control = new Control(this._broadcast);
    }
    get query() {
        return this._query;
    }
    get signer() {
        return this._signer;
    }
    get bank() {
        return this._bank;
    }
    get staking() {
        return this._staking;
    }
    get distribution() {
        return this._distribution;
    }
    get treasury() {
        return this._treasury;
    }
    get governance() {
        return this._gov;
    }
    get control() {
        return this._control;
    }
    get indexer() {
        return this._indexer;
    }
    get fee() {
        return this._fee;
    }
}

exports.DefaultSigner = DefaultSigner;
exports.KeyPairSigner = KeyPairSigner;
exports.Mele = Mele;
exports.MnemonicSigner = MnemonicSigner;
exports.Utils = index;
//# sourceMappingURL=mele-sdk.cjs.js.map
