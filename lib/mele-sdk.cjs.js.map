{"version":3,"file":"mele-sdk.cjs.js","sources":["../src/transport/msgs.ts","../src/transport/codec.ts","../src/transport/encoder.ts","../src/utils/index.ts","../src/signer/default.ts","../src/signer/keyPair.ts","../src/signer/mnemonic.ts","../node_modules/tslib/tslib.es6.js","../src/query/index.ts","../src/broadcast/index.ts","../src/transport/jsonrpc2.ts","../src/transport/rpc.ts","../src/transport/index.ts","../src/mele.ts"],"sourcesContent":["import { TypeFactory, Types } from 'js-amino'\n\nexport const Msgs = {\n    'cosmos-sdk/MsgSend': TypeFactory.create('MsgSend', [\n        {\n            name: 'from_address',\n            type: Types.String,\n        },\n        {\n            name: 'to_address',\n            type: Types.String,\n        },\n        {\n            name: 'amount',\n            type: Types.ArrayStruct,\n        },\n    ]),\n}","import { Codec, TypeFactory, Types } from 'js-amino'\n\nimport { Msgs } from './msgs'\n\nexport const StdTx = TypeFactory.create('StdTx', [\n    {\n        name: 'msg',\n        type: Types.ArrayInterface,\n    },\n    {\n        name: 'fee',\n        type: Types.Struct,\n    },\n    {\n        name: 'signatures',\n        type: Types.ArrayStruct,\n    },\n    {\n        name: 'memo',\n        type: Types.String,\n    },\n])\n\nexport const Coin = TypeFactory.create('coin', [\n    {\n        name: 'denom',\n        type: Types.String,\n    },\n    {\n        name: 'amount',\n        type: Types.String,\n    },\n])\n\nexport const Fee = TypeFactory.create('fee', [\n    {\n        name: 'amount',\n        type: Types.ArrayStruct,\n    },\n    {\n        name: 'gas',\n        type: Types.Int64,\n    },\n])\n\nexport const PubKeySecp256k1 = TypeFactory.create(\n    'PubKeySecp256k1',\n    [\n        {\n            name: 's',\n            type: Types.ByteSlice,\n        },\n    ],\n    Types.ByteSlice\n)\n\nexport const Signature = TypeFactory.create('signature', [\n    {\n        name: 'pub_key',\n        type: Types.Interface,\n    },\n    {\n        name: 'signature',\n        type: Types.ByteSlice,\n    },\n])\n\nconst codec = new Codec()\n\ncodec.registerConcrete(new StdTx(), 'cosmos-sdk/StdTx', {})\ncodec.registerConcrete(new PubKeySecp256k1(), 'tendermint/PubKeySecp256k1', {})\nObject.keys(Msgs).forEach(msg => {\n    codec.registerConcrete(new Msgs[msg](), msg, {})\n})\n\nexport const marshalBinary = tx => {\n    return Buffer.from(codec.marshalBinary(tx)).toString('base64')\n}\n","import bech32 from 'bech32'\nimport shajs from 'sha.js'\n\nimport { Coin, Fee, PubKeySecp256k1, Signature, StdTx, marshalBinary } from './codec'\n\nexport function encodeAddr(addr: Buffer): string {\n    return bech32.encode(_PREFIX.PrefixAddress, bech32.toWords(addr))\n}\n\nexport function decodeAddr(addr: string): Buffer {\n    let decode = bech32.decode(addr)\n\n    if (decode.prefix !== _PREFIX.PrefixAddress) {\n        throw new Error(`invalid prefix: ${decode.prefix}\\n`)\n    }\n\n    return Buffer.from(bech32.fromWords(decode.words))\n}\n\n// TODO: Find a better solution\nexport const encodeMsg = (msg: any) => {\n    Object.keys(msg).forEach(k => {\n        if (typeof msg[k] === 'string' && msg[k].startsWith(_PREFIX.PrefixAddress)) {\n            msg[k] = decodeAddr(msg[k]).toJSON().data\n        } else if (typeof msg[k] == 'object' && !(msg[k] instanceof Array)) {\n            msg[k] = encodeMsg(msg[k])\n        } else if (typeof msg[k] == 'object' && msg[k] instanceof Array) {\n            msg[k] = msg[k].map(m => {\n                return encodeMsg(m)\n            })\n        }\n    })\n\n    return msg\n}\n\nexport function encodeSignMsg(\n    stdMsg: any[],\n    chainId: string,\n    seq: number,\n    accountNumber: number,\n    maxFeeInCoin: number\n): any {\n    const stdSignMsg = {\n        account_number: String(accountNumber),\n        chain_id: chainId,\n        fee: getFee(maxFeeInCoin),\n        memo: 'sdk',\n        msgs: stdMsg,\n        sequence: String(seq),\n    }\n\n    const jsonStr = JSON.stringify(number2StringInObject(sortObject(stdSignMsg)))\n\n    const signMsgHash = shajs('sha256')\n        .update(jsonStr)\n        .digest()\n\n    return signMsgHash\n}\n\nexport function encodeTx(\n    msgs: any[],\n    rawPubKey: string[],\n    rawSigDER: string[],\n    maxFeeInCoin: number\n): string {\n    let sigs = new Array<any>()\n\n    for (let _i = 0; _i < rawPubKey.length; _i++) {\n        const sig = new Signature(\n            new PubKeySecp256k1(Buffer.from(rawPubKey[_i], 'hex').toJSON().data),\n            Buffer.from(rawSigDER[_i], 'hex').toJSON().data\n        )\n\n        sigs.push(sig)\n    }\n\n    const fee = getFee(maxFeeInCoin)\n\n    let stdTx = new StdTx(msgs, fee, sigs, 'sdk')\n\n    return marshalBinary(stdTx)\n}\n\nexport const getFee = (maxFeeInCoin: number) => {\n    return new Fee([new Coin('umele', String(maxFeeInCoin))], 200000)\n}\n\nfunction sortObject(object) {\n    if (typeof object == 'string') {\n        return object\n    }\n    let sortedObj = {},\n        keys = Object.keys(object)\n\n    keys.sort(function(key1, key2) {\n        ; (key1 = key1.toLowerCase()), (key2 = key2.toLowerCase())\n        if (key1 < key2) return -1\n        if (key1 > key2) return 1\n        return 0\n    })\n\n    for (let index in keys) {\n        let key = keys[index]\n\n        if (typeof object[key] == 'object' && !(object[key] instanceof Array)) {\n            sortedObj[key] = sortObject(object[key])\n        } else if (typeof object[key] == 'object' && object[key] instanceof Array) {\n            sortedObj[key] = []\n\n            object[key].forEach(element => {\n                sortedObj[key].push(sortObject(element))\n            })\n        } else {\n            sortedObj[key] = object[key]\n        }\n    }\n\n    return sortedObj\n}\n\nfunction number2StringInObject(object): any {\n    let resultObj = {},\n        keys = Object.keys(object)\n\n    if (typeof object == 'string') {\n        return object\n    }\n\n    for (let index in keys) {\n        let key = keys[index]\n\n        if (typeof object[key] == 'object' && !(object[key] instanceof Array)) {\n            resultObj[key] = number2StringInObject(object[key])\n        } else if (typeof object[key] == 'object' && object[key] instanceof Array) {\n            resultObj[key] = []\n\n            object[key].forEach(element => {\n                resultObj[key].push(number2StringInObject(element))\n            })\n        } else {\n            if (typeof object[key] == 'number') {\n                resultObj[key] = String(object[key])\n            } else {\n                resultObj[key] = object[key]\n            }\n        }\n    }\n\n    return resultObj\n}\n\nconst _PREFIX = {\n    PrefixAddress: 'mele',\n}","import { ec as EC } from 'elliptic'\n\nimport * as bip32 from 'bip32'\nimport * as bip39 from 'bip39'\n\nimport bech32 from 'bech32'\nimport ripemd160 from 'ripemd160'\nimport shajs from 'sha.js'\n\nimport { encodeAddr } from '../transport/encoder'\n\nconst ec = new EC('secp256k1')\n\nexport interface KeyPair {\n    privateKey: string\n    publicKey: string\n}\n\nexport function generateMnemonic(): string {\n    return bip39.generateMnemonic(256)\n}\n\nexport function generateKeyPair(): KeyPair {\n    const keyPair = ec.genKeyPair()\n\n    const pubKey = keyPair.getPublic(true, 'hex')\n    const privKey = keyPair.getPrivate('hex')\n\n    return <KeyPair>{\n        privateKey: privKey,\n        publicKey: pubKey,\n    }\n}\n\nexport function deriveMasterKey(mnemonic: string): bip32.BIP32Interface {\n    bip39.validateMnemonic(mnemonic)\n\n    const seed = bip39.mnemonicToSeedSync(mnemonic)\n\n    return bip32.fromSeed(seed)\n}\n\nexport function deriveMasterKeyFromSeed(seed: Buffer): bip32.BIP32Interface {\n    return bip32.fromSeed(seed)\n}\n\nexport function deriveKeyPair(masterKey: bip32.BIP32Interface, hdPath: string): KeyPair {\n    const hdWallet = masterKey.derivePath(hdPath)\n\n    const privKey = hdWallet.privateKey\n\n    if (!privKey) {\n        throw new Error('Failed to derive key pair!')\n    }\n\n    const pubKey = ec.keyFromPrivate(privKey, 'hex')\n\n    return <KeyPair>{\n        privateKey: privKey.toString('hex'),\n        publicKey: pubKey.getPublic(true, 'hex'),\n    }\n}\n\nexport function deriveKeyPairFromAccountAndIndex(\n    masterKey: bip32.BIP32Interface,\n    account: number = 0,\n    index: number = 0\n): KeyPair {\n    const hdPath = `m/44'/118'/${account}'/0/${index}`\n\n    return deriveKeyPair(masterKey, hdPath)\n}\n\nexport function getAddressFromPublicKey(pubKey: string): string {\n    if (!validatePublicKey(pubKey)) {\n        throw new Error('Invalid public key.')\n    }\n\n    const hashResult = shajs('sha256')\n        .update(Buffer.from(pubKey, 'hex'))\n        .digest() as string\n\n    const addr = new ripemd160().update(hashResult).digest()\n\n    return encodeAddr(addr)\n}\n\nexport function getPublicKeyFromPrivateKey(privKey: string): string {\n    const key = ec.keyFromPrivate(privKey, 'hex')\n\n    return key.getPublic(true, 'hex')\n}\n\nexport function validatePublicKey(pubKey: string): boolean {\n    try {\n        const keyPair = ec.keyFromPublic(pubKey, 'hex')\n\n        return keyPair.validate().result\n    } catch (e) {\n        return false\n    }\n}","import { Signer } from './index'\r\n\r\nexport class DefaultSigner implements Signer {\r\n    getAddress(): string {\r\n        throw new Error('Signer not initialized.')\r\n    }\r\n\r\n    getPrivateKey(): string {\r\n        throw new Error('Signer not initialized.')\r\n    }\r\n\r\n    getPublicKey(): string {\r\n        throw new Error('Signer not initialized.')\r\n    }\r\n\r\n    signTransaction(\r\n        msgs: any[],\r\n        chainId: string,\r\n        fee: number,\r\n        sequence: number,\r\n        accountNumber: number\r\n    ): string {\r\n        throw new Error('Signer not initialized.')\r\n    }\r\n\r\n    signMessage(msg: string): string {\r\n        throw new Error('Signer not initialized.')\r\n    }\r\n}\r\n","import { ec as EC } from 'elliptic'\r\nimport shajs from 'sha.js'\r\n\r\nimport { encodeMsg, encodeSignMsg, encodeTx } from '../transport/encoder'\r\nimport * as Utils from '../utils'\r\nimport { Signer } from './index'\r\n\r\nconst ec = new EC('secp256k1')\r\n\r\nexport class KeyPairSigner implements Signer {\r\n    private _privateKey: string\r\n    private _publicKey: string\r\n    private _address: string\r\n\r\n    constructor(privateKey: string) {\r\n        this._privateKey = privateKey\r\n\r\n        this._publicKey = Utils.getPublicKeyFromPrivateKey(privateKey)\r\n        this._address = Utils.getAddressFromPublicKey(this._publicKey)\r\n    }\r\n\r\n    getAddress(): string {\r\n        return this._address\r\n    }\r\n\r\n    getPrivateKey(): string {\r\n        return this._privateKey\r\n    }\r\n\r\n    getPublicKey(): string {\r\n        return this._publicKey\r\n    }\r\n\r\n    signTransaction(\r\n        msgs: any[],\r\n        chainId: string,\r\n        fee: number,\r\n        sequence: number,\r\n        accountNumber: number\r\n    ): string {\r\n        let key = ec.keyFromPrivate(this._privateKey, 'hex')\r\n\r\n        const signMsgHash = encodeSignMsg(msgs, chainId, sequence, accountNumber, fee)\r\n\r\n        const sig = key.sign(signMsgHash, { canonical: true })\r\n\r\n        const sigDERHex = Buffer.from(\r\n            sig.r.toArray('be', 32).concat(sig.s.toArray('be', 32))\r\n        ).toString('hex')\r\n\r\n        const tx = encodeTx(\r\n            msgs.map(msg => encodeMsg(msg.value)),\r\n            new Array<string>(key.getPublic(true, 'hex')),\r\n            new Array<string>(sigDERHex),\r\n            fee\r\n        )\r\n\r\n        return tx\r\n    }\r\n\r\n    signMessage(msg: string): string {\r\n        const key = ec.keyFromPrivate(this._privateKey, 'hex')\r\n\r\n        const signByte = shajs('sha256')\r\n            .update(msg)\r\n            .digest()\r\n\r\n        const sig = key.sign(signByte, { canonical: true })\r\n\r\n        return Buffer.from(JSON.stringify(sig), 'utf-8').toString('hex')\r\n    }\r\n}\r\n","import { ec as EC } from 'elliptic'\r\nimport shajs from 'sha.js'\r\n\r\nimport { encodeMsg, encodeSignMsg, encodeTx } from '../transport/encoder'\r\nimport * as Utils from '../utils'\r\nimport { Signer } from './index'\r\n\r\nconst ec = new EC('secp256k1')\r\n\r\nexport class MnemonicSigner implements Signer {\r\n    private _privateKey: string\r\n    private _publicKey: string\r\n    private _address: string\r\n\r\n    constructor(mnemonic: string, path = `m/44'/118'/0'/0/0`) {\r\n        const masterKey = Utils.deriveMasterKey(mnemonic)\r\n        const keyPair = Utils.deriveKeyPair(masterKey, path)\r\n\r\n        this._privateKey = keyPair.privateKey\r\n\r\n        this._publicKey = keyPair.publicKey\r\n        this._address = Utils.getAddressFromPublicKey(this._publicKey)\r\n    }\r\n\r\n    getAddress(): string {\r\n        return this._address\r\n    }\r\n\r\n    getPrivateKey(): string {\r\n        return this._privateKey\r\n    }\r\n\r\n    getPublicKey(): string {\r\n        return this._publicKey\r\n    }\r\n\r\n    signTransaction(\r\n        msgs: any[],\r\n        chainId: string,\r\n        fee: number,\r\n        sequence: number,\r\n        accountNumber: number\r\n    ): string {\r\n        let key = ec.keyFromPrivate(this._privateKey, 'hex')\r\n\r\n        const signMsgHash = encodeSignMsg(msgs, chainId, sequence, accountNumber, fee)\r\n\r\n        const sig = key.sign(signMsgHash, { canonical: true })\r\n\r\n        const sigDERHex = Buffer.from(\r\n            sig.r.toArray('be', 32).concat(sig.s.toArray('be', 32))\r\n        ).toString('hex')\r\n\r\n        const tx = encodeTx(\r\n            msgs.map(msg => encodeMsg(msg.value)),\r\n            new Array<string>(key.getPublic(true, 'hex')),\r\n            new Array<string>(sigDERHex),\r\n            fee\r\n        )\r\n\r\n        return tx\r\n    }\r\n\r\n    signMessage(msg: string): string {\r\n        const key = ec.keyFromPrivate(this._privateKey, 'hex')\r\n\r\n        const signByte = shajs('sha256')\r\n            .update(msg)\r\n            .digest()\r\n\r\n        const sig = key.sign(signByte, { canonical: true })\r\n\r\n        return Buffer.from(JSON.stringify(sig), 'utf-8').toString('hex')\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as Types from '../common'\nimport { ITransport } from '../transport'\nimport { ResultBlock, ResultStatus, ResultTx } from '../transport/rpc'\n\nnamespace Keys {\n    export const Query = {\n        AuthModuleQueryPath: 'acc',\n        AccountPath: 'account'\n    }\n}\n\nexport default class Query {\n    private _transport: ITransport\n\n    constructor(transport: ITransport) {\n        this._transport = transport\n    }\n\n    getBlock(height: number): Promise<ResultBlock> {\n        return this._transport.block(height)\n    }\n\n    getStatus(): Promise<ResultStatus> {\n        return this._transport.status()\n    }\n\n    getTx(hash: string): Promise<ResultTx> {\n        return this._transport.tx(hash)\n    }\n\n    getAccountInfo(address: string): Promise<Types.Account> {\n        const AuthModuleQueryPath = Keys.Query.AuthModuleQueryPath\n        const AccountPath = Keys.Query.AccountPath\n\n        return this._transport.query<Types.Account>(\n            [],\n            JSON.stringify({ Address: address }),\n            AuthModuleQueryPath,\n            AccountPath\n        )\n    }\n\n    async getAccSignInfo(address: string): Promise<Types.AccSignInfo> {\n        let accountInfo = await this.getAccountInfo(address)\n\n        return <Types.AccSignInfo>{\n            address: accountInfo.value.address,\n            accountNumber: accountInfo.value.account_number,\n            sequence: accountInfo.value.sequence,\n        }\n    }\n\n}","  \nimport * as Types from '../common'\n\nimport { ITransport } from '../transport'\nimport { Coin } from '../transport/codec'\nimport { Msgs } from '../transport/msgs'\n\nconst _types = {\n    // bank\n    TransferMsgType: 'cosmos-sdk/MsgSend',\n}\n\nexport default class Broadcast {\n    private _transport: ITransport\n\n    constructor(transport: ITransport) {\n        this._transport = transport\n    }\n\n    makeTransferMsg(\n        fromAddress: string,\n        toAddress: string,\n        amount: Types.SDKCoin[],\n    ): any[] {\n        const msg = new Msgs[_types.TransferMsgType](\n            fromAddress,\n            toAddress,\n            amount.map(am => new Coin(am.denom, am.amount))\n        )\n\n        const msgs = [\n            {\n                type: _types.TransferMsgType,\n                value: msg,\n            },\n        ]\n\n        return msgs\n    }\n\n}","/** A String specifying the version of the JSON-RPC protocol. MUST be exactly \"2.0\". */\nexport type JsonRpcVersion = '2.0'\n\n/** Method names that begin with the word rpc followed by a period character\n * (U+002E or ASCII 46) are reserved for rpc-internal methods and extensions\n *  and MUST NOT be used for anything else. */\nexport type JsonRpcReservedMethod = string\n\n/** An identifier established by the Client that MUST contain a String, Number,\n *  or NULL value if included. If it is not included it is assumed to be a\n *  notification. The value SHOULD normally not be Null and Numbers SHOULD\n *  NOT contain fractional parts [2] */\nexport type JsonRpcId = number | string | void\n\n/**\n * method:\n * A String containing the name of the method to be invoked.\n * Method names that begin with the word rpc followed by a period\n * character (U+002E or ASCII 46) are reserved for rpc-internal methods\n * and extensions and MUST NOT be used for anything else.\n *\n * params:\n * A Structured value that holds the parameter values to be used\n * during the invocation of the method. This member MAY be omitted.\n */\nexport interface JsonRpcNotification<T> {\n    jsonrpc: JsonRpcVersion\n    method: string\n    params?: T\n}\n\nexport interface JsonRpcRequest<T> extends JsonRpcNotification<T> {\n    id: JsonRpcId\n}\n\nexport interface JsonRpcResponseBase {\n    jsonrpc: JsonRpcVersion\n    id: JsonRpcId\n}\n\nexport interface JsonRpcSuccess<T = object> extends JsonRpcResponseBase {\n    result: T\n}\nexport function isJsonRpcSuccess(response: object): response is JsonRpcSuccess {\n    return 'result' in response\n}\n\nexport interface JsonRpcFailure<T> extends JsonRpcResponseBase {\n    error: JsonRpcError<T>\n}\n\nexport interface JsonRpcError<T = object> {\n    /** Must be an integer */\n    code: number\n    message: string\n    data?: T\n}\n\nexport type JsonRpcResponse<T> = JsonRpcSuccess<T> | JsonRpcFailure<T>\n\n//\n// PRE-DEFINED ERROR CODES\n//\n//\n/** An error occurred on the server while parsing the JSON text. */\nexport const PARSE_ERROR = -32700\n/** The JSON sent is not a valid Request object. */\nexport const INVALID_REQUEST = -32600\n/** The method does not exist / is not available. */\nexport const METHOD_NOT_FOUND = -32601\n/** Invalid method parameter(s). */\nexport const INVALID_PARAMS = -32602\n/** Internal JSON-RPC error. */\nexport const INTERNAL_ERROR = -32603","import fetch from 'cross-fetch'\nimport { JsonRpcResponse, isJsonRpcSuccess } from './jsonrpc2'\n\nexport interface ResultTx {\n    hash: string\n    height: string\n    tx: string\n    tx_result: TxDetail\n}\n\nexport interface TxDetail {\n    code: number\n    data: any\n    log: string\n    info: string\n    gasWanted: string\n    gasUsed: string\n    events: TxEvent[]\n    codespace: string\n}\n\nexport interface TxEvent {\n    type: string\n    attributes: TxEventAttribute[]\n}\n\nexport interface TxEventAttribute {\n    key: string\n    value: string\n}\n\nexport interface ResultBlock {\n    block: Block\n    block_meta: BlockMeta\n}\n\nexport interface Block {\n    data: Data\n}\n\nexport interface BlockMeta {}\n\nexport interface Data {\n    txs: string[]\n}\n\nconst DefaultABCIQueryOptions = {\n    height: '0',\n    trusted: false,\n}\n\nexport interface ResultStatus {\n    node_info: NodeInfo\n    sync_info: SyncInfo\n}\n\nexport interface NodeInfo {\n    channels: string\n    id: string\n    listen_addr: string\n    moniker: string\n    network: string\n    version: string\n}\n\nexport interface SyncInfo {\n    catching_up: boolean\n    latest_app_hash: string\n    latest_block_hash: string\n    latest_block_height: string\n    latest_block_time: string\n}\n\nexport interface ResultABCIQuery {\n    response: ResponseQuery\n}\n\nexport interface ResponseQuery {\n    code: number\n    log: string\n    info: string\n    index: number\n    key: string\n    value: any\n    proof: string\n    height: number\n}\n\nexport interface ResultBroadcastTx {\n    code: number\n    data: any\n    log: string\n    hash: any\n}\n\nexport class Rpc {\n    private _nodeUrl: string\n\n    constructor(nodeUrl: string) {\n        this._nodeUrl = nodeUrl\n    }\n\n    block(height: number): Promise<ResultBlock> {\n        return fetch(this._nodeUrl, {\n            headers: { 'Content-Type': 'text/json' },\n            body: JSON.stringify({\n                jsonrpc: '2.0',\n                id: 'jsonrpc-client',\n                method: 'block',\n                params: {\n                    height: String(height),\n                },\n            }),\n            method: 'POST',\n            mode: 'cors',\n        })\n            .then(response => response.json())\n            .then((data: JsonRpcResponse<ResultBlock>) => {\n                if (isJsonRpcSuccess(data)) {\n                    return data.result as ResultBlock\n                } else {\n                    throw data.error\n                }\n            })\n    }\n\n    status(): Promise<ResultStatus> {\n        return fetch(this._nodeUrl, {\n            headers: { 'Content-Type': 'text/json' },\n            body: JSON.stringify({\n                jsonrpc: '2.0',\n                id: 'jsonrpc-client',\n                method: 'status',\n            }),\n            method: 'POST',\n            mode: 'cors',\n        })\n            .then(response => response.json())\n            .then((data: JsonRpcResponse<ResultStatus>) => {\n                if (isJsonRpcSuccess(data)) {\n                    return data.result as ResultStatus\n                } else {\n                    throw data.error\n                }\n            })\n    }\n\n    abciQuery(path: string, key: string, opts = DefaultABCIQueryOptions): Promise<ResultABCIQuery> {\n        return fetch(this._nodeUrl, {\n            headers: { 'Content-Type': 'text/json' },\n            body: JSON.stringify({\n                jsonrpc: '2.0',\n                id: 'jsonrpc-client',\n                method: 'abci_query',\n                params: {\n                    ...opts,\n                    path,\n                    data: key,\n                },\n            }),\n            method: 'POST',\n            mode: 'cors',\n        })\n            .then(response => response.json())\n            .then((data: JsonRpcResponse<ResultABCIQuery>) => {\n                if ('result' in data) {\n                    return data.result as ResultABCIQuery\n                } else {\n                    throw data.error\n                }\n            })\n    }\n\n    broadcastTxSync(tx: string): Promise<ResultBroadcastTx> {\n        return fetch(this._nodeUrl, {\n            headers: { 'Content-Type': 'text/json' },\n            body: JSON.stringify({\n                jsonrpc: '2.0',\n                id: 'jsonrpc-client',\n                method: 'broadcast_tx_sync',\n                params: {\n                    tx: tx,\n                },\n            }),\n            method: 'POST',\n            mode: 'cors',\n        })\n            .then(response => response.json())\n            .then((data: JsonRpcResponse<ResultBroadcastTx>) => {\n                if (isJsonRpcSuccess(data)) {\n                    return data.result as ResultBroadcastTx\n                } else {\n                    throw data.error\n                }\n            })\n    }\n\n    tx(hash: string): Promise<ResultTx> {\n        return fetch(this._nodeUrl, {\n            headers: { 'Content-Type': 'text/json' },\n            body: JSON.stringify({\n                jsonrpc: '2.0',\n                id: 'jsonrpc-client',\n                method: 'tx',\n                params: {\n                    hash: hash,\n                },\n            }),\n            method: 'POST',\n            mode: 'cors',\n        })\n            .then(response => response.json())\n            .then((data: JsonRpcResponse<ResultTx>) => {\n                if (isJsonRpcSuccess(data)) {\n                    let res: ResultTx = {\n                        hash: data.result.hash,\n                        tx_result: data.result.tx_result,\n                        height: data.result.height,\n                        tx: data.result.tx,\n                    }\n                    return res\n                } else {\n                    throw data.error\n                }\n            })\n    }\n}","import { ec as EC } from 'elliptic'\nimport { encodeMsg, encodeSignMsg, encodeTx } from './encoder'\nimport { Signer } from '../signer'\n\nimport {\n    ResultBlock,\n    ResultStatus,\n    ResultTx,\n    ResultBroadcastTx,\n    Rpc\n} from './rpc'\n\nexport interface ITransport {\n    block(height: number): Promise<ResultBlock>\n    status(): Promise<ResultStatus>\n    tx(hash: string): Promise<ResultTx>\n    query<T = any>(key: string[], data: string, storeName: string, subStoreName: string): Promise<T>\n    broadcastRawMsgBytesSync(tx: string): Promise<ResultBroadcastTx>\n}\n\nexport interface ITransportOptions {\n    nodeUrl: string\n    chainId?: string\n    timeout?: number\n    maxAttempts?: number\n    txConfirmInterval?: number\n    txConfirmMaxAttempts?: number\n    maxFeeInCoin?: number\n    signer?: Signer\n}\n\nexport class Transport implements ITransport {\n    private _rpc: Rpc\n\n    constructor(opt: ITransportOptions) {\n        this._rpc = new Rpc(opt.nodeUrl)\n    }\n\n    block(height: number): Promise<ResultBlock> {\n        return this._rpc.block(height).then(result => {\n            return result as ResultBlock\n        })\n    }\n\n    status(): Promise<ResultStatus> {\n        return this._rpc.status().then(result => {\n            return result as ResultStatus\n        })\n    }\n\n    tx(hash: string): Promise<ResultTx> {\n        return this._rpc.tx(String(Buffer.from(hash, 'hex').toString('base64'))).then(result => {\n            return result as ResultTx\n        })\n    }\n\n    query<T>(keys: string[], data: string, storeName: string, subStoreName: string): Promise<T> {\n        let path = `/custom/${storeName}/${subStoreName}`\n\n        keys.forEach(key => {\n            path += '/' + key\n        })\n\n        return this._rpc\n            .abciQuery(path, Buffer.from(data, 'utf-8').toString('hex'))\n            .then(result => {\n                if (!result.response || !result.response.value) {\n                    throw new QueryError(result.response.log, result.response.code)\n                }\n\n                const jsonStr = Buffer.from(result.response.value, 'base64').toString('utf-8')\n\n                return JSON.parse(jsonStr) as T\n            })\n    }\n\n    broadcastRawMsgBytesSync(tx: string): Promise<ResultBroadcastTx> {\n        return this._rpc.broadcastTxSync(tx).then(result => {\n            if (result.code !== 0) {\n                throw new BroadcastError(BroadCastErrorEnum.CheckTx, result.log, result.code)\n            }\n            return result\n        })\n    }\n}\n\nexport class QueryError extends Error {\n    readonly code: number\n\n    constructor(log: string, code: number) {\n        super(log)\n        Object.setPrototypeOf(this, QueryError.prototype)\n        this.code = code\n    }\n}\n\nexport enum BroadCastErrorEnum {\n    CheckTx,\n    DeliverTx,\n}\n\nexport class BroadcastError extends Error {\n    readonly code: number\n    readonly type: BroadCastErrorEnum\n\n    constructor(type: BroadCastErrorEnum, log: string, code: number) {\n        super(log)\n        Object.setPrototypeOf(this, BroadcastError.prototype)\n        this.type = type\n        this.code = code\n    }\n}","import Query from './query'\nimport Broadcast from './broadcast'\nimport { DefaultSigner, Signer } from './signer'\n\nimport * as Types from './common'\n\nimport {\n    BroadCastErrorEnum,\n    BroadcastError,\n    ITransport,\n    ITransportOptions,\n    Transport\n} from './transport'\n\nimport { ResultBroadcastTx } from './transport/rpc'\n\nexport class Mele {\n    private _options: ITransportOptions\n    private _transport: ITransport\n    private _query: Query\n    private _broadcast: Broadcast\n    private _signer: Signer\n    private _chainId: string\n    private _maxFeeInCoin: number\n\n    constructor(opt: ITransportOptions) {\n        this._options = opt\n        this._transport = new Transport(opt)\n        this._query = new Query(this._transport)\n        this._broadcast = new Broadcast(this._transport)\n        this._signer = opt.signer || new DefaultSigner()\n\n        this._chainId = opt.chainId || 'test'\n        this._maxFeeInCoin = opt.maxFeeInCoin || 0\n    }\n\n    get query(): Query {\n        return this._query\n    }\n\n    get signer(): Signer {\n        return this._signer\n    }\n\n    async transfer(\n        toAddress: string,\n        amount: Types.SDKCoin[],\n    ): Promise<ResultBroadcastTx> {\n        const msgs = this._broadcast.makeTransferMsg(this._signer.getAddress(), toAddress, amount)\n\n        return this.sendTransaction(msgs)\n    }\n\n    async sendTransaction(msgs: any[]): Promise<ResultBroadcastTx> {\n        return this._safeBroadcast([this._signer.getAddress()], accSignInfos => {\n            return this._signer.signTransaction(\n                msgs,\n                this._chainId,\n                this._maxFeeInCoin,\n                accSignInfos[0].sequence,\n                accSignInfos[0].accountNumber\n            )\n        })\n    }\n\n    async _safeBroadcast(signers: string[], makeTxFunc: Function): Promise<ResultBroadcastTx> {\n        let accSignInfos: Types.AccSignInfo[] = []\n\n        for (let i = 0; i < signers.length; i++) {\n            let seq = await this._query.getAccSignInfo(signers[i])\n\n            accSignInfos.push(seq)\n        }\n\n        let tx = makeTxFunc(accSignInfos)\n\n        let res: ResultBroadcastTx\n\n        try {\n            res = await this._transport.broadcastRawMsgBytesSync(tx)\n\n            return res\n        } catch (err) {\n            if (err.data && err.data.indexOf('Tx already exists in cache') >= 0) {\n                throw new BroadcastError(BroadCastErrorEnum.CheckTx, err.data, err.code || 0)\n            } else if (err.code && err.message) {\n                throw new BroadcastError(BroadCastErrorEnum.CheckTx, err.message, err.code)\n            } else {\n                throw new BroadcastError(\n                    BroadCastErrorEnum.CheckTx,\n                    'Unknown error ocurred while broadcasting transaction.',\n                    -1\n                )\n            }\n        }\n    }\n}"],"names":["TypeFactory","Types","Codec","EC","bip39.generateMnemonic","bip39.validateMnemonic","bip39.mnemonicToSeedSync","bip32.fromSeed","ec","Utils.getPublicKeyFromPrivateKey","Utils.getAddressFromPublicKey","Utils.deriveMasterKey","Utils.deriveKeyPair"],"mappings":";;;;;;;;;;;;;;;AAEO,MAAM,IAAI,GAAG;IAChB,oBAAoB,EAAEA,mBAAW,CAAC,MAAM,CAAC,SAAS,EAAE;QAChD;YACI,IAAI,EAAE,cAAc;YACpB,IAAI,EAAEC,aAAK,CAAC,MAAM;SACrB;QACD;YACI,IAAI,EAAE,YAAY;YAClB,IAAI,EAAEA,aAAK,CAAC,MAAM;SACrB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAEA,aAAK,CAAC,WAAW;SAC1B;KACJ,CAAC;CACL,CAAA;;ACbM,MAAM,KAAK,GAAGD,mBAAW,CAAC,MAAM,CAAC,OAAO,EAAE;IAC7C;QACI,IAAI,EAAE,KAAK;QACX,IAAI,EAAEC,aAAK,CAAC,cAAc;KAC7B;IACD;QACI,IAAI,EAAE,KAAK;QACX,IAAI,EAAEA,aAAK,CAAC,MAAM;KACrB;IACD;QACI,IAAI,EAAE,YAAY;QAClB,IAAI,EAAEA,aAAK,CAAC,WAAW;KAC1B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,IAAI,EAAEA,aAAK,CAAC,MAAM;KACrB;CACJ,CAAC,CAAA;AAEF,AAAO,MAAM,IAAI,GAAGD,mBAAW,CAAC,MAAM,CAAC,MAAM,EAAE;IAC3C;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAEC,aAAK,CAAC,MAAM;KACrB;IACD;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAEA,aAAK,CAAC,MAAM;KACrB;CACJ,CAAC,CAAA;AAEF,AAAO,MAAM,GAAG,GAAGD,mBAAW,CAAC,MAAM,CAAC,KAAK,EAAE;IACzC;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAEC,aAAK,CAAC,WAAW;KAC1B;IACD;QACI,IAAI,EAAE,KAAK;QACX,IAAI,EAAEA,aAAK,CAAC,KAAK;KACpB;CACJ,CAAC,CAAA;AAEF,AAAO,MAAM,eAAe,GAAGD,mBAAW,CAAC,MAAM,CAC7C,iBAAiB,EACjB;IACI;QACI,IAAI,EAAE,GAAG;QACT,IAAI,EAAEC,aAAK,CAAC,SAAS;KACxB;CACJ,EACDA,aAAK,CAAC,SAAS,CAClB,CAAA;AAED,AAAO,MAAM,SAAS,GAAGD,mBAAW,CAAC,MAAM,CAAC,WAAW,EAAE;IACrD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAEC,aAAK,CAAC,SAAS;KACxB;IACD;QACI,IAAI,EAAE,WAAW;QACjB,IAAI,EAAEA,aAAK,CAAC,SAAS;KACxB;CACJ,CAAC,CAAA;AAEF,MAAM,KAAK,GAAG,IAAIC,aAAK,EAAE,CAAA;AAEzB,KAAK,CAAC,gBAAgB,CAAC,IAAI,KAAK,EAAE,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAA;AAC3D,KAAK,CAAC,gBAAgB,CAAC,IAAI,eAAe,EAAE,EAAE,4BAA4B,EAAE,EAAE,CAAC,CAAA;AAC/E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG;IACzB,KAAK,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAA;CACnD,CAAC,CAAA;AAEF,AAAO,MAAM,aAAa,GAAG,EAAE;IAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;CACjE,CAAA;;oBCxE0B,IAAY;IACnC,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;CACpE;AAED,oBAA2B,IAAY;IACnC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IAEhC,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,CAAC,aAAa,EAAE;QACzC,MAAM,IAAI,KAAK,CAAC,mBAAmB,MAAM,CAAC,MAAM,IAAI,CAAC,CAAA;KACxD;IAED,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;CACrD;AAGD,AAAO,MAAM,SAAS,GAAG,CAAC,GAAQ;IAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;QACtB,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACxE,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAA;SAC5C;aAAM,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,EAAE;YAChE,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SAC7B;aAAM,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,YAAY,KAAK,EAAE;YAC7D,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,SAAS,CAAC,CAAC,CAAC,CAAA;aACtB,CAAC,CAAA;SACL;KACJ,CAAC,CAAA;IAEF,OAAO,GAAG,CAAA;CACb,CAAA;AAED,uBACI,MAAa,EACb,OAAe,EACf,GAAW,EACX,aAAqB,EACrB,YAAoB;IAEpB,MAAM,UAAU,GAAG;QACf,cAAc,EAAE,MAAM,CAAC,aAAa,CAAC;QACrC,QAAQ,EAAE,OAAO;QACjB,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC;QACzB,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC;KACxB,CAAA;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAE7E,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;SAC9B,MAAM,CAAC,OAAO,CAAC;SACf,MAAM,EAAE,CAAA;IAEb,OAAO,WAAW,CAAA;CACrB;AAED,kBACI,IAAW,EACX,SAAmB,EACnB,SAAmB,EACnB,YAAoB;IAEpB,IAAI,IAAI,GAAG,IAAI,KAAK,EAAO,CAAA;IAE3B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;QAC1C,MAAM,GAAG,GAAG,IAAI,SAAS,CACrB,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EACpE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAClD,CAAA;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACjB;IAED,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAA;IAEhC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IAE7C,OAAO,aAAa,CAAC,KAAK,CAAC,CAAA;CAC9B;AAED,AAAO,MAAM,MAAM,GAAG,CAAC,YAAoB;IACvC,OAAO,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;CACpE,CAAA;AAED,oBAAoB,MAAM;IACtB,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;QAC3B,OAAO,MAAM,CAAA;KAChB;IACD,IAAI,SAAS,GAAG,EAAE,EACd,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAE9B,IAAI,CAAC,IAAI,CAAC,UAAS,IAAI,EAAE,IAAI;QACvB,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;QAC1D,IAAI,IAAI,GAAG,IAAI;YAAE,OAAO,CAAC,CAAC,CAAA;QAC1B,IAAI,IAAI,GAAG,IAAI;YAAE,OAAO,CAAC,CAAA;QACzB,OAAO,CAAC,CAAA;KACX,CAAC,CAAA;IAEF,KAAK,IAAI,KAAK,IAAI,IAAI,EAAE;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QAErB,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,EAAE;YACnE,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;SAC3C;aAAM,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;YACvE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;YAEnB,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO;gBACvB,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAA;aAC3C,CAAC,CAAA;SACL;aAAM;YACH,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;SAC/B;KACJ;IAED,OAAO,SAAS,CAAA;CACnB;AAED,+BAA+B,MAAM;IACjC,IAAI,SAAS,GAAG,EAAE,EACd,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAE9B,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;QAC3B,OAAO,MAAM,CAAA;KAChB;IAED,KAAK,IAAI,KAAK,IAAI,IAAI,EAAE;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;QAErB,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,EAAE;YACnE,SAAS,CAAC,GAAG,CAAC,GAAG,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;SACtD;aAAM,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;YACvE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;YAEnB,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO;gBACvB,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAA;aACtD,CAAC,CAAA;SACL;aAAM;YACH,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,QAAQ,EAAE;gBAChC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;aACvC;iBAAM;gBACH,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;aAC/B;SACJ;KACJ;IAED,OAAO,SAAS,CAAA;CACnB;AAED,MAAM,OAAO,GAAG;IACZ,aAAa,EAAE,MAAM;CACxB,CAAA;;AChJD,MAAM,EAAE,GAAG,IAAIC,WAAE,CAAC,WAAW,CAAC,CAAA;AAO9B;IACI,OAAOC,sBAAsB,CAAC,GAAG,CAAC,CAAA;CACrC;AAED;IACI,MAAM,OAAO,GAAG,EAAE,CAAC,UAAU,EAAE,CAAA;IAE/B,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;IAC7C,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;IAEzC,OAAgB;QACZ,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KACpB,CAAA;CACJ;AAED,yBAAgC,QAAgB;IAC5CC,sBAAsB,CAAC,QAAQ,CAAC,CAAA;IAEhC,MAAM,IAAI,GAAGC,wBAAwB,CAAC,QAAQ,CAAC,CAAA;IAE/C,OAAOC,cAAc,CAAC,IAAI,CAAC,CAAA;CAC9B;AAED,iCAAwC,IAAY;IAChD,OAAOA,cAAc,CAAC,IAAI,CAAC,CAAA;CAC9B;AAED,uBAA8B,SAA+B,EAAE,MAAc;IACzE,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAE7C,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAA;IAEnC,IAAI,CAAC,OAAO,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAA;KAChD;IAED,MAAM,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;IAEhD,OAAgB;QACZ,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC;KAC3C,CAAA;CACJ;AAED,0CACI,SAA+B,EAC/B,UAAkB,CAAC,EACnB,QAAgB,CAAC;IAEjB,MAAM,MAAM,GAAG,cAAc,OAAO,OAAO,KAAK,EAAE,CAAA;IAElD,OAAO,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;CAC1C;AAED,iCAAwC,MAAc;IAClD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;KACzC;IAED,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;SAC7B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAClC,MAAM,EAAY,CAAA;IAEvB,MAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAA;IAExD,OAAO,UAAU,CAAC,IAAI,CAAC,CAAA;CAC1B;AAED,oCAA2C,OAAe;IACtD,MAAM,GAAG,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;IAE7C,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;CACpC;AAED,2BAAkC,MAAc;IAC5C,IAAI;QACA,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAE/C,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAA;KACnC;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,KAAK,CAAA;KACf;CACJ;;;;;;;;;;;;;;;IClGG,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;KAC7C;IAED,aAAa;QACT,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;KAC7C;IAED,YAAY;QACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;KAC7C;IAED,eAAe,CACX,IAAW,EACX,OAAe,EACf,GAAW,EACX,QAAgB,EAChB,aAAqB;QAErB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;KAC7C;IAED,WAAW,CAAC,GAAW;QACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;KAC7C;CACJ;;ACrBD,MAAMC,IAAE,GAAG,IAAIL,WAAE,CAAC,WAAW,CAAC,CAAA;AAE9B;IAKI,YAAY,UAAkB;QAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAA;QAE7B,IAAI,CAAC,UAAU,GAAGM,0BAAgC,CAAC,UAAU,CAAC,CAAA;QAC9D,IAAI,CAAC,QAAQ,GAAGC,uBAA6B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;KACjE;IAED,UAAU;QACN,OAAO,IAAI,CAAC,QAAQ,CAAA;KACvB;IAED,aAAa;QACT,OAAO,IAAI,CAAC,WAAW,CAAA;KAC1B;IAED,YAAY;QACR,OAAO,IAAI,CAAC,UAAU,CAAA;KACzB;IAED,eAAe,CACX,IAAW,EACX,OAAe,EACf,GAAW,EACX,QAAgB,EAChB,aAAqB;QAErB,IAAI,GAAG,GAAGF,IAAE,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QAEpD,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,CAAC,CAAA;QAE9E,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;QAEtD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CACzB,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAC1D,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAEjB,MAAM,EAAE,GAAG,QAAQ,CACf,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EACrC,IAAI,KAAK,CAAS,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAC7C,IAAI,KAAK,CAAS,SAAS,CAAC,EAC5B,GAAG,CACN,CAAA;QAED,OAAO,EAAE,CAAA;KACZ;IAED,WAAW,CAAC,GAAW;QACnB,MAAM,GAAG,GAAGA,IAAE,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QAEtD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;aAC3B,MAAM,CAAC,GAAG,CAAC;aACX,MAAM,EAAE,CAAA;QAEb,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;QAEnD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;KACnE;CACJ;;AChED,MAAMA,IAAE,GAAG,IAAIL,WAAE,CAAC,WAAW,CAAC,CAAA;AAE9B;IAKI,YAAY,QAAgB,EAAE,IAAI,GAAG,mBAAmB;QACpD,MAAM,SAAS,GAAGQ,eAAqB,CAAC,QAAQ,CAAC,CAAA;QACjD,MAAM,OAAO,GAAGC,aAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QAEpD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAA;QAErC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAA;QACnC,IAAI,CAAC,QAAQ,GAAGF,uBAA6B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;KACjE;IAED,UAAU;QACN,OAAO,IAAI,CAAC,QAAQ,CAAA;KACvB;IAED,aAAa;QACT,OAAO,IAAI,CAAC,WAAW,CAAA;KAC1B;IAED,YAAY;QACR,OAAO,IAAI,CAAC,UAAU,CAAA;KACzB;IAED,eAAe,CACX,IAAW,EACX,OAAe,EACf,GAAW,EACX,QAAgB,EAChB,aAAqB;QAErB,IAAI,GAAG,GAAGF,IAAE,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QAEpD,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,CAAC,CAAA;QAE9E,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;QAEtD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CACzB,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAC1D,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAEjB,MAAM,EAAE,GAAG,QAAQ,CACf,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EACrC,IAAI,KAAK,CAAS,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAC7C,IAAI,KAAK,CAAS,SAAS,CAAC,EAC5B,GAAG,CACN,CAAA;QAED,OAAO,EAAE,CAAA;KACZ;IAED,WAAW,CAAC,GAAW;QACnB,MAAM,GAAG,GAAGA,IAAE,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;QAEtD,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;aAC3B,MAAM,CAAC,GAAG,CAAC;aACX,MAAM,EAAE,CAAA;QAEb,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;QAEnD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;KACnE;CACJ;;AC1ED;;;;;;;;;;;;;;AAcA,AAoDA;AACA,AAAO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;IACzD,SAAS,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;QACvD,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;QAC3F,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;QAC9F,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;QAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;KACzE,CAAC,CAAC;CACN;;ACvED,IAAU,IAAI,CAKb;AALD,WAAU,IAAI;IACG,UAAK,GAAG;QACjB,mBAAmB,EAAE,KAAK;QAC1B,WAAW,EAAE,SAAS;KACzB,CAAA;CACJ,EALS,IAAI,KAAJ,IAAI,QAKb;AAED;IAGI,YAAY,SAAqB;QAC7B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;KAC9B;IAED,QAAQ,CAAC,MAAc;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KACvC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAA;KAClC;IAED,KAAK,CAAC,IAAY;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;KAClC;IAED,cAAc,CAAC,OAAe;QAC1B,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAA;QAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAA;QAE1C,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CACxB,EAAE,EACF,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EACpC,mBAAmB,EACnB,WAAW,CACd,CAAA;KACJ;IAEK,cAAc,CAAC,OAAe;;YAChC,IAAI,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA;YAEpD,OAA0B;gBACtB,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO;gBAClC,aAAa,EAAE,WAAW,CAAC,KAAK,CAAC,cAAc;gBAC/C,QAAQ,EAAE,WAAW,CAAC,KAAK,CAAC,QAAQ;aACvC,CAAA;SACJ;KAAA;CAEJ;;AC7CD,MAAM,MAAM,GAAG;IAEX,eAAe,EAAE,oBAAoB;CACxC,CAAA;AAED;IAGI,YAAY,SAAqB;QAC7B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;KAC9B;IAED,eAAe,CACX,WAAmB,EACnB,SAAiB,EACjB,MAAuB;QAEvB,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CACxC,WAAW,EACX,SAAS,EACT,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAClD,CAAA;QAED,MAAM,IAAI,GAAG;YACT;gBACI,IAAI,EAAE,MAAM,CAAC,eAAe;gBAC5B,KAAK,EAAE,GAAG;aACb;SACJ,CAAA;QAED,OAAO,IAAI,CAAA;KACd;CAEJ;;0BCGgC,QAAgB;IAC7C,OAAO,QAAQ,IAAI,QAAQ,CAAA;CAC9B;;ACCD,MAAM,uBAAuB,GAAG;IAC5B,MAAM,EAAE,GAAG;IACX,OAAO,EAAE,KAAK;CACjB,CAAA;AA8CD;IAGI,YAAY,OAAe;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;KAC1B;IAED,KAAK,CAAC,MAAc;QAChB,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE;YACxC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,gBAAgB;gBACpB,MAAM,EAAE,OAAO;gBACf,MAAM,EAAE;oBACJ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;iBACzB;aACJ,CAAC;YACF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CAAC;aACG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,CAAC,IAAkC;YACrC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,MAAqB,CAAA;aACpC;iBAAM;gBACH,MAAM,IAAI,CAAC,KAAK,CAAA;aACnB;SACJ,CAAC,CAAA;KACT;IAED,MAAM;QACF,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE;YACxC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,gBAAgB;gBACpB,MAAM,EAAE,QAAQ;aACnB,CAAC;YACF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CAAC;aACG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,CAAC,IAAmC;YACtC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,MAAsB,CAAA;aACrC;iBAAM;gBACH,MAAM,IAAI,CAAC,KAAK,CAAA;aACnB;SACJ,CAAC,CAAA;KACT;IAED,SAAS,CAAC,IAAY,EAAE,GAAW,EAAE,IAAI,GAAG,uBAAuB;QAC/D,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE;YACxC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,gBAAgB;gBACpB,MAAM,EAAE,YAAY;gBACpB,MAAM,oBACC,IAAI,IACP,IAAI,EACJ,IAAI,EAAE,GAAG,GACZ;aACJ,CAAC;YACF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CAAC;aACG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,CAAC,IAAsC;YACzC,IAAI,QAAQ,IAAI,IAAI,EAAE;gBAClB,OAAO,IAAI,CAAC,MAAyB,CAAA;aACxC;iBAAM;gBACH,MAAM,IAAI,CAAC,KAAK,CAAA;aACnB;SACJ,CAAC,CAAA;KACT;IAED,eAAe,CAAC,EAAU;QACtB,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE;YACxC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,gBAAgB;gBACpB,MAAM,EAAE,mBAAmB;gBAC3B,MAAM,EAAE;oBACJ,EAAE,EAAE,EAAE;iBACT;aACJ,CAAC;YACF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CAAC;aACG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,CAAC,IAAwC;YAC3C,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,MAA2B,CAAA;aAC1C;iBAAM;gBACH,MAAM,IAAI,CAAC,KAAK,CAAA;aACnB;SACJ,CAAC,CAAA;KACT;IAED,EAAE,CAAC,IAAY;QACX,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxB,OAAO,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE;YACxC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACjB,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,gBAAgB;gBACpB,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAE;oBACJ,IAAI,EAAE,IAAI;iBACb;aACJ,CAAC;YACF,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CAAC;aACG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,CAAC,IAA+B;YAClC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,GAAG,GAAa;oBAChB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;oBACtB,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBAChC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;oBAC1B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;iBACrB,CAAA;gBACD,OAAO,GAAG,CAAA;aACb;iBAAM;gBACH,MAAM,IAAI,CAAC,KAAK,CAAA;aACnB;SACJ,CAAC,CAAA;KACT;CACJ;;;IChMG,YAAY,GAAsB;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;KACnC;IAED,KAAK,CAAC,MAAc;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM;YACtC,OAAO,MAAqB,CAAA;SAC/B,CAAC,CAAA;KACL;IAED,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM;YACjC,OAAO,MAAsB,CAAA;SAChC,CAAC,CAAA;KACL;IAED,EAAE,CAAC,IAAY;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;YAChF,OAAO,MAAkB,CAAA;SAC5B,CAAC,CAAA;KACL;IAED,KAAK,CAAI,IAAc,EAAE,IAAY,EAAE,SAAiB,EAAE,YAAoB;QAC1E,IAAI,IAAI,GAAG,WAAW,SAAS,IAAI,YAAY,EAAE,CAAA;QAEjD,IAAI,CAAC,OAAO,CAAC,GAAG;YACZ,IAAI,IAAI,GAAG,GAAG,GAAG,CAAA;SACpB,CAAC,CAAA;QAEF,OAAO,IAAI,CAAC,IAAI;aACX,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC3D,IAAI,CAAC,MAAM;YACR,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;gBAC5C,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;aAClE;YAED,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;YAE9E,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAM,CAAA;SAClC,CAAC,CAAA;KACT;IAED,wBAAwB,CAAC,EAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;YAC5C,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,MAAM,IAAI,cAAc,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;aAChF;YACD,OAAO,MAAM,CAAA;SAChB,CAAC,CAAA;KACL;CACJ;AAED,gBAAwB,SAAQ,KAAK;IAGjC,YAAY,GAAW,EAAE,IAAY;QACjC,KAAK,CAAC,GAAG,CAAC,CAAA;QACV,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,CAAA;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;KACnB;CACJ;AAED,AAAA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC1B,iEAAO,CAAA;IACP,qEAAS,CAAA;CACZ,EAHW,kBAAkB,KAAlB,kBAAkB,QAG7B;AAED,oBAA4B,SAAQ,KAAK;IAIrC,YAAY,IAAwB,EAAE,GAAW,EAAE,IAAY;QAC3D,KAAK,CAAC,GAAG,CAAC,CAAA;QACV,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,CAAA;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;KACnB;CACJ;;;ICtFG,YAAY,GAAsB;QAC9B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAA;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAA;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;QAChD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,aAAa,EAAE,CAAA;QAEhD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,IAAI,MAAM,CAAA;QACrC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,YAAY,IAAI,CAAC,CAAA;KAC7C;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;KACrB;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAA;KACtB;IAEK,QAAQ,CACV,SAAiB,EACjB,MAAuB;;YAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAA;YAE1F,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;SACpC;KAAA;IAEK,eAAe,CAAC,IAAW;;YAC7B,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE,YAAY;gBAChE,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAC/B,IAAI,EACJ,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,aAAa,EAClB,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EACxB,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAChC,CAAA;aACJ,CAAC,CAAA;SACL;KAAA;IAEK,cAAc,CAAC,OAAiB,EAAE,UAAoB;;YACxD,IAAI,YAAY,GAAwB,EAAE,CAAA;YAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;gBAEtD,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACzB;YAED,IAAI,EAAE,GAAG,UAAU,CAAC,YAAY,CAAC,CAAA;YAEjC,IAAI,GAAsB,CAAA;YAE1B,IAAI;gBACA,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAA;gBAExD,OAAO,GAAG,CAAA;aACb;YAAC,OAAO,GAAG,EAAE;gBACV,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,IAAI,CAAC,EAAE;oBACjE,MAAM,IAAI,cAAc,CAAC,kBAAkB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAA;iBAChF;qBAAM,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE;oBAChC,MAAM,IAAI,cAAc,CAAC,kBAAkB,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,CAAA;iBAC9E;qBAAM;oBACH,MAAM,IAAI,cAAc,CACpB,kBAAkB,CAAC,OAAO,EAC1B,uDAAuD,EACvD,CAAC,CAAC,CACL,CAAA;iBACJ;aACJ;SACJ;KAAA;CACJ;;;;;;;;"}